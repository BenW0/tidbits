(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    375395,       8691]
NotebookOptionsPosition[    367000,       8420]
NotebookOutlinePosition[    367348,       8435]
CellTagsIndexPosition[    367305,       8432]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Ben\[CloseCurlyQuote]s Mathematica",
  FontSlant->"Italic"],
 " Trivia"
}], "Title",
 CellChangeTimes->{{3.5696849187237215`*^9, 3.569684925868534*^9}}],

Cell[TextData[StyleBox["Variable Naming", "Subtitle"]], "Subtitle",
 CellChangeTimes->{{3.6316596162074127`*^9, 3.631659617876616*^9}}],

Cell[TextData[{
 "Sometimes, i want to name variables using subscripts. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " treats these variables as lesser symbols, however. Note that:"
}], "Text",
 CellChangeTimes->{{3.6316596391262674`*^9, 3.6316596639599113`*^9}, {
  3.6316601267715583`*^9, 3.63166012752036*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["a", "1"], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["a", "2"], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", " ", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", " ", "6"}], ";"}]}], "Input",
 CellChangeTimes->{{3.631659667017517*^9, 3.63165969636857*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["a", "1"]], "Input",
 CellChangeTimes->{{3.6316597015185785`*^9, 3.6316597023453803`*^9}}],

Cell[BoxData[
 SubscriptBox["6", "1"]], "Output",
 CellChangeTimes->{3.6316597041237836`*^9}]
}, Open  ]],

Cell[TextData[{
 "Gives unexpected results. Instead, in the ",
 StyleBox["local notebook",
  FontSlant->"Italic"],
 " (this doesn\[CloseCurlyQuote]t carry across concurrently-open notebooks \
like most other things do), include the following two lines:"
}], "Text",
 CellChangeTimes->{{3.63165970768159*^9, 3.6316597116021967`*^9}, {
  3.6316597438020544`*^9, 3.6316597709575033`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<Notation`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Symbolize", "[", 
  RowBox[{"ParsedBoxWrapper", "[", 
   RowBox[{"SubscriptBox", "[", 
    RowBox[{"\"\<_\>\"", ",", "\"\<_\>\""}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6316597818367233`*^9, 3.631659781945923*^9}, {
  3.631659844410636*^9, 3.6316598516822486`*^9}, {3.63166012177555*^9, 
  3.63166012216555*^9}}],

Cell["Now, the same code behaves differently:", "Text",
 CellChangeTimes->{{3.6316598556446557`*^9, 3.631659861619466*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["a", "1"], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", " ", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["a", "2"], "=", 
   RowBox[{"{", 
    RowBox[{"3", ",", " ", "4"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", " ", "6"}], ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["a", "1"]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{3.6316598696906805`*^9, 3.631661320457028*^9}]
}, Open  ]],

Cell["\<\
Note that this does NOT work for superscripts (no idea why!). Source: \
http://stackoverflow.com/questions/5481216/subscripted-variables

This is till hokey. Even with this mod, if you have a variable the same name \
as a subscript sometimes the subscripted variable ceases to be a symbol.\
\>", "Text",
 CellChangeTimes->{{3.6316601305321655`*^9, 3.6316601463575935`*^9}, {
  3.6316612796747417`*^9, 3.631661315384019*^9}, {3.631661468161092*^9, 
  3.631661471626298*^9}}],

Cell[CellGroupData[{

Cell["Rules and Replacements", "Subtitle",
 CellChangeTimes->{{3.663174007615109*^9, 3.663174015026533*^9}}],

Cell[TextData[{
 "Substitute a value for ",
 StyleBox["x",
  FontSlant->"Italic"],
 " in an expression:"
}], "Text",
 CellChangeTimes->{{3.663174017640682*^9, 3.6631740298263793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "+", "1"}], "/.", 
  RowBox[{"x", "\[Rule]", "3"}]}]], "Input",
 CellChangeTimes->{{3.6631740320665073`*^9, 3.6631740369167852`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.66317403822886*^9}]
}, Open  ]],

Cell[TextData[{
 "WARNING: I\[CloseCurlyQuote]ve been bitten by ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s intelligence here. Say I have a vector equation, and I \
want to substitue a vector quantity:"
}], "Text",
 CellChangeTimes->{{3.663174055648856*^9, 3.663174100734435*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "+", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "/.", 
  RowBox[{"x", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6631741061847467`*^9, 3.663174112830127*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.66317411900848*^9}]
}, Open  ]],

Cell[TextData[{
 "That ought to have produced just a single {3,3,3}, right? Wrong! It turns \
out ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " trys to save us time by automatically expanding scalars in vector \
equations. That\[CloseCurlyQuote]s handy, for example, when I want to do"
}], "Text",
 CellChangeTimes->{{3.6631741157092915`*^9, 3.6631741686363187`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "1", ",", "1"}], "}"}], "+", "2"}]], "Input",
 CellChangeTimes->{{3.663174161781927*^9, 3.6631741642220664`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "3", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6631741647240953`*^9}]
}, Open  ]],

Cell[TextData[{
 "It sees the 2 as a scalar and automatically changes it to {2,2,2} for the \
vector add. BUT, in the above example, it thought ",
 StyleBox["x",
  FontSlant->"Italic"],
 " was a scalar, so before applying the rule, it change the expression to \
{x,x,x}+{1,1,1}, so ",
 StyleBox["x",
  FontSlant->"Italic"],
 " gets replaced 3 times! We can verify the rule has been executed three \
times using a delayed rule:"
}], "Text",
 CellChangeTimes->{{3.6631741717974997`*^9, 3.663174255337278*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "+", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "/.", 
  RowBox[{"x", "\[RuleDelayed]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "100"}], "}"}], "]"}], ",", "2", ",", "2"}], 
    "}"}]}]}]], "Input",
 CellChangeTimes->{{3.6631742571283803`*^9, 3.6631742795316615`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"68", ",", "3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6631742814677725`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting", "Subtitle",
 CellChangeTimes->{{3.5696849817166324`*^9, 3.5696849868178415`*^9}}],

Cell["Text on plots, matrix of plots, styles:", "Subsubtitle",
 CellChangeTimes->{{3.56968499145105*^9, 3.5696850028546696`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"styles", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"color", ",", "Thick"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", "color", ",", "Thick"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dotted", ",", "color", ",", "Thick"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"color", ",", 
        RowBox[{"{", 
         RowBox[{"Black", ",", "Gray"}], "}"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5696850819156084`*^9, 3.5696851222104793`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"k", "=", "0.1"}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5696850819156084`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"u1", "[", 
    RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"k", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "c", " ", "t"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "x"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"k", "/", "2"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Pi]", " ", "2", " ", "c", " ", "t"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Pi]", " ", "x"}], "]"}]}]}], "/.", 
    RowBox[{"c", "\[Rule]", "1"}]}]}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5696850819156084`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", 
               RowBox[{"fstar1", "[", 
                RowBox[{"x", "+", 
                 RowBox[{"c", " ", "t"}]}], "]"}]}], "/.", 
              RowBox[{"{", 
               RowBox[{"c", "\[Rule]", "1"}], "}"}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"1", "/", "2"}], " ", 
               RowBox[{"fstar1", "[", 
                RowBox[{"x", "-", 
                 RowBox[{"c", " ", "t"}]}], "]"}]}], "/.", 
              RowBox[{"{", 
               RowBox[{"c", "\[Rule]", "1"}], "}"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "250"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.14", ",", 
              RowBox[{"-", "0.08"}]}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "styles"}]}], "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             SuperscriptBox["f", "*"], 
             RowBox[{"(", 
              RowBox[{"x", "+", 
               RowBox[{"L", "*", "t"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0.15", ",", "0.09"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"1", "/", "2"}], 
             SuperscriptBox["f", "*"], 
             RowBox[{"(", 
              RowBox[{"x", "-", 
               RowBox[{"L", "*", "t"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0.85", ",", "0.09"}], "}"}]}], "]"}], "]"}]}], "}"}], 
       "]"}], ",", " ", 
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"u1", "[", 
            RowBox[{"x", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.15", ",", 
              RowBox[{"-", "0.15"}]}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "Thick"}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<t = ``\>\"", ",", "t"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.95", ",", "0.09"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"Graphics", "[", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<u(x,t)\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "0.14"}], "}"}]}], "]"}], "]"}]}], "}"}], 
       "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1", ",", 
      RowBox[{"1", "/", "5"}]}], "}"}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
itj/ASLmAyc=
           "]]}, 
         {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
          LineBox[CompressedData["
1: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
itj/ASLmAyc=
           "]]}}, InsetBox[
         FractionBox[
          RowBox[{
           SuperscriptBox["f", "*"], " ", "x"}], "2"], {0.15, 0.09}], InsetBox[
         FractionBox[
          RowBox[{
           SuperscriptBox["f", "*"], " ", "x"}], "2"], {0.85, 0.09}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.14, -0.08}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {133.33333333333334, -83.87604133034286}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
GJ0W/9KBBmVxQT8lkoO97kXBg0fI76iFPT0PEzmwLgx6W29D6s/h3EjzQw6e
i/n0yJP73nptx485PRzYpgx7u5L3CT5Rr5LKPg48BtpsVmrQqF0p5OkzwIGz
8J/mUnUaUousJidfc3A0a0j4hxoN7mfO845JDsI4fdmHt9MIfvLnUeofsj+d
kkl5cuS8esuf3CEzAa8jsqru5P3J0r1L+rPcBK6UrvvWyE9jmbM3O2frBJR/
7FAQW0HDy7bCer3yBPyLx8Qrl5J86ezVXag+gZzfyiNDC2i0r7PZ0mc6gXnG
cZLWXCZmnkaNeQRN4NaSIxXPi5h4taTvxK+LE4j3V56SymeiTk+ceylsAqdL
mLRXNhOx7Q9/3oqYQNOYl9HvdCZkupsF2xImcH3R69VD8UzYvJizT/rhBC6V
jx5r92GiacIne7R7AhHlZr+dlZhImm/jbSQ5id88AfvvZNTgz1Fh5S6pSZyU
qbv76XYNHOo7Zw5KT0LTeLZf/WYNFII1z+jLT2KHf3R/59UatPzd4q+9fRJc
axMl5oUafJv9HEDpTaJ2vlN+36EamH28HCHjPQm+C9ryUzzkfX2o5O7chkn4
vMqe85z8Xoheev58adMkLgbUhN0zqsbiXXvMXZ9MYr3zkK6XXjXmJnUve94+
iZKtb5J+ohqfDLm+D15MYoXua4M+qWp0Nm45aMCdxNVMp67Mz1WIzL35M1Xs
DXYJeQnTl6uw4HyQyQ7PN+id/850QVYlGA9s8scE3uJdZte3g93l8ErOjxKo
e4u7w5e+ZV4tRbVsOC//yXcYSi+y5RMvAb+Ol1ww3xQEBG3FLVKL8Oqfzh6/
qil8Hx6MvXAyHwW3IMmyeY9Fslt/8Zc8wOF8Ff41f94jbn6Ct+hgOgJD04Je
PfwAc3U1g53JycidXHOTT4+LyxHz3iQqRyI8NdRu6AAXgvez4xUaI+Bg9H5T
niEXcr9Wf2swiYB4VVWB/iEuvjt1KQ+duoIrMVZNkUe4aJClPvYWhuOEyo2P
i/24YPmXiHLkQrExRFB74T0ucNvd01L9HP5sP7esP4sLb9/nZ6JtzuLF+/Hu
e9lcyNsM7qs+54/YQ48O7y3kgr20fHpJuS/+yhidCq3iInd8SNTrXx+86oq5
Na+HC4Uvpa/4NF1RFvbtaE8fF1m2yR7fLzgjfpetdPoAF6Y7Q7+/qjgB3Uz5
Yo0hsp6ucdUkxWOo8G17EvSGi5GaDTx1mtZI/Ec5xnCKC6WeT3sOVZrDcyzF
ZAOXC5vylrYJRVNs0XMdpr9wUXZJ5fWsph7mz+nNiP3GReBfvZqF/2lhpGSX
s90sFwmB+rIb9qiiyjl9q8JvLlRGzLiWe+Rwfd2Smb9/uVhRknfe9bIu9X8Y
zBMi
           "]]}}, InsetBox[
         InterpretationBox["\<\"t = \\!\\(TraditionalForm\\`0\\)\"\>",
          StringForm["t = ``", 0],
          Editable->False], {0.95, 0.09}], 
        InsetBox["\<\"u(x,t)\"\>", {0.6, 0.14}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.15, -0.15}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {400., -83.87604133034286}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}]}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
IfF9dpbsX9CVoVCDPOb/AUCYS6U=
           "]]}, 
         {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
          LineBox[CompressedData["
1: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
ERKCWc6ESefD/wDqzhHU
           "]]}}, InsetBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["f", "*"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["L", "5"], "+", "x"}], ")"}]}], {0.15, 0.09}], 
        InsetBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["f", "*"], " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", 
            FractionBox["L", "5"]}], ")"}]}], {0.85, 0.09}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.14, -0.08}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {133.33333333333334, -251.62812399102856},
       ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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

           "]]}}, InsetBox[
         InterpretationBox["\<\"t = \\!\\(TraditionalForm\\`1\\/5\\)\"\>",
          StringForm["t = ``", 
           Rational[1, 5]],
          Editable->False], {0.95, 0.09}], 
        InsetBox["\<\"u(x,t)\"\>", {0.6, 0.14}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.15, -0.15}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {400., -251.62812399102856}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}]}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
BL3tS9unR8n4/wC8eIxE
           "]]}, 
         {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
          LineBox[CompressedData["
1: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
Fzc5LrHn/ZHgePWUrDZa8+4z92ec81dN+qSRpcaeGVZ82HP0/hPHnpBZpnX3
G4WwzWP6BljJZLRF8OmPktgy9877yMSTgYeY1lQZ7MDpCwuyD0gva509bzZh
O1+5/Or4PdLNJl5p51Zs2pi8alM0efjIjNgrVXa9r+0JswjS0M6cS2knNqPR
UIh6i9RyyJp6thvb812IctJNcosT7xfZPey8yq/WOZBc7+L2MXEf+77lFZ0r
AkjBY2W5YibsebJ1yjy+JOX4+sR7FthUtWVPsy+QP9wv3RKwwS577BY1cIYc
PNnqFWbPdkPJnsjjZOtpVUcuV7Y78y5TncnKs5FG106w+/V3pTTYkMXnRtXn
z7Ln363OajInMz0NZLy9sCnb39zL30cmetFWsvzYDn93bUCHvOO9MHvqKtvG
Yyd+qpLXfG0HhoLYfnNTuESW9LyUX+8Uxvbo0W0zgqTrZeGSL3fY3pV7kPbz
ndWVs+nW99lmqs22Vr3bd606mhHPNoVZsnzXO81A+QDj5P976Z1Avq5iUKB7
Zdr/7RMZPKYrGdxtsecF2xmhe3V4CP7QXbpvc9hWyrGLW0/8uxWrqJnP9nJF
6wglYvr29OrXJWx7bpDm0SL6I0yWlBD7vY5Hnq4xIJrvZIw/r2D75dQHjYNE
RTR3+8Ya9r7mWw+kWROFd53fJzWy85otri0ORMb9t1nibez9WW28NnmMePxA
PP7+F3Y+4TI7c4qIeOh9U5DJ9rk0jkhP4sojxrnbw+zvU+LUviJv4lyC0lHu
b2x/dYYwf8I5KWzv9Wm2P/D38V0nLFOGVP/8Yt9XeSDyaRBh8IS63ucv9jQt
/MKWUEIjLZFnmvIFz1+5UUwynFB4Ovfj9HJsirS83+UoQvy5Ve/wSmznvgsf
M+4SfC9yPzmvwlb1rHhqGUssZPIXdIliU5V4Pus+JKayTtIOr2fnXSl2Ho+J
vpyKiCZZbOE7XZuHkgjGJPfEjv+wPe/2h32iEWVKe01ilbCL/+xWq0wlcs+E
ZP3ajj394drVsXSClvmR30YTu1pDukn9OREztsyjWAeb8STw4YsXxA3FffUS
etgnhxa1jLII12eVd7pNsLNilO15XhGWw8undC2xlQQt8hJeE/ry+w+m2LBz
/8EDhvmEfGqVoKsrtk6lk8BkEbGmn+f8hxPs+13WfDJSQiyTMWyU92DvY+/R
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
DSt/LS2xoOqVB9dILx3+By+EHxg=
           "]]}}, InsetBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["f", "*"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "L"}], "5"], "+", "x"}], 
           ")"}]}], {0.15, 0.09}], InsetBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["f", "*"], " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", 
            FractionBox[
             RowBox[{"2", " ", "L"}], "5"]}], ")"}]}], {0.85, 0.09}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.14, -0.08}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {133.33333333333334, -419.3802066517143}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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

           "]]}}, InsetBox[
         InterpretationBox["\<\"t = \\!\\(TraditionalForm\\`2\\/5\\)\"\>",
          StringForm["t = ``", 
           Rational[2, 5]],
          Editable->False], {0.95, 0.09}], 
        InsetBox["\<\"u(x,t)\"\>", {0.6, 0.14}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.15, -0.15}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {400., -419.3802066517143}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}]}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwV13k4VF8fAHC0EEUi4kckSgiVtKi+FUWIQiSSELILJYpslaxlz75kn5lr
3x1kqZQsoSSEmTu2RhvS4j3vX/N8nufeO88557udbVauBtc42NjY0tjZ2P7/
q32N2dM0deGYxtbFrYwRGqxWF3UbFVGBxpHX1evHabAvPTGlTEQDFo9EsSvT
aaDzZrA0VcQIzm60SHaaoYGJzWLDExEbEPox2t2wSINPSg/UI0Q8oW044tko
JwEZm/XvPxIJhuglDcfkrQT4vkloNa4NBs8tcvFLEgQYh4xxbDcLgV0JYpxG
2whY/9Pdvy7lPsxa8dWskSbA+12s96xEKMzKBesZ7SLgfMyQg96OSNBQuNyZ
uo+AAK6ynaEisZBV0nh75DQBcpqPH5a6xcLw47Gf/2kR0BviOvWxIxaKNzmZ
mJwhQHqVQpHizTjQ9jn5okOHgPa/OYrveuOBgy9eP+oc/v/v8fslwpNgcF+I
Y7UpARV7vOK1JpKAI8HpR98lAizcDBfdDz+Fyu6li3NmBNDm+GpamU/BKyK1
VMSCAAPmwyMOp1IgqedewkUrAhI/+ahX/EsDm2NXc1wcCDghZpozciEdrKN/
Zdg5EjB96cAaLko6TF0cc7VwImDr7G1ryu4MWBA2DDzlQoDrdVUZtuEMkKxb
vv7LnYBNNrT8ZwezYJPm/o5FbwJsg7aaHrbJgrGDds/e3CagLiti3duoLFhT
xHE204cAm8+ODkuMLLBN1l04cQevx0JWQScuGzhWtmfZ+xNw0TSTNv81By6t
FWNqhxDA+mjEnSX6DCRqIq58xb5vwXXNUP0ZZNTQPsfdJ6DM2lW0MvYZGEyY
rv7wgABel6Mhvgdy4akrrUrzEQHP5udHFSxzoZCy7vYI9hGPnMMjD3PB8nvH
CY8wAhy8eeaPD+XCowM9ZHw4AW2BHy6tvZsHG7a+9WmPJMB8TURF1bM8kI1b
cTwbRcC3B8c3Xu/Kg6VCi6u92JIReW2dEvkw8E7QZCCagDsJXsqPW/LhoKGD
dfsTAvYW868V4yoE3wyVgtPxBLxUbLN8o1wI6hfqqBRsyxLvOj/TQjA20ynd
lEBAROWo2+fCQujt5y4dwGY2UT7mni2CE8HloaeTCPBXv6p68WYRMJWVvVKx
hdoFH69LL4LChjazb9jqnb6nneaLIPrFmy3xTwlI6z9TsiemGF6VntdqSyZg
/8W/PBN1xXBjIIljfQoBr4cI29jJYshVkK44h/1rVFhscT8Fusuesr/Djrbq
vJlvQQGfm/1PN6USsIPu12P6gALaUSw5fWyjafr9+vcUSFhnrdiCPeOU9NmZ
nQqXVjZkLmEHsnSPSMhRgctTbd3uNAKIH2VfA3ypsE6urToKW/OWne6+HCoE
r7m50oA98ks0b/I1FexiDQ5PY/OsBJhrbqXBQ4UjYUfScfxeN7FQOE2DtHIX
xlVs6XcKlvwuNJDVndQKwS45xmG1EEeDnUF6pbnYxwoGrT820OCV+hWpduxO
Acq1Jlw3wntfJE5gK0BzWe9aArS7jm5ewa4piK+oUiQgRFdIQjmDALYrAaqF
J3Hc9owVncI+LehUlWKM33sRfNQUO/yl8cEonEdzsZV9Dth9fidqAvwISFmQ
c/HBFlVROOyJ40COM2H9Q2zLKaE621wCMtUIagx2bhr7EdNaAvbYKBilYs8Z
ztbrdBGgU9z8JwdbZd3g0WPjBFQ+3ZFfiO3T2NyovIDf499kTMVu8iiG7dwl
8FZPbS2BzbkroWnz1hLwmzGtpmHrjQSc4NpbAsXDMk4U7NgYp5blUyUg5GGy
rQB7SMtEfc60BM6b5Q1mYW/7d6J11LkExlK7Ip9i25cpnOoNKAHN9Puno7Gp
9sLtrXElICMZ+i8I+4c4h2ZVQQmcOhpd6YWt1jfbUdBQApWuxi7XsAMfDmql
9JTAcHi8jCH2i6MtLyPpJRDezjN8DJv3e7F2wK8SEC5yfyyLfSE/odNjQyk4
yASf2oidcjlQ13ZbKYjeXVn8ic9nfJPzm4v7S8HHOCP/A7br3ZNvj14uhRHW
6VXJ2JV7d59Tdi8Fjpcdxd7Yf0jhHqmQUtAwtjE0wg41mOvlpJSCG5qOX4Pd
zfnecLmpFPJTDfZ9xPEm1NDybvZdKbSo9HZSsbN3Jg70/CmFurgt8/rYDX9O
DiXrlsGWgYF/t3F8ry7dbRZpWQZsmbxegK1tt2X4nmcZGNbY0TmwB3vmPl1L
KYPnsaFlQTifvuYmflaaLYPOyW//nHA+HjQPspJiK4ctt5JACtuP32VCULAc
+lwDvftx/vLcUaf/UiuHXOl9vfuxZc5/YT4PK4fgMy+3jiTi+PLXPGyXWQ4X
u911fbE3UjLCuKvKYavMdUEh7GUuQ8Xz4+VgvSR3QwPXk+6mKo+RgxXgc93u
cnAcrndfNrYF6FWA5NSXC7zYtWIOQjI2FZC7PYMRF4vrp7dYjWNUBTQK3nqb
GoPjTzng3xK9Am6tG6yKfoz332JIP+V3Bewaf+jAiW0Tvi8T+CvhE94UX1wP
9Zl09ftHKoHnQujay7heSmdohwrEVEKx3eZijggCuvgEBRWPV4HtJ6+m/9fv
50edr/VcqIIh24c1u7CrHdsrPR2rwEVd/NQtXO+zO7xN6+KrQNFncRMP7gfe
/p/StObw+zzUoM2BBEixcndZP60GA5/P4RW+BAiLs/muJapBfZo3fgT3n/U6
pq8L2qphi2SW4hrsxVwe1/n5avitd2qDDu5fry3cyu9q1oAVtdi3xpOAW12H
IPFHDbhRlJYknXG8KlbQX3LVguKlnzP7cH/MiVAO/y1WC3POtxs0cP/s0d35
weJULRTmnfp15ToB8p2CHjLxtfBc83n3nWsEjHawcksP1EHGjfOk/mVc/5qf
8b7xqYdxYQUuM9z/RyS3VfyLrAf52ecBu7QJ8LyXYqacXQ97p2UHfuL5IRNi
8mM668G5U5jvIZ4vfjfcO3lJrAGUJLrQkxO4/9ea3SQbGuC7n+TGEwfw+sv5
R9jZETxbVNvKjucZ8/DfRpNCCLrrrjo44nkny4be2a6A4O8Mm3KfOK5rm2tq
wi4iEG19ujNZlICTNy3jNhMIxH4xOtYLEqCaYpIbq9QEoiGir2/iunnVIvdy
/kgTdF9e+dnZS4Ng7f+SkqaaIPT+zm//umiQqxr97tGPJsiptB9X6KTBLK+P
jjN3M1yyy0+//ZwGN9HZQ3tVm0Ej4G70QBmuy5I/BesjmkGqQN8hLYYGlePq
r98eaYHCpN977PRpMKAV8DVCswVSwnRqNujQYIHaKKRr0AJ7kxbsabgvHPA9
dPWFXQtc8DI+OXmUBtUCSgtNT1qAiNOYFFCgQY2GqGQpswW2a6ZLhnHSoD53
3iM29jlo9a5/8rGWCi0Oqf+ZzraCdvWV+C0CVCibcnS0WGiFd6S2y8wGKuTY
H66zZmuDprZr0rVcVAixHbzkItgGj/b1Kej8o4CWFf/ToCNtYFxnXKs2RYG3
piFbqOFtELRuUdakkQLDWs6bV+1uh+XEivs+1yjwc8dRPopzB6wtzPeOyisG
jl9FG/+TeQXmoY0NAv2FoLpiWWlIfQ0/SmYSPozlw+tgla52ubcgszP5WGBD
LkhEz/wq+NINnh0W98aUc2BmcXSkX7kX3h/47a2Ulgk503WveCP7YM56KDz7
TCrwiuexJiffQVW10xFhqQQIv15hmyE9AEt3Nuw9Lv8YFo4XTdr7D8KjvFuJ
Qdwh4Lm3tVzo+XsYu51nvNjvBqPU1rCebUNw2ls+VtzmGvrt8C55l89HKBRK
Ym3qCkTyJzj/2dYNQ6Pp4vf7u6OQZtY2uxLhEThM35bSIxmPbolfkfpsPgpv
LI9q5q5KQQqzF3gGz44B/PgoJvo8AwnwzXO1Lo/BkGt4/OOYbLQaJdO2p3yG
O24T7cSqXOSoUvdhnc44CHuz7T/gnI+KzlhlNC6Mg4D8f2m6jwrRzxnRjYz4
CeAVCTHP1ChGsalkR0rSBCyzT7jH6xSjffrl/oYpE9DKmzZy36AYuZeeZTVl
TsCr7KFaU8tiNOd9ryu5eAJCJzzsOnyLEX0NI/x8ywRoOzGHm0uKUb9EybqG
uQnYYyfevVuUgioMNVfFakyCv0WKXO0wBT3UqQ4R05wE17q3O8THKchcfRfX
szOToLqBfc6XpCCOfTwbKvUm4WRaVL/CNwrS2/RW6P3FSThycJrbnJOKmN3G
cmLOk7BH6NUzljIVierZns+Jm4S/UiYtzHtUNHdqsE8hcRJa1R4otoZQUdNR
LeOKp5OwrDphkvyIimx3y5m1p09C0M2GsSOxVFS2/osNs2ASFhQDmnXzqEi3
08tboXESSk+fuJn+mor88dRUzpiE5yZHHvMK0lCvhb258tQkaAfyaelsoSFp
Lx2R4plJcLeI+BQkRkOvMvljsucnAeazspnSNCT4O/X+k+VJeP1nc/y9/TSU
T6l0duOlA/doBX3qAg11b2KqKajSofsEHyMjhoakdnUu5R2kg7xzAr9pAg15
AbViuxod5teLCG1IpiFRJ0+l/47TIersgwL7LBqyaWPbzq1Nh1b70oU5goaW
bolwMy/TwZR7jn/PGxra9kn7fXYIHc7ZnTHVZSfQoxY12oWHdMh+GZPPtYpA
3/IU7nOG0cGaMyy4ZTWBWm7wqjhG0+Ewl8u4IheBbLh6o/Ym0yFxf+7+aV4C
5e8z1Wwm6DB3JP/gzH8EUnxkVznykQ6RghXPhVQIFO96MSJ6hA5KoeKFwfsJ
tGJ0xubkZzq8lC4Sn1clULeE/KZcBh0aha8Xo0MEcq/44uz8lQ6cPD+vnwAC
lY95yfxZy4BGvcMeb88Q6PCB4FiRvQxYihTSFrpMoAErEdVUFQYsawS1S1kQ
yCOSOih5gAE34MH23VcIVEx/Lyp7hAFj8pX+alcJtDV2d6bqaQaeI12eH7tG
II6vAxTDSwzI2fAkatSJQGliTvqD5gzIvl207ZUzgdS02L9eusIAvRC++FIX
Anmmy6tY2eDnLffuuOtGIMbZe7VuLgx8n7lALnkQqLNwV0dEIAPCepfWhfkQ
yH6g0Z4/hAF3vi+8NfQl0GoOI+64BwxYSDf1Eb1DoGOmfmdTwhlwnOvzncy7
BCI4+/oK4xlQc0b8aPw9AsXa3BnrKGTAp9Utr0XvE0g5mj9Qh8IAi3KYacZ+
U5e7/S2NAZTYzHnbBwRaK9BjO1DOAMFsRBQ+JJB3s8zcZCMDPoup8YiEEch8
69tf7H0M8LeRO/84ikC8Ijcq6voZ8Id5QUgqmkDNApvdvd4zwOBWjR2BvWOd
GZP5iQHsx3YQbY8JxPrOGHjLZMBOm+yR3hgCZX0JfRI6w4DXVonrz8USyGhK
QU/9CwMKfbpevMKuHrnRVvmdAYnF6+eq4wgU+PJfWeo/BihwGM/eSiCQSmum
qwk7CRPf38V8xiYbNeT5V5PQotvUqZVIIN3yR1nB60jo/fV7ji+JQJvThR47
CpJw/Nqq1QFPCfQiqUZXRpiEqOVPqoPYPrHmXKMiJEidvfFHLplAI6FZ/gYS
JFhNLB3vxM73VHQ5JEfCA5f5qi8pBLrk2rPruwIJWe84Q/ekEmiDgye9WIkE
irgWyx37xpVac8n9JFxgBt+ZwZa+dHnL0AESjgVsz5FOw/FnxPYu5jAJ7vJK
VmbYatqndTiPkxCcPZjVjP1FY2pt80kSgqpEd3zFzoDwFp9TJHTaC5/Ymk4g
g8NKfipaJGyRlfqhhb16f++hL9ok2M5EgTt2pZLXz7yzJPTsrtyegH1dbkvJ
1XMk3GRNZ9Rid0lYyPZfIGFP6JDdMvY9UfbJyIskOP1SLxXKINC+zTnpWmYk
zG4RScD3M8Tg0zTjsCBh2a9USAs7kXtaqN6SBAnN63suY2uviej1siZhHX8C
6Yr9d0UpUskW7x9b/KF72MRy75kpexJq65t2RmJb/fRak+1Igrn7jdIkbMH5
Lc3mLiTse7N2CN+PUMd03R0hdxLyOYbS8P0J+dAtDnZ74P3o0GLH9zGkMMb+
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
vOrNQP8DxVJQKg==
           "]]}, 
         {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
          LineBox[CompressedData["
1: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
NbsjCZsNYkVGe0guxHNgPB1b4njZRHgX6Xxclu9uJjbRfUz6aif5/LfOmHYO
tqjKKvJWB+mkFHwjLR+7zlH/RUArWdZy196kCNtDuYeTfEeuOV2kuFTM7J8s
L93cTD7LGPtg9wI7RdAvl9JIchLLT9a8ZFq4Cm7Xkw4Dm0MqXmHLvNRolq0j
OfhNpDbVYqttDDa7U0vaUz3m6t4w78t3+cHxGrLE6FqTfwN2cU3IsAdJHo+o
ONv5jrn/7oQXEpVksUS3dlgb83mX21/eWkGurp4RUOzEFmhfn6D7gqTOSb2K
6WE+b7ZD/W2lJFvCgdj9/cz9ekqy1UpIWwUbly+D2EoqbZP+VJL11G0O/Y/M
5/fDNoGSR9qwPhmYH2P2+Xq6o3LJwrTXhdkTzP7Ig1C1bHKV5lCY1WfsdMYu
xfWZpHXfb0vWaWyt2XUhfBlkQcCG7aXfsMOs9FdOPyJZ1u/66/yd2V/Mzfmb
TOYbuKaT88x+xtX0yURSWV6SgAVss/CnWp4JJMlDH0SLzPcVzpIsGU/qfX8U
rLXMtLtDy6YYsqPbQbCWMgYUX/qtasNo0vaF6HNtVmwt3ocXByLI0fuDFq9X
YxfTLgXWhpNel5JnD3Jih1Wt0Z+/TP5ysI19s5bZ95z8ujqYvKy1WV6XG7um
n1b9JIBkl+59W8eLTalYk/nBl4xfnXTq0AZmn7uJwuFFCk1ZrW4QYPbLz5+3
OEk+bubPPCzI7B/0877kTMoXdmk1CjFz44wTIzbk87g7w3qizP3Xtm7SsCAJ
P7OQJjGmbx/mqjcgG614hQ0kmS6cC/fQJs1U28rfSjPn2eic3LmP7Be6fdRw
G9OaqfM8cqTrP6OfzTuY1h3ZZCJCfh1ee8doJ9PKKsLfOMiA2rcKLbuY7gvR
jv1WvZwZ3WKsxDTlWcPk6+qoSD3P1j3/dwDlh1o132l2ThOV/7s163PBgWSj
+uw2VaaVHJJ/jh6QVojQMdVgWmCG9zQLUcCn87Fdk+kaUuTaRkLlJ0uoGTDt
nfAweitBfqgR7dRm+hRL0Oc9hF5FaKW5LtOXNNhdCaIjmbDpOsy87+ha2shh
wvby0pyFAfP5fmHhP2lGjDpV3e02Yj6/z81OKccIr4OXdluZMPubDutoOBK/
ZDTa35sx+77z90pOEJc5Fs4ctWTOf01/s+U0wf6lfG3PUaZZpUb9fYj4lsAn
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
           "]]}}, InsetBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["f", "*"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"3", " ", "L"}], "5"], "+", "x"}], 
           ")"}]}], {0.15, 0.09}], InsetBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["f", "*"], " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", 
            FractionBox[
             RowBox[{"3", " ", "L"}], "5"]}], ")"}]}], {0.85, 0.09}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.14, -0.08}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {133.33333333333334, -587.1322893124}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
P3aAipo=
           "]]}}, InsetBox[
         InterpretationBox["\<\"t = \\!\\(TraditionalForm\\`3\\/5\\)\"\>",
          StringForm["t = ``", 
           Rational[3, 5]],
          Editable->False], {0.95, 0.09}], 
        InsetBox["\<\"u(x,t)\"\>", {0.6, 0.14}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.15, -0.15}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {400., -587.1322893124}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}]}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
           "]]}, 
         {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
          LineBox[CompressedData["
1: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
gthzx/9dOtlIXL1Y6XxFFLt6iPlIdB3x4+H1U2LitPxQbxe1WsK7QXPPR0ls
87aWUnYq4bq/t1tdBvtZ9jGhnNfEpGFa0a+j2NMd84P3XhH2oQ7RJXK08ZVY
Pya9JCw+Lp/YpYxNiY/t+f6CeL/11c7Ok9iCIq7ndUsJo+NhKzdUsJk7U06/
ohDaD9mfzWpgJ2vRb31ZSDTU94ZnaWMb7eir3pNPqKykWZ/RxW75KRBenEdU
CzoeZzHA7s8anb6YSygYHuRGRtjbtwvdOJ1DlIaszPuYYsvwtA+aZhHSRa9a
xM9iL6WGsDKmE2JbtUMTLLGpWx4IJCYROQocFlo22GE9jbuoD4i9zh+O/bXD
pqtIkT0YT6QmprM/d8C2e1ki+CSW4K13nHFyptUbOyY53yYSlg828F/CjotI
YH4YSbALfst464b9ZZ9xuWQ4ccegKijCk/b8jAfK1UIJxpAbZopXaONpnHGf
CSTKlud+IR9slVMXByJ9CUdn80xNf1r9ykReiRfB87FevTOQNh+hpwtlrkSD
4eGvpldp5uIZ3HAkfBtS7w+G0Fx71eygHSGiuEXuQhitnyWDuo458b74yuBU
OG2+fLu2lRoTEUKfrntG0saX4drZp03I/qct+j2aZrO7d7NUiHHWsrard2j9
wm5xzMoSiWH7vOhjaT7/20xKnFD/fmfH7fs036Iwle4iVi/9qOJIoNld/GIt
A5E7fMEuKZFm6j8Fl+kaM9NORoH/aLY7pvvhZQ1Dy/HCxyk009EdrUo+UXYi
10gy7f/5jxcOVp10fM7xg5JBs/hfhgczJ3nErj5SyKbZajLoEiOpIXVShXhM
s7eHhxYfyZfDZFI9j+bd+mzZ4iSRiJqY9mc0n7i1C+RI79fEj5gU0p7v9qma
ARXSTY/ED/3FtLhieOt+HdLR0Y2rthTa5/Vw3njEmDR61m3/ZCnNhrKZN81J
Ce0fmtzLafX16TkGdiRVFVX3by9p3rJ7WMKJtFJWzBlcRfPo7MlJV1KOBN9L
uhrafojqIbV7kUwyIqyiEe39C2oX5fmS6LmXNrHX0az0roE9iFQabfk0sYGW
v71xgi2UZP+3SW93M2092wjK994gcV05upLdiu0lkXZ+LYJUN5H+n3gHbX/R
l9/zvUXyPr/1JPkN7f1mloQZ3CUJvfUdleumzX/53GWNOFKP2pfo6ne09VRm
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
           "]]}}, InsetBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["f", "*"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"4", " ", "L"}], "5"], "+", "x"}], 
           ")"}]}], {0.15, 0.09}], InsetBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["f", "*"], " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", 
            FractionBox[
             RowBox[{"4", " ", "L"}], "5"]}], ")"}]}], {0.85, 0.09}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.14, -0.08}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {133.33333333333334, -754.8843719730858}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
           "]]}}, InsetBox[
         InterpretationBox["\<\"t = \\!\\(TraditionalForm\\`4\\/5\\)\"\>",
          StringForm["t = ``", 
           Rational[4, 5]],
          Editable->False], {0.95, 0.09}], 
        InsetBox["\<\"u(x,t)\"\>", {0.6, 0.14}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.15, -0.15}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {400., -754.8843719730858}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}]}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1:eJwV1nk4VU0YAHBbkSRrocj+qYRPpSx5bRVC9lTKEoUUUaENZS+UZBftwnVP
9lJnECXZ72LJUvblEp+UNr6595/7/J73nXdmzsyZOXLufraeXBwcHPc4OTjY
/+ae4+3VEw76e15UBPvG6pI8xlL+A5I7QJOq/99VI0m0PSctq0TSBEzrM+dN
jDajA82dxdmS9pB7WLJKzkgbHfL48SZJ0gMS50BnwdAM9alHG8dLnoeaI01e
gYaHUa74wag4yQh4pcuwigBvFM5X8k+sZDK0yqkpMXaFIKfDD6izc48h9ahJ
br1CHFq9HO68X4YK2VmrIz8a3kVKNjPjb2+WQtNiUomPYjoKatGGtG8vQS/h
4+NRoxy0vlS4n5MTQVrBYYsQh4eofNC4qVWvFqx4UnrvCT9BtT7ZGw6z6kDt
99UeMvoZWlDes5Zy5j1UFl+SVM98jrh+FghtUGqEhPPpksLpBUhr2bXcrqgJ
eJkBB9dspyALy+rreyubIK91SaZjNwWdyNx0cFdtEzxc0TmTpE9Bt3f1j0kx
m+Bk5aF4PnMKmvA7Kjn4twlYZVoVb10pKOuzwxV/y2YoNum1DImnIM5ac6N4
VjPo8Ots7R+iIAmhfMHQ783AspIWlp+gILXjqz75c7SAzhOlcbcZCjry632g
vVgLVHEvnGIsUlCp5t4nG/Ra4MrQ6MOba4rQyUfAl3+zBQ7eOlOwQ6sINUXs
aHm3pRUE73McvRhRhHTWfuS6s7MVSkvVWPdji1BeutuuowatIKy0I682oQjd
KErI/erQChmj0jm/03B+13iARDj2n/VXt1Nw/tbs9T6drRB9PuXhK3oRMpq4
Tqw0agNfGhJTlKWiELWWxtP726DkaKLpC0UqIgIlR9os2kDopGiW9mYqklmi
SmYeagOPjTIPdDWp6KdI33X1M22Qa4A2rDDB+Xq7HJzScL1HtAzKSSradHvq
5/OZNhBV/alll0dFpFvo8+L5Nri09UUyRyEVHd8uerhqsQ1Mlysoz6lUlMXU
qWziaoeuH3uEv5ZTkYR03MWv69pB+7Jq5r56KhLJV5nfAe2gXnXoicoXKlpR
58lCie0QsWDO38tPoMf3fmY2JLfDbEDD4bMCBDI5FX+gPb0dVm4Yi1xaQ6Dr
/GX5g4/awWqI67yEMIGWrHm8V1S2ww3DvGea6wm02PdwxPxzO5yPenyGQ4FA
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
           "]]}, 
         {GrayLevel[0], Thickness[Large], Dashing[{Small, Small}], 
          LineBox[CompressedData["
1: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
FgncX+6yB8sY6ujOgJzL1eIpqFmdoDCeoo6EUqI3XarA488cWasip442rDhe
caYOx/ePdd/T2o7UJxcY5kzcX5+DfxZ41NAJqoaQ1D9czqdZ581URmXHF1a3
cUxDzcQeVfeLymj18lcCt7ixGWq5p4WUUY3DXr5xvmnQW2uY4GPxH5LjN1oq
EcHlPS8X7vUoohFXyynTTdjTynvnpeSRrqDI5NKWaeCgjToVvZdDyZX0sSJV
XD/26wsnfzlkLGw3LL5zGoJ9/iXfZsqifHTy47Au9nBp+HymDDov6fXuug12
2cuxQeoG9KZh61u1ozjf5fNp+5Q2oI0XvtYPHsNuMNzr9GA9anvrW2PsiOOd
5J4W3ZNE6pcDykU9cXnijFBIgjj62Rqe8zwI96/6dKtnvyiyuGb82PEmtsTd
Un5vUZSnxP9QOAzXj/SI3M0pio4HxmT4R+PyPJONWzeLoKrNifeM7uPyHkJW
J1YIBYc9DOnNx877eE1QcxVa5cdr4kzB7Y156a+8L4DS3M8Jj1CxPxwpPTe3
EhUf0nz8tQR73rb7aDk/GhFqr+dC2Dv09Y3s+ZAv9+6YiFps6RWFS+940dL3
DFuBemylEvElLV4k3uU+IvYO+60gV4X8cnToAQffJhr2ta3liWt4UFfc6TYK
A/dnSCf/Wxw3cg1pSlHvwnY+TPoIc6MbrimbdPqwe6+YV0pxIWLztkOHR7GP
v10lYMaB1pY7xl7+g/OJz41bi/0mH+c1HPm9iL3c6GaP7S9yW9qWjUEcX4Fj
sfC7YNoCeTDwJzVyGfaumwoeW3+S1w3j2tPXYL+YTGu88Z1csWs+VUYYu5v+
o/XjHJmkZO+SI4odWRelqzNHUlf8N1cowa4/PK3C+40cbCVF6+SxF9w8siK/
kt61Cn37lbD/yWTK+02Tf4uicz4oY9e5Xxw+O0WKJR3RYGzF3lPxt+PMJGns
MH10bDf2r8zmU7mjJN3MRuacFrZx1PnmhhHSGV6NzepgKzt7fR7/Ql6VCw/4
o48ds10LGQyTlDGp9NWm2HK7Bix2fSYjM8Oc+s2xubyjVT0/ka5WU4qFlthv
iuTrTQbIDVVVhNlRbJf1S40OveSCj8IVqePYBqrRHAs9JE3xjvaUA7beW5N1
Wd1kdJz9mzsu7Pxa5WKCneRpo9e3HdywEx0Xk7oZpMGvzZYq7uz67yibC+nk
L5ffHz+cw7YSsK7y6yDdNVJn+QOwBZaNdK9qJo0mOcp7rmEPb+j5sP8DuTHb
/Xr+DWwLpwlKwjuSuWIPr0kotg/zYq7zG7KIzGqSiMAmqt1mh+rJ2Iu8CeNR
2GMRbvF+r8l9fcwNUXHYrEsa6u01pEyC7qBdArb/ZFKLCiL/7n+aq3wf+9Nb
VgGziiwhLqs3pmFvu5sTGVZBxrv1/UzOxJax38aKLCPPSu6rPpONXXNk9+28
ElIuVNSY9yl2ntxdQ80X5L8911d15rH7F3I2xJJKdk8NdTwtYJcnzIe4PCdL
Hh1KuVKIPePmzHr8jIw/Wnxi/wt2/it7FURzSS+B9fJrS9jz6bE85sUT0rj2
5tiXMnb88/+irz4ilzZbXQyrYuefzsgUyiR7Bl7usUXYwfdKXt5PJcsSZf8p
1GFnB6WIuyaRCQejXn+vZ4+nJSw44B55/t9MZP1b7PjoB+Ud8aRJsZ154nt2
PJ3B232HVHSvEXFtZucTLD0SEUlySCl372jD5tC9PfoslOxtj3vATWM7snef
VghZEf7zFI3Brh+x/Pep62SituOmx13s79Pquk3Mj/SZeTPt+5Ftzhmja77k
oRzVEoN+dv3Mf2nC50il40kBwp/Z7XVa48cnybXmn+7gEHt9/UmWpTmR/a/d
eIpG2PGiql0RduQr/+Z3IePseLnLd7UsyaStu+IsWWyvMw8VO0BeGMywkf3K
ju+QmRPeS5om80jOzrL9ytSMto1UNvUaqPnOts6pV1qyJA8n/Un8T7bFK7VE
VpGfSrU9nX6znVE4ozVbXeX5WG3bItvbXI5o11Ynb1w5v7TENvsnU/k/cuQa
XA==
           "]]}}, InsetBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["f", "*"], " ", 
          RowBox[{"(", 
           RowBox[{"L", "+", "x"}], ")"}]}], {0.15, 0.09}], InsetBox[
         RowBox[{
          FractionBox["1", "2"], " ", 
          SuperscriptBox["f", "*"], " ", 
          RowBox[{"(", 
           RowBox[{"x", "-", "L"}], ")"}]}], {0.85, 0.09}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.14, -0.08}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {133.33333333333334, -922.6364546337713}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}], InsetBox[
      GraphicsBox[{{{}, {}, 
         {GrayLevel[0], Thickness[Large], LineBox[CompressedData["
1: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
gjROx/bXAfj86RSMuAZ3gU6Y8IU3+P2rfTyV4R/eBetaOtaMe+PfDzzKVpEx
XXDxP96PfNhrKYVvcu92wfPLtZnmF/H9fvZF9sCzLrDTJJ+/cSfR8aCXtsco
XQACwZTD+P2teFXVAjLdMG7y8O68JR6v1MJNs83dcGqpKO+zBd6vofv2n97W
Df7zahMf8PvfYvTq+dU93SDZlD6Tgn8vjHS9jqw43A3VSs/E1xvj8/KzTmeb
TzeQnsO2LTr4fVBrKBd92w1lR8qFGMp4/XZvyrnT1A2hC0JRHttIZKt+PY6v
rRsuJviPLW0l0X7N3Y4cPd2gt+PPpY1b8P7Re7xuZqYbXh7tJA/JkCjRIty9
UbIH6nJMBvaIkCjf22DTZZ8e4BH6NSTxC6HBFw1xHTK9YB5jK5wVjhBlmoup
tqUX9DnkvD6FIEQqHzRJVu6F8G4eOdEghHLyG/ls9vaCN8fPjBA/hByfvovv
M+kFv8HNf7fi34ujWU2JY/690NoSW9VuiND0rZa7i629kG1hkHhpBUJ/3WkZ
W69+AvaXu/6cCyDQNl3uJZeaPtA9G/yIYlaHDj2SOf9SbACCel6pzA7UIH+p
s7Jf7AbhQeiPcO1zr5Ey03p1l+ln2Gi9oXErtRoJrZvlafjzGczPilv84KlC
XCijWC7zC4iyy6/TM61AHrtrelYdGYLgwmrdHY5lqOCwYw7xcwhq128a4gh6
ieanJPlHU4bBQ7u6pN+/GFVYHeJMNhgB32ZaBD9RgIKNIh6Uj46AUQDtoY9D
HpLpN+7OjfgKIfZ1IqTmE6S5NzxZQm0UFlXMdCvZHyE76fbf7NRRaNJ94+fj
mY3mm+OHvEPHQPzxiJ3d5zT8Hp25bCk/Dsmfxd8aqicjoYGKRxwN48BlXsr+
UP42WhEUekzj0gTYtw16FGVEo/I55m/kOwHKX8/WHAqNRk4utg8Mr0wAf7Vs
/n8u0ajh6I5Jq2sTEJBq4XBVLRqFy/YHX4yYgNlKI3GL5ijE1bSvIPf+BDTw
mT+VXIxEHEKz7GvrJyDE6ZigiFcEYnt+pnhIcBJyUq6OHQkPQ++YXRcfiEyC
zuOorwqeYeiWqoWKnfgkuG63nhA8FobEqvWL6FKTULgs9lNBPgypvFcsaFKc
hJGD31t3NIYiu6//PX2hPQkNJ7mK2nlD0SuZqOyr7pOg+j0ImRsFI5/04njB
+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
sqrj8f0ddakbV88vL7PM+lOt+R8fqSnH
           "]]}}, InsetBox[
         InterpretationBox["\<\"t = \\!\\(TraditionalForm\\`1\\)\"\>",
          StringForm["t = ``", 1],
          Editable->False], {0.95, 0.09}], 
        InsetBox["\<\"u(x,t)\"\>", {0.6, 0.14}]},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->True,
       AxesOrigin->{0, 0},
       ImageSize->250,
       PlotRange->{{0, 1}, {0.15, -0.15}},
       PlotRangeClipping->True,
       PlotRangePadding->{
         Scaled[0.02], Automatic}], {400., -922.6364546337713}, 
      ImageScaled[{0.5, 0.5}], {250, 154.5084971874737}]}}, {}},
  ContentSelectable->True,
  ImageSize->{545.3333333333334, 1018.5124959641142`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.56968504895275*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Putting graphic side by side", "Subsubtitle",
 CellChangeTimes->{{3.569685225638661*^9, 3.56968523095827*^9}}],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Plot", "[", "]"}], ",", 
    RowBox[{"Plot", "[", "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.569685234187476*^9, 3.569685245731496*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Why don\[CloseCurlyQuote]t legends work the way \
they\[CloseCurlyQuote]re supposed to?", "Subsubtitle",
 CellChangeTimes->{{3.631636001960597*^9, 3.6316360271802416`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"funs", ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", " ", 
     RowBox[{"Cos", "[", "x", "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"funs", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.63163603181345*^9, 3.6316360679193144`*^9}, {
  3.6316361173002033`*^9, 3.6316361189548063`*^9}, {3.6316361522328677`*^9, 
  3.631636154182871*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
aeaC+ZJsLe1r//f/wP8ADOt7hQ==
        "]], 
       LineBox[CompressedData["
1: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

        "]]}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Method -> {}, PlotRange -> 
    NCache[{{0, Pi}, {-0.9999999999999979, 0.9999999999999979}}, {{
       0, 3.141592653589793}, {-0.9999999999999979, 0.9999999999999979}}], 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     TagBox[
      FormBox[
       TagBox["funs", HoldForm], TraditionalForm], TraditionalForm, Editable -> 
      True]}, "LineLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"Directive", "[", 
             RowBox[{"Hue", "[", 
               RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
           "}"}], ",", 
         RowBox[{"{", #, "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.631636061300903*^9, 3.6316360685901155`*^9}, 
   3.631636120312009*^9, 3.631636154822472*^9}]
}, Open  ]],

Cell["\<\
See http://stackoverflow.com/questions/11940444/plotlegend-in-mathematica-\
does-not-work-for-a-table-of-functions for the details, but we need to \
evaluate the list before plugging it into Plot so it detects the multiple \
traces.\
\>", "Text",
 CellChangeTimes->{{3.6316360787275343`*^9, 3.6316360974147677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", "funs"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.631636105496582*^9, 3.6316361504856644`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Hue[0.67, 0.6, 0.6], 
       LineBox[CompressedData["
1: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
aeaC+ZJsLe1r//f/wP8ADOt7hQ==
        "]]}, {
       Hue[0.9060679774997897, 0.6, 0.6], 
       LineBox[CompressedData["
1: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

        "]]}}, {}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Method -> {}, PlotRange -> 
    NCache[{{0, Pi}, {-0.9999999999999979, 0.9999999999999979}}, {{
       0, 3.141592653589793}, {-0.9999999999999979, 0.9999999999999979}}], 
    PlotRangeClipping -> True, PlotRangePadding -> {
      Scaled[0.02], 
      Scaled[0.02]}],TemplateBox[{
     TagBox[
      FormBox[
       TagBox[
        RowBox[{"sin", "(", "x", ")"}], HoldForm], TraditionalForm], 
      TraditionalForm, Editable -> True], 
     TagBox[
      FormBox[
       TagBox[
        RowBox[{"cos", "(", "x", ")"}], HoldForm], TraditionalForm], 
      TraditionalForm, Editable -> True]}, "LineLegend", 
    DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.67, 0.6, 0.6]], {}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    Hue[0.9060679774997897, 0.6, 0.6]], {}}}, AspectRatio -> 
                 Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"LineLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.67`", ",", "0.6`", ",", "0.6`"}], "]"}], "]"}], 
             ",", 
             RowBox[{"Directive", "[", 
               RowBox[{"Hue", "[", 
                 RowBox[{"0.9060679774997897`", ",", "0.6`", ",", "0.6`"}], 
                 "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2}], "}"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6316361100129905`*^9, 3.631636125108019*^9}, 
   3.6316361560548744`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plotting with continuous and discrete line types (and legends that work)\
\>", "Subsubtitle",
 CellChangeTimes->{{3.6569485568831415`*^9, 3.6569485732910795`*^9}}],

Cell["\<\
The trick to keeping PlotMarkers from showing up on the line intended to be \
continuous is to use PlotMarkers and pass \[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote] (empty string). Not sure how to get the others to be \
automatic yet, however. Note that to get the symbols and the lines in the \
legend, you need to use PlotLegends->PointLegend and pass the option \
Joined->Automatic.\
\>", "Text",
 CellChangeTimes->{{3.656948599731592*^9, 3.656948646411262*^9}, {
  3.6569486826983376`*^9, 3.6569487057466555`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotMarkers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\>\"", ",", "\"\<\[SmallCircle]\>\"", ",", "\"\<\[Square]\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Thick", ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashed", ",", " ", 
        RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Dashing", "[", "Large", "]"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"PointLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<CEA Fit\>\"", ",", "\"\<Channel 2\>\"", ",", " ", 
        "\"\<Channel 3\>\""}], "}"}], ",", 
      RowBox[{"Joined", "\[Rule]", "Automatic"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Temperature (\[Degree]C)\>\"", ",", 
      "\"\<Apparent Strain (\[Mu]\[Epsilon])\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Steel Samples Aparent Strain\>\""}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.656948583175645*^9, 3.6569485844547186`*^9}, {
  3.65694873082909*^9, 3.656948738908552*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, 
     GraphicsComplexBox[CompressedData["
1:eJyF3Hk8lA0b938hpShFiyiiLKWIsi/fmTHDjMHscl0tSrRpo02lKClSRCna
tNBCqyilUqRNEqWUSps2QiWR6nfe9xz9Xs9z//P453rN1Xif5xzzmcN5uruv
4dMXSEJUVVRU9nRXUfnPP5VfjkhZ2VF9L/S8x91y5kvLEbfWZKZZzyj2yEhn
vvQdoTg+1ZK/udQj9D9fZo7gzyivKThx08Puv1+OaJolq15xs9zjvxwccX1r
5lGfeZVKT+iIP+X/cjeEVym9QEdUuNQpWiMeKL1QR1io6vxIWFSj9CIcUa5f
zZbPfaz0oh3h5NMsEk97ovQSHTFwrKFrtLRO6aU74vuYP0Nfs54rvWxHnCgZ
sNFtYL3Sy3OEt2m/tEOaL5VesSNemR7lmv98qfTKHYFhiaZlH18pvVpHzJJM
LYp5/FrpNTB//v7y7n9K3yi9r45Ia3ETi0+8VXoqTtj8n+elNdD8nHBhdOGs
jFXvaH5OCOp14k1T0HuanxOeFuSFTuN8oPk54V659co20480PyccqFx94pjq
J5qfE8ysvyXGvPhE83PCEvcnB1ZcaKT5OWGGa/iqtNQmmp8TKvy/ZT2c85nm
54SCDUk5jmim+TnB7/NZrXrNFpqfE4YOqnQrCG+h+TnhvYmp9b4nLTQ/J/SZ
k2e2i9VK83PClAsxc44dbqX5OSFBloC7Wl9ofk5oaSr9rLboC83PCTqnR1z0
e/CF5ueEFy47Px23/0rzc8asTM2y4Tu/0vycsTxkSvKxH19pfs4Ij1uW7D3x
G83PGU7h47S6Cr7R/JzB15rBv67XRvNzhn3uq82HFrXR/JyRPGyVUcbdNpqf
M/Yc7ORkW3yn+TkjvtmUdWvtd5qfM46MLpykVved5ucMy7aldbLx7TQ/Z8gm
D9C4vKmd5ueMkx+8jDxetdP8nLFx26V5jx1+0PycwS43dkhI/EHzc8akiEFX
ZfU/aH7OGFfPFjvaddD8nDH5uceYCes7aH7O8D+eneFT00Hzc4aDSu8XK806
aX4uyP/z06NsSSfNzwV7vdTVRpd20vxcEPj+6Lxj/X7S/FywKnT+dc8pP2l+
Lrh5scK/8+hPmp8LNOUcyZ1vP2l+LjDUQ//z7l00PxdE+Y1/WLyhi+bngsqK
hPq397pofi4IqD4aaT7oF82POV6fr2/XT/5F83PBjcMlc7od/EXzc4G282Lf
jHe/aH4uGP9wYrVo9G+aH3O8rmLWyPm/aX4uyDrS/mzQqd80Pxe85XKaLFp/
0/xckH327dmJ4/7Q/Jh58A1XHF74h+bngtIKo7UDTv6h+bnCLGZE/4ONf2h+
rjDSPO5wRE8Fyvm5wvPBkuYttipQzs8VBs1/qrqLVKCcnyteBNWpa89TgXJ+
rtD4lH74ULwKlPNzhb3m9WflWeQFukKl9d2t9VfJC3XFlJSELffqyItwhe0O
W79j7eRFu+JCcPDogf27Kb1EV4weuNdb16qb0kt3xcO4aTf3c7spvWzG8x51
9+qUbkovzxUJh8MjI5Z1U3rFrug8dqa5IIm8clds0w2SJB4mr9YV1yZ9Lvl6
mbwGV2y8WBHa9JC8r67gGi2cHNlInoobwsd53N6hqqr0tNzwRp59z3uwKs3P
DV7HtJMTx6jS/NwQrfF0TDBblebnhsSuRXfKFao0Pzc8fmy36dYc8oRuOLl/
TVLgavIC3TBh0JnOVVvJC3VD3NmRzXaHyItwg9EJ26TVBeRFu6H5y9hfk26S
l+iGztHz/71XS166G0KKWOUPP5KX7Yb8qz8WLfxJXp4bhuvWz9/XW43m5wZz
NvvtdAM1mp8bHmXMbL8wSo3m54ZPJmk3Djup0fzcoJ7Rb7mltxrNzw1tKwxG
Q0Geijv2dHxRbQwmT8sdk9UfDh+ziDx9d1Rzuo6qrSbPzB11Q/ZfWpBAnp07
hmd3rF6URh7ckV/kpKN5gDyhOxY2p6TaHycv0B0/4seP7jxHXqg7pmz16ZBe
Iy/CHbiuauxZTl60O6buW3v19kPyEt0RI2398+45eenuiL0X/mvXO/Ky3RF3
0aKuoZm8PHcURtpevtn+d37u2GB2/Drrz9/5uUOxM09PoqFO83NH2dQpdzu0
1Gl+7rh/o6Sfk646zc8dNg/b1XT01Wl+HmjkaZWtHqZO8/OAOE1nxXpT8vQ9
cPZ7P/YIC/LMPDBNboB/rciz80D3fyakjbIhDx5YyDwtxY48oQc2pZ2pSrEn
L9AD/YsNfo12Ii/UAxsj9veY4kJehAd6/oSepRt50R4Y+m+b52Z38hI9YCs5
dzHBg7x0D4wNjMoYDvKyPVB2wEVNAvLymPM3eDPIEOQVe2Dr3NDONR7klXtg
99eT5VHuf+fngWcVOacGuP2dnweYy6mbXn/P76sHqpP+naDn9Hd+QLD/E/2V
9vR8DcB8wP4dq/6+fi3AbF9S5WAb+n5dQD90XYO/1d/5AiN2B/wcbkGeMVA2
5q1NkunfeQMFV1WP7vj7/lgBhedj17vo/50/EDPG7f0KXfKcAOe2n1/k2n/f
D+b89m25Ua5BHg/os6R4w4u//QiBZ5H/yLf8oN6kwLi5ppLalr+9A53FL/YV
v6f+gpjzPS4O8qz/2z+wwsApf8Yj8sIAizPS4uEVfz8PgGbVpIMrS8mLZB5v
144Ov/D38wHU3zNcrnGKvDjAvp/HcYesv58X5ngHzFgaGeSlAovXr5OHb/n7
+QG6lqlprVpLXiYzn1ZxnOnSv58nINt0cMOs2eTlAvEdXULhpL+fL6BicFbd
XT/yCoGQl2cKmvD38wbMm1fWlWNLXhlwOzmqsueIv58/YF9thFR9AHnVwO5k
9uG93f/uM4B/PrrpURvt03rASrvE69Rb2pcNgK3G7kfmD2m/NgKWD3Zddi+l
/fkVGDtdNKztDO3bDmYecu5gn/3kqbCgpa1egSTyNFhoPKA7rWbV358nLJR9
/PGl9xzydFkwCLfPeqn4+/OFhevRwvQADnnGLDQMLmyZZ/335w0LF7+3l48w
IM+KBUnyWv9VGn9//rCwfWBl+uJW+vnnxMKdCPld7Tr6+QYWfgnX9/Yuo5+H
PBYOq1QuMT1FPz+FLIw6cnBMZjr9fJSyIB0YJru8lrxAFmIep/RePZe8IBYi
7dcsfiElL5SF6HFpp165kBfGwtT1zi83mJIXwbyew+Xm93qRF8nC0FvHss63
/r0+YMG22maV52O6nohjgT3nfHn4Zbr+SGQhoXHnec4hur5IZaFXhPm0c/F0
PZLOwuDKgnd355OXycK55B3zNkjJy2ah5ucgvTcO5OWyMLN/bNdrA/LyWNhs
5JPc588f5fVXIQsWVRtsdl+n66tiFkx2exsu2kTXY2UsPBfppm0W0fVWOQv5
DrPrW/Xo+qyahQqtG257H/+9nmPh8p9DLSm76PqvnoUh+UtdKif/pus7Fnjc
nCCFEV0PNrLQx/34gZH1v+h6j+lp3yuOeyZdb3awYP8yNy5zKl2fqrCx7eOs
48JhdP2pwUYfgwWd7Louuh5kI9lT99S6dLq+1WWjIPeQTl8FXQ/rs9GlM3/K
235dSs+YjSd78p9q3P17vc2G4EfR7YgNdD1txcYzh6vzrFh/r7/ZMH7fqTGu
k67XndhYo7n3ccwZur4HGzt0nowwmtOp9HhsyBtqx2gOp+t9IRuD35VMwCO6
P5CysfRt4erSRLqfCGQjw6xWkMbqUHpBbEyf4VyX3/aDrt/ZqC9vXWx6lO5H
wtjortY34MW/dP8SwcZ7wz2lH7R/KL1INh5lHfjDvtJO1/dszNgzXPBpAd3/
xLExfNmghldGf++X2NAziBow6h7dX6WycegNb8jVqO90/c+GJGuG/ZHRdL+V
ycabzKs5Lx630f0AG5eSPYtmrqf7uVw2zu6/dxTj2uj+gI22JSiYU/eN+mPD
03ShaUPcN+qPjdD/PM2G7h/L2Cg5FGheVUv3m+VsjPh4gsVZ+5X6Y6PwY0eJ
xii6/6xlI1blV7Ph/S/UH5tZ2Et6xC37e3/LRvbwYUL20C/UHxtfzI/9EV9r
pf7Y0HC9HZwf2kr9sTHzt+WFsF50P63CQem6hZ7Lj9P9twYHoXJ4PvZvof44
2Fk//7v+62bqj4Oqzc/lY0Y2U38c+EV1WH4Koft9Yw56z6hvk2Y1UX8cXHl+
zHXW60bqj4P8iJkxFsaN1B8HzUkGXtv/pd8vODHfn1Cic3L7399HcHD0gGTa
0ooP1B8Hs7rlXfzU/QP1x0Fb/vUDfV3fU38cpJ6fnv5qIf3+I5ADYeNEk5BD
DdQf83qHzC/eUfOW+uNgUtuU7yt6vKX+OGAPesHr60C/b4ngoFwjfbw85DX1
x8HyMWPZvimvqD/m8Uv7L+2XXlJ/HJyZyr4hf19P/XGw+G4NZ2Y/+n1QKger
Fr96EBj+nPrjoN6+90q/K3XUHwc9s3+tPq75lPrjwNU/6u0ycS31x8GpbS55
J9IeUX8cvD/8qFFS+5D642Dh5udpIfoPqD8Ofgy+k/9OUUX9cTCjpbvfk630
+7Fy5vl6d26s2naX+uOgeNqkdkuV29QfB0faTe0uh5ZRf8zrPTJtncvNa9Qf
B8YvptV78S9TfxzolPZT+9peQP1xENTU0vXD8ST1x7xe+duSynmZ1J8nVJy3
pAS8m0X9eQLf/t00/HbGFWV/nigen/G0MCz3yvj/9ueJ+v56Ne6l+VeU/THP
r7ugPWrSpSvK/jwxKzmRo73m2hVlf564mT1ziIa8TOlZeaKny+vYX9a3lZ6d
J6JZO1e19q1Qek6eaPyz/9eCzkqlB08Y682ICm6uUno85vuDtjtXNTxQekJP
qA/0sb1YX6P0pJ5YnJE7beizx0ov0BNWK75eb3/6ROkFMY+XzZ3Ef1an9EKZ
17M63KTfy+dKL8wTtwOKeh2OqFd6EZ6wHxWd/mfZS6UX6YmzbX5FW6NeKb1o
T5j06WqdFPta6cV5QudlcGFQ4hull+iJKS1zt+7e/lbppXpiVa1qR9/MBqWX
7gm2n/GCCznvlF6mJ3rpXw/fdf690stmzs/g59ozZR+UXq4nDvg/HPbn4Uel
l+eJB9cXXI9u+KT0CpnXl9XcZv+jUekVM/MZu856eO/PSq/ME64F01rdjZqV
XrknOmtCnnkNaVF61czzfdevj89qUXq1nuieeN5mxrhWpVfvifXzj+99dKlV
6TV44nvgwKTXgi9Kr9ET/VjHrm54/EXpffWEInPE95LQr0qvwxPZMdzGHW1f
lZ4KF8NW3A9WW/9N6WlwEXBsq6HGgDbqj4tNl6U1+7LaqD8uHjR/EFXaf6f+
uNipMlq44+Z36o+LUawvG7790079cRGbaFT6rqmd+uNinmBH8cKYH9QfF8/D
2G5JAzqoPy4cIvp0so91UH9c+MxsKtjk0Un9cdH/xUO72Q87qT8uFv68ZvN0
7k/qj4uMOWfnvVTtov64SA45cWxlRhf1x8Xa04WHj9r+ov64eL3n9Yi5d35R
f1x09HR/dWXGb+qPi6yJL/Yd/v2b+uMiIubVUJP0P9QfF44xdlsGDVEpVvbH
xfuIm2PezVQpVvbHxcfg0rt/8lWKlf1xMeWVm9809W7Fyv64eFzmm9Rb2q1Y
2R8X9mP7Lvq9v5vSy+bCZuW+aqfWbkovl4saxbAdl6Cq9PK4CD15fFd8sqrS
K+QitXDR1T31qkqvmIuzzcnvO2zUlF4ZF+r9x7fuiVFTeuXM+2kWdzG+Sk3p
VXOREHnW/JKputKr5UJj9+cBjkvUlV49F0KG6SxTV3oNXOxu8+9Q0++u9Bq5
mHr85QnZ3O5K7ysXOfaymY2Xuiu9Di5MYl6p3tHRUHoqPHwrvjWtJVhD6Wnw
IFrEnzHpnIbS0+JhuPTgxz69eyg9XR52hhk87DG1h9LT52Firx9qXnk9lJ4x
DwsuxwSU9+ip9Mx4eBKkdmrHpJ5Kz4qHWJ3bTUdO91R6djy42oxs/aOhqfSc
eDg0OzRj9yRNpQceLI+/vLX6jKbS4/FQY900NbtnL6UnZB6HvXTVndpL6Ul5
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
3v8c3+p/ju/4P8dn/8/xvf7v46v4FP9/6QK7GQ==
      "], {{{}, {}, {
         RGBColor[0.24720000000000014`, 0.24, 0.6], 
         Thickness[Large], 
         LineBox[CompressedData["
1:eJwl2EMQGAgSAMDYtm3btm3btm3btm3uxrZt29xcp+7RNVXzHyZs1L5Su4AB
AgQYGzRAgL8xEIEJglSAYAQnBCEJRWjCEJZwhCcCEYlEZKIQlWhEJwYxiUVs
4hCXeMQnAQlJRGKSkJRkJCcFKUlFatKQlnSkJwMZyURmspCVbGQnBznJRW7y
kJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVqVKcGNalFbepQ
l3rUpwENaURjmtCUZjSnBS1pRWva0JZ2tKcDHelEZ7rQlW50pwc96UVv+tCX
fvRnAAMZxGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCVaUxnBjOZxWzmMJd5
zGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s
5x/+5QAHOcRhjnCUYxznBCc5xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCX
e9znAQ95xGOe8JRnPOcFL3nFa97wlne85wMf+cRnvvCVb3znBz/5xW/+4w9/
iz8ggQhMEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gk
ICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8pKP/BSg
IIUoTBGKUozilKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrWoTR3qUo/6NKAh
jWhME5rSjOa0oCWtaE0b2vK3ebenAx3pRGe60JVudKcHPelFb/rQl370ZwAD
GcRghjCUYQxnBCMZxWjGMJZxjGcCE5nEZKYwlWlMZwYzmcVs5jCXecxnAQtZ
xGKWsJRlLGcFK1nFatawlnWsZwMb2cRmtrCVbWxnBzvZxW72sJd97Ocf/uUA
BznEYY5wlGMc5wQnOcVpznCWc5znAhe5xGWucJVrXOcGN7nFbe5wl3vc5wEP
ecRjnvCUZzznBS95xWve8JZ3vOcDH/nEZ77wlW985wc/+cVv/uMPfwd/QAIR
mCAEJRjBCUFIQhGaMIQlHOGJQEQiEZkoRCUa0YlBTGIRmzjEJR7xSUBCEpGY
JCQlGclJQUpSkZo0pCUd6clARjKRmSxkJRvZyUFOcpGbPOQlH/kpQEEKUZgi
FKUYxSlBSUpRmjKUpRzlqUBFKlGZKlSlGtWpQU1qUZs61KUe9WlAQxrRmCY0
pRnNaUFLWtGaNrSlHe3pQEc60ZkudKUb3elBT3rRmz70pR/9GcBABjGYIQxl
GMMZwUhGMZoxjGUc45nARCYxmSlMZRrTmcFMZjGbOcxlHvNZwEIWsZglLGUZ
y1nBSlaxmjWsZR3r2cBGNrGZLWxlG9vZwU52sZs97GUf+/mHfznAQQ5xmCMc
5RjHOcFJTnGaM5zlHOe5wEUucZkrXOUa17nBTW5xmzvc5R73ecBDHvGYJzzl
Gc95wUte8Zo3vOUd7/nARz7xmS985Rvf+cFPfvGb//jD36U/IIEITBCCEozg
hCAkoQhNGMISjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhMEpKSjOSk
ICWpSE0a0pKO9GQgI5nITBayko3s5CAnuchNHvKSj/wUoCCFKEwRilKM4pSg
JKUoTRnKUo7yVKAilahMFapSjerUoCa1qE0d6lKP+jSgIY1oTBOa0ozmtKAl
rWhNG9rSjvZ0oCOd6EwXutKN7vSgJ73oTR/60o/+DGAggxjMEIYyjOGMYCSj
GM0YxjKO8UxgIpOYzBSmMo3pzGAms5jNHOYyj/ksYCGLWMwSlrKM5axgJatY
zRrWso71bGAjm9jMFrayje3sYCe72M0e9rKP/fzDvxzgIIc4zBGOcozjnOAk
pzjNGc5yjvNc4CKXuMwVrnKN69zgJre4zR3uco/7POAhj3jME57yjOe84CWv
eM0b3vKO93zgI5/4zBe+8o3v/OAnv/jNf/zh78EfkEAEJghBCUZwQhCSUIQm
DGEJR3giEJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYN
aUlHejKQkUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQklKUpgxl
KUd5KlCRSlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCSVrSmDW1p
R3s60JFOdKYLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJRjGYMYxnH
eCYwkUlMZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6
NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfv7hXw5wkEMc5ghHOcZxTnCSU5zmDGc5
x3kucJFLXOYKV7nGdW5wk1vc5g53ucd9HvCQRzzmCU95xnNe8JJXvOYNb3nH
ez7wkU985gtf+cZ3fvCTX/zmP/7w99kXkEAEJghBCUZwQhCSUIQmDGEJR3gi
EJFIRCYKUYlGdGIQk1jEJg5xiUd8EpCQRCQmCUlJRnJSkJJUpCYNaUlHejKQ
kUxkJgtZyUZ2cpCTXOQmD3nJR34KUJBCFKYIRSlGcUpQklKUpgxlKUd5KlCR
SlSmClWpRnVqUJNa1KYOdalHfRrQkEY0pglNaUZzWtCSVrSmDW1pR3s60JFO
dKYLXelGd3rQk170pg996Ud/BjCQQQxmCEMZxnBGMJJRjGZM0P//jP8Hfqiz
xQ==
          "]]}, {
         RGBColor[0.6, 0.24, 0.4428931686004542], 
         PointSize[Large], 
         Dashing[{Small, Small}], 
         LineBox[{1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429}]}, {
         RGBColor[0.6, 0.5470136627990908, 0.24], 
         Dashing[Large], 
         LineBox[{1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437}]}}, {{
         RGBColor[0.24720000000000014`, 0.24, 0.6], 
         Thickness[Large], 
         TagBox[
          InsetBox["", 1], "InsetString"], 
         TagBox[
          InsetBox["", 2], "InsetString"], 
         TagBox[
          InsetBox["", 3], "InsetString"], 
         TagBox[
          InsetBox["", 4], "InsetString"], 
         TagBox[
          InsetBox["", 5], "InsetString"], 
         TagBox[
          InsetBox["", 6], "InsetString"], 
         TagBox[
          InsetBox["", 7], "InsetString"], 
         TagBox[
          InsetBox["", 8], "InsetString"], 
         TagBox[
          InsetBox["", 9], "InsetString"], 
         TagBox[
          InsetBox["", 10], "InsetString"], 
         TagBox[
          InsetBox["", 11], "InsetString"], 
         TagBox[
          InsetBox["", 12], "InsetString"], 
         TagBox[
          InsetBox["", 13], "InsetString"], 
         TagBox[
          InsetBox["", 14], "InsetString"], 
         TagBox[
          InsetBox["", 15], "InsetString"], 
         TagBox[
          InsetBox["", 16], "InsetString"], 
         TagBox[
          InsetBox["", 17], "InsetString"], 
         TagBox[
          InsetBox["", 18], "InsetString"], 
         TagBox[
          InsetBox["", 19], "InsetString"], 
         TagBox[
          InsetBox["", 20], "InsetString"], 
         TagBox[
          InsetBox["", 21], "InsetString"], 
         TagBox[
          InsetBox["", 22], "InsetString"], 
         TagBox[
          InsetBox["", 23], "InsetString"], 
         TagBox[
          InsetBox["", 24], "InsetString"], 
         TagBox[
          InsetBox["", 25], "InsetString"], 
         TagBox[
          InsetBox["", 26], "InsetString"], 
         TagBox[
          InsetBox["", 27], "InsetString"], 
         TagBox[
          InsetBox["", 28], "InsetString"], 
         TagBox[
          InsetBox["", 29], "InsetString"], 
         TagBox[
          InsetBox["", 30], "InsetString"], 
         TagBox[
          InsetBox["", 31], "InsetString"], 
         TagBox[
          InsetBox["", 32], "InsetString"], 
         TagBox[
          InsetBox["", 33], "InsetString"], 
         TagBox[
          InsetBox["", 34], "InsetString"], 
         TagBox[
          InsetBox["", 35], "InsetString"], 
         TagBox[
          InsetBox["", 36], "InsetString"], 
         TagBox[
          InsetBox["", 37], "InsetString"], 
         TagBox[
          InsetBox["", 38], "InsetString"], 
         TagBox[
          InsetBox["", 39], "InsetString"], 
         TagBox[
          InsetBox["", 40], "InsetString"], 
         TagBox[
          InsetBox["", 41], "InsetString"], 
         TagBox[
          InsetBox["", 42], "InsetString"], 
         TagBox[
          InsetBox["", 43], "InsetString"], 
         TagBox[
          InsetBox["", 44], "InsetString"], 
         TagBox[
          InsetBox["", 45], "InsetString"], 
         TagBox[
          InsetBox["", 46], "InsetString"], 
         TagBox[
          InsetBox["", 47], "InsetString"], 
         TagBox[
          InsetBox["", 48], "InsetString"], 
         TagBox[
          InsetBox["", 49], "InsetString"], 
         TagBox[
          InsetBox["", 50], "InsetString"], 
         TagBox[
          InsetBox["", 51], "InsetString"], 
         TagBox[
          InsetBox["", 52], "InsetString"], 
         TagBox[
          InsetBox["", 53], "InsetString"], 
         TagBox[
          InsetBox["", 54], "InsetString"], 
         TagBox[
          InsetBox["", 55], "InsetString"], 
         TagBox[
          InsetBox["", 56], "InsetString"], 
         TagBox[
          InsetBox["", 57], "InsetString"], 
         TagBox[
          InsetBox["", 58], "InsetString"], 
         TagBox[
          InsetBox["", 59], "InsetString"], 
         TagBox[
          InsetBox["", 60], "InsetString"], 
         TagBox[
          InsetBox["", 61], "InsetString"], 
         TagBox[
          InsetBox["", 62], "InsetString"], 
         TagBox[
          InsetBox["", 63], "InsetString"], 
         TagBox[
          InsetBox["", 64], "InsetString"], 
         TagBox[
          InsetBox["", 65], "InsetString"], 
         TagBox[
          InsetBox["", 66], "InsetString"], 
         TagBox[
          InsetBox["", 67], "InsetString"], 
         TagBox[
          InsetBox["", 68], "InsetString"], 
         TagBox[
          InsetBox["", 69], "InsetString"], 
         TagBox[
          InsetBox["", 70], "InsetString"], 
         TagBox[
          InsetBox["", 71], "InsetString"], 
         TagBox[
          InsetBox["", 72], "InsetString"], 
         TagBox[
          InsetBox["", 73], "InsetString"], 
         TagBox[
          InsetBox["", 74], "InsetString"], 
         TagBox[
          InsetBox["", 75], "InsetString"], 
         TagBox[
          InsetBox["", 76], "InsetString"], 
         TagBox[
          InsetBox["", 77], "InsetString"], 
         TagBox[
          InsetBox["", 78], "InsetString"], 
         TagBox[
          InsetBox["", 79], "InsetString"], 
         TagBox[
          InsetBox["", 80], "InsetString"], 
         TagBox[
          InsetBox["", 81], "InsetString"], 
         TagBox[
          InsetBox["", 82], "InsetString"], 
         TagBox[
          InsetBox["", 83], "InsetString"], 
         TagBox[
          InsetBox["", 84], "InsetString"], 
         TagBox[
          InsetBox["", 85], "InsetString"], 
         TagBox[
          InsetBox["", 86], "InsetString"], 
         TagBox[
          InsetBox["", 87], "InsetString"], 
         TagBox[
          InsetBox["", 88], "InsetString"], 
         TagBox[
          InsetBox["", 89], "InsetString"], 
         TagBox[
          InsetBox["", 90], "InsetString"], 
         TagBox[
          InsetBox["", 91], "InsetString"], 
         TagBox[
          InsetBox["", 92], "InsetString"], 
         TagBox[
          InsetBox["", 93], "InsetString"], 
         TagBox[
          InsetBox["", 94], "InsetString"], 
         TagBox[
          InsetBox["", 95], "InsetString"], 
         TagBox[
          InsetBox["", 96], "InsetString"], 
         TagBox[
          InsetBox["", 97], "InsetString"], 
         TagBox[
          InsetBox["", 98], "InsetString"], 
         TagBox[
          InsetBox["", 99], "InsetString"], 
         TagBox[
          InsetBox["", 100], "InsetString"], 
         TagBox[
          InsetBox["", 101], "InsetString"], 
         TagBox[
          InsetBox["", 102], "InsetString"], 
         TagBox[
          InsetBox["", 103], "InsetString"], 
         TagBox[
          InsetBox["", 104], "InsetString"], 
         TagBox[
          InsetBox["", 105], "InsetString"], 
         TagBox[
          InsetBox["", 106], "InsetString"], 
         TagBox[
          InsetBox["", 107], "InsetString"], 
         TagBox[
          InsetBox["", 108], "InsetString"], 
         TagBox[
          InsetBox["", 109], "InsetString"], 
         TagBox[
          InsetBox["", 110], "InsetString"], 
         TagBox[
          InsetBox["", 111], "InsetString"], 
         TagBox[
          InsetBox["", 112], "InsetString"], 
         TagBox[
          InsetBox["", 113], "InsetString"], 
         TagBox[
          InsetBox["", 114], "InsetString"], 
         TagBox[
          InsetBox["", 115], "InsetString"], 
         TagBox[
          InsetBox["", 116], "InsetString"], 
         TagBox[
          InsetBox["", 117], "InsetString"], 
         TagBox[
          InsetBox["", 118], "InsetString"], 
         TagBox[
          InsetBox["", 119], "InsetString"], 
         TagBox[
          InsetBox["", 120], "InsetString"], 
         TagBox[
          InsetBox["", 121], "InsetString"], 
         TagBox[
          InsetBox["", 122], "InsetString"], 
         TagBox[
          InsetBox["", 123], "InsetString"], 
         TagBox[
          InsetBox["", 124], "InsetString"], 
         TagBox[
          InsetBox["", 125], "InsetString"], 
         TagBox[
          InsetBox["", 126], "InsetString"], 
         TagBox[
          InsetBox["", 127], "InsetString"], 
         TagBox[
          InsetBox["", 128], "InsetString"], 
         TagBox[
          InsetBox["", 129], "InsetString"], 
         TagBox[
          InsetBox["", 130], "InsetString"], 
         TagBox[
          InsetBox["", 131], "InsetString"], 
         TagBox[
          InsetBox["", 132], "InsetString"], 
         TagBox[
          InsetBox["", 133], "InsetString"], 
         TagBox[
          InsetBox["", 134], "InsetString"], 
         TagBox[
          InsetBox["", 135], "InsetString"], 
         TagBox[
          InsetBox["", 136], "InsetString"], 
         TagBox[
          InsetBox["", 137], "InsetString"], 
         TagBox[
          InsetBox["", 138], "InsetString"], 
         TagBox[
          InsetBox["", 139], "InsetString"], 
         TagBox[
          InsetBox["", 140], "InsetString"], 
         TagBox[
          InsetBox["", 141], "InsetString"], 
         TagBox[
          InsetBox["", 142], "InsetString"], 
         TagBox[
          InsetBox["", 143], "InsetString"], 
         TagBox[
          InsetBox["", 144], "InsetString"], 
         TagBox[
          InsetBox["", 145], "InsetString"], 
         TagBox[
          InsetBox["", 146], "InsetString"], 
         TagBox[
          InsetBox["", 147], "InsetString"], 
         TagBox[
          InsetBox["", 148], "InsetString"], 
         TagBox[
          InsetBox["", 149], "InsetString"], 
         TagBox[
          InsetBox["", 150], "InsetString"], 
         TagBox[
          InsetBox["", 151], "InsetString"], 
         TagBox[
          InsetBox["", 152], "InsetString"], 
         TagBox[
          InsetBox["", 153], "InsetString"], 
         TagBox[
          InsetBox["", 154], "InsetString"], 
         TagBox[
          InsetBox["", 155], "InsetString"], 
         TagBox[
          InsetBox["", 156], "InsetString"], 
         TagBox[
          InsetBox["", 157], "InsetString"], 
         TagBox[
          InsetBox["", 158], "InsetString"], 
         TagBox[
          InsetBox["", 159], "InsetString"], 
         TagBox[
          InsetBox["", 160], "InsetString"], 
         TagBox[
          InsetBox["", 161], "InsetString"], 
         TagBox[
          InsetBox["", 162], "InsetString"], 
         TagBox[
          InsetBox["", 163], "InsetString"], 
         TagBox[
          InsetBox["", 164], "InsetString"], 
         TagBox[
          InsetBox["", 165], "InsetString"], 
         TagBox[
          InsetBox["", 166], "InsetString"], 
         TagBox[
          InsetBox["", 167], "InsetString"], 
         TagBox[
          InsetBox["", 168], "InsetString"], 
         TagBox[
          InsetBox["", 169], "InsetString"], 
         TagBox[
          InsetBox["", 170], "InsetString"], 
         TagBox[
          InsetBox["", 171], "InsetString"], 
         TagBox[
          InsetBox["", 172], "InsetString"], 
         TagBox[
          InsetBox["", 173], "InsetString"], 
         TagBox[
          InsetBox["", 174], "InsetString"], 
         TagBox[
          InsetBox["", 175], "InsetString"], 
         TagBox[
          InsetBox["", 176], "InsetString"], 
         TagBox[
          InsetBox["", 177], "InsetString"], 
         TagBox[
          InsetBox["", 178], "InsetString"], 
         TagBox[
          InsetBox["", 179], "InsetString"], 
         TagBox[
          InsetBox["", 180], "InsetString"], 
         TagBox[
          InsetBox["", 181], "InsetString"], 
         TagBox[
          InsetBox["", 182], "InsetString"], 
         TagBox[
          InsetBox["", 183], "InsetString"], 
         TagBox[
          InsetBox["", 184], "InsetString"], 
         TagBox[
          InsetBox["", 185], "InsetString"], 
         TagBox[
          InsetBox["", 186], "InsetString"], 
         TagBox[
          InsetBox["", 187], "InsetString"], 
         TagBox[
          InsetBox["", 188], "InsetString"], 
         TagBox[
          InsetBox["", 189], "InsetString"], 
         TagBox[
          InsetBox["", 190], "InsetString"], 
         TagBox[
          InsetBox["", 191], "InsetString"], 
         TagBox[
          InsetBox["", 192], "InsetString"], 
         TagBox[
          InsetBox["", 193], "InsetString"], 
         TagBox[
          InsetBox["", 194], "InsetString"], 
         TagBox[
          InsetBox["", 195], "InsetString"], 
         TagBox[
          InsetBox["", 196], "InsetString"], 
         TagBox[
          InsetBox["", 197], "InsetString"], 
         TagBox[
          InsetBox["", 198], "InsetString"], 
         TagBox[
          InsetBox["", 199], "InsetString"], 
         TagBox[
          InsetBox["", 200], "InsetString"], 
         TagBox[
          InsetBox["", 201], "InsetString"], 
         TagBox[
          InsetBox["", 202], "InsetString"], 
         TagBox[
          InsetBox["", 203], "InsetString"], 
         TagBox[
          InsetBox["", 204], "InsetString"], 
         TagBox[
          InsetBox["", 205], "InsetString"], 
         TagBox[
          InsetBox["", 206], "InsetString"], 
         TagBox[
          InsetBox["", 207], "InsetString"], 
         TagBox[
          InsetBox["", 208], "InsetString"], 
         TagBox[
          InsetBox["", 209], "InsetString"], 
         TagBox[
          InsetBox["", 210], "InsetString"], 
         TagBox[
          InsetBox["", 211], "InsetString"], 
         TagBox[
          InsetBox["", 212], "InsetString"], 
         TagBox[
          InsetBox["", 213], "InsetString"], 
         TagBox[
          InsetBox["", 214], "InsetString"], 
         TagBox[
          InsetBox["", 215], "InsetString"], 
         TagBox[
          InsetBox["", 216], "InsetString"], 
         TagBox[
          InsetBox["", 217], "InsetString"], 
         TagBox[
          InsetBox["", 218], "InsetString"], 
         TagBox[
          InsetBox["", 219], "InsetString"], 
         TagBox[
          InsetBox["", 220], "InsetString"], 
         TagBox[
          InsetBox["", 221], "InsetString"], 
         TagBox[
          InsetBox["", 222], "InsetString"], 
         TagBox[
          InsetBox["", 223], "InsetString"], 
         TagBox[
          InsetBox["", 224], "InsetString"], 
         TagBox[
          InsetBox["", 225], "InsetString"], 
         TagBox[
          InsetBox["", 226], "InsetString"], 
         TagBox[
          InsetBox["", 227], "InsetString"], 
         TagBox[
          InsetBox["", 228], "InsetString"], 
         TagBox[
          InsetBox["", 229], "InsetString"], 
         TagBox[
          InsetBox["", 230], "InsetString"], 
         TagBox[
          InsetBox["", 231], "InsetString"], 
         TagBox[
          InsetBox["", 232], "InsetString"], 
         TagBox[
          InsetBox["", 233], "InsetString"], 
         TagBox[
          InsetBox["", 234], "InsetString"], 
         TagBox[
          InsetBox["", 235], "InsetString"], 
         TagBox[
          InsetBox["", 236], "InsetString"], 
         TagBox[
          InsetBox["", 237], "InsetString"], 
         TagBox[
          InsetBox["", 238], "InsetString"], 
         TagBox[
          InsetBox["", 239], "InsetString"], 
         TagBox[
          InsetBox["", 240], "InsetString"], 
         TagBox[
          InsetBox["", 241], "InsetString"], 
         TagBox[
          InsetBox["", 242], "InsetString"], 
         TagBox[
          InsetBox["", 243], "InsetString"], 
         TagBox[
          InsetBox["", 244], "InsetString"], 
         TagBox[
          InsetBox["", 245], "InsetString"], 
         TagBox[
          InsetBox["", 246], "InsetString"], 
         TagBox[
          InsetBox["", 247], "InsetString"], 
         TagBox[
          InsetBox["", 248], "InsetString"], 
         TagBox[
          InsetBox["", 249], "InsetString"], 
         TagBox[
          InsetBox["", 250], "InsetString"], 
         TagBox[
          InsetBox["", 251], "InsetString"], 
         TagBox[
          InsetBox["", 252], "InsetString"], 
         TagBox[
          InsetBox["", 253], "InsetString"], 
         TagBox[
          InsetBox["", 254], "InsetString"], 
         TagBox[
          InsetBox["", 255], "InsetString"], 
         TagBox[
          InsetBox["", 256], "InsetString"], 
         TagBox[
          InsetBox["", 257], "InsetString"], 
         TagBox[
          InsetBox["", 258], "InsetString"], 
         TagBox[
          InsetBox["", 259], "InsetString"], 
         TagBox[
          InsetBox["", 260], "InsetString"], 
         TagBox[
          InsetBox["", 261], "InsetString"], 
         TagBox[
          InsetBox["", 262], "InsetString"], 
         TagBox[
          InsetBox["", 263], "InsetString"], 
         TagBox[
          InsetBox["", 264], "InsetString"], 
         TagBox[
          InsetBox["", 265], "InsetString"], 
         TagBox[
          InsetBox["", 266], "InsetString"], 
         TagBox[
          InsetBox["", 267], "InsetString"], 
         TagBox[
          InsetBox["", 268], "InsetString"], 
         TagBox[
          InsetBox["", 269], "InsetString"], 
         TagBox[
          InsetBox["", 270], "InsetString"], 
         TagBox[
          InsetBox["", 271], "InsetString"], 
         TagBox[
          InsetBox["", 272], "InsetString"], 
         TagBox[
          InsetBox["", 273], "InsetString"], 
         TagBox[
          InsetBox["", 274], "InsetString"], 
         TagBox[
          InsetBox["", 275], "InsetString"], 
         TagBox[
          InsetBox["", 276], "InsetString"], 
         TagBox[
          InsetBox["", 277], "InsetString"], 
         TagBox[
          InsetBox["", 278], "InsetString"], 
         TagBox[
          InsetBox["", 279], "InsetString"], 
         TagBox[
          InsetBox["", 280], "InsetString"], 
         TagBox[
          InsetBox["", 281], "InsetString"], 
         TagBox[
          InsetBox["", 282], "InsetString"], 
         TagBox[
          InsetBox["", 283], "InsetString"], 
         TagBox[
          InsetBox["", 284], "InsetString"], 
         TagBox[
          InsetBox["", 285], "InsetString"], 
         TagBox[
          InsetBox["", 286], "InsetString"], 
         TagBox[
          InsetBox["", 287], "InsetString"], 
         TagBox[
          InsetBox["", 288], "InsetString"], 
         TagBox[
          InsetBox["", 289], "InsetString"], 
         TagBox[
          InsetBox["", 290], "InsetString"], 
         TagBox[
          InsetBox["", 291], "InsetString"], 
         TagBox[
          InsetBox["", 292], "InsetString"], 
         TagBox[
          InsetBox["", 293], "InsetString"], 
         TagBox[
          InsetBox["", 294], "InsetString"], 
         TagBox[
          InsetBox["", 295], "InsetString"], 
         TagBox[
          InsetBox["", 296], "InsetString"], 
         TagBox[
          InsetBox["", 297], "InsetString"], 
         TagBox[
          InsetBox["", 298], "InsetString"], 
         TagBox[
          InsetBox["", 299], "InsetString"], 
         TagBox[
          InsetBox["", 300], "InsetString"], 
         TagBox[
          InsetBox["", 301], "InsetString"], 
         TagBox[
          InsetBox["", 302], "InsetString"], 
         TagBox[
          InsetBox["", 303], "InsetString"], 
         TagBox[
          InsetBox["", 304], "InsetString"], 
         TagBox[
          InsetBox["", 305], "InsetString"], 
         TagBox[
          InsetBox["", 306], "InsetString"], 
         TagBox[
          InsetBox["", 307], "InsetString"], 
         TagBox[
          InsetBox["", 308], "InsetString"], 
         TagBox[
          InsetBox["", 309], "InsetString"], 
         TagBox[
          InsetBox["", 310], "InsetString"], 
         TagBox[
          InsetBox["", 311], "InsetString"], 
         TagBox[
          InsetBox["", 312], "InsetString"], 
         TagBox[
          InsetBox["", 313], "InsetString"], 
         TagBox[
          InsetBox["", 314], "InsetString"], 
         TagBox[
          InsetBox["", 315], "InsetString"], 
         TagBox[
          InsetBox["", 316], "InsetString"], 
         TagBox[
          InsetBox["", 317], "InsetString"], 
         TagBox[
          InsetBox["", 318], "InsetString"], 
         TagBox[
          InsetBox["", 319], "InsetString"], 
         TagBox[
          InsetBox["", 320], "InsetString"], 
         TagBox[
          InsetBox["", 321], "InsetString"], 
         TagBox[
          InsetBox["", 322], "InsetString"], 
         TagBox[
          InsetBox["", 323], "InsetString"], 
         TagBox[
          InsetBox["", 324], "InsetString"], 
         TagBox[
          InsetBox["", 325], "InsetString"], 
         TagBox[
          InsetBox["", 326], "InsetString"], 
         TagBox[
          InsetBox["", 327], "InsetString"], 
         TagBox[
          InsetBox["", 328], "InsetString"], 
         TagBox[
          InsetBox["", 329], "InsetString"], 
         TagBox[
          InsetBox["", 330], "InsetString"], 
         TagBox[
          InsetBox["", 331], "InsetString"], 
         TagBox[
          InsetBox["", 332], "InsetString"], 
         TagBox[
          InsetBox["", 333], "InsetString"], 
         TagBox[
          InsetBox["", 334], "InsetString"], 
         TagBox[
          InsetBox["", 335], "InsetString"], 
         TagBox[
          InsetBox["", 336], "InsetString"], 
         TagBox[
          InsetBox["", 337], "InsetString"], 
         TagBox[
          InsetBox["", 338], "InsetString"], 
         TagBox[
          InsetBox["", 339], "InsetString"], 
         TagBox[
          InsetBox["", 340], "InsetString"], 
         TagBox[
          InsetBox["", 341], "InsetString"], 
         TagBox[
          InsetBox["", 342], "InsetString"], 
         TagBox[
          InsetBox["", 343], "InsetString"], 
         TagBox[
          InsetBox["", 344], "InsetString"], 
         TagBox[
          InsetBox["", 345], "InsetString"], 
         TagBox[
          InsetBox["", 346], "InsetString"], 
         TagBox[
          InsetBox["", 347], "InsetString"], 
         TagBox[
          InsetBox["", 348], "InsetString"], 
         TagBox[
          InsetBox["", 349], "InsetString"], 
         TagBox[
          InsetBox["", 350], "InsetString"], 
         TagBox[
          InsetBox["", 351], "InsetString"], 
         TagBox[
          InsetBox["", 352], "InsetString"], 
         TagBox[
          InsetBox["", 353], "InsetString"], 
         TagBox[
          InsetBox["", 354], "InsetString"], 
         TagBox[
          InsetBox["", 355], "InsetString"], 
         TagBox[
          InsetBox["", 356], "InsetString"], 
         TagBox[
          InsetBox["", 357], "InsetString"], 
         TagBox[
          InsetBox["", 358], "InsetString"], 
         TagBox[
          InsetBox["", 359], "InsetString"], 
         TagBox[
          InsetBox["", 360], "InsetString"], 
         TagBox[
          InsetBox["", 361], "InsetString"], 
         TagBox[
          InsetBox["", 362], "InsetString"], 
         TagBox[
          InsetBox["", 363], "InsetString"], 
         TagBox[
          InsetBox["", 364], "InsetString"], 
         TagBox[
          InsetBox["", 365], "InsetString"], 
         TagBox[
          InsetBox["", 366], "InsetString"], 
         TagBox[
          InsetBox["", 367], "InsetString"], 
         TagBox[
          InsetBox["", 368], "InsetString"], 
         TagBox[
          InsetBox["", 369], "InsetString"], 
         TagBox[
          InsetBox["", 370], "InsetString"], 
         TagBox[
          InsetBox["", 371], "InsetString"], 
         TagBox[
          InsetBox["", 372], "InsetString"], 
         TagBox[
          InsetBox["", 373], "InsetString"], 
         TagBox[
          InsetBox["", 374], "InsetString"], 
         TagBox[
          InsetBox["", 375], "InsetString"], 
         TagBox[
          InsetBox["", 376], "InsetString"], 
         TagBox[
          InsetBox["", 377], "InsetString"], 
         TagBox[
          InsetBox["", 378], "InsetString"], 
         TagBox[
          InsetBox["", 379], "InsetString"], 
         TagBox[
          InsetBox["", 380], "InsetString"], 
         TagBox[
          InsetBox["", 381], "InsetString"], 
         TagBox[
          InsetBox["", 382], "InsetString"], 
         TagBox[
          InsetBox["", 383], "InsetString"], 
         TagBox[
          InsetBox["", 384], "InsetString"], 
         TagBox[
          InsetBox["", 385], "InsetString"], 
         TagBox[
          InsetBox["", 386], "InsetString"], 
         TagBox[
          InsetBox["", 387], "InsetString"], 
         TagBox[
          InsetBox["", 388], "InsetString"], 
         TagBox[
          InsetBox["", 389], "InsetString"], 
         TagBox[
          InsetBox["", 390], "InsetString"], 
         TagBox[
          InsetBox["", 391], "InsetString"], 
         TagBox[
          InsetBox["", 392], "InsetString"], 
         TagBox[
          InsetBox["", 393], "InsetString"], 
         TagBox[
          InsetBox["", 394], "InsetString"], 
         TagBox[
          InsetBox["", 395], "InsetString"], 
         TagBox[
          InsetBox["", 396], "InsetString"], 
         TagBox[
          InsetBox["", 397], "InsetString"], 
         TagBox[
          InsetBox["", 398], "InsetString"], 
         TagBox[
          InsetBox["", 399], "InsetString"], 
         TagBox[
          InsetBox["", 400], "InsetString"], 
         TagBox[
          InsetBox["", 401], "InsetString"], 
         TagBox[
          InsetBox["", 402], "InsetString"], 
         TagBox[
          InsetBox["", 403], "InsetString"], 
         TagBox[
          InsetBox["", 404], "InsetString"], 
         TagBox[
          InsetBox["", 405], "InsetString"], 
         TagBox[
          InsetBox["", 406], "InsetString"], 
         TagBox[
          InsetBox["", 407], "InsetString"], 
         TagBox[
          InsetBox["", 408], "InsetString"], 
         TagBox[
          InsetBox["", 409], "InsetString"], 
         TagBox[
          InsetBox["", 410], "InsetString"], 
         TagBox[
          InsetBox["", 411], "InsetString"], 
         TagBox[
          InsetBox["", 412], "InsetString"], 
         TagBox[
          InsetBox["", 413], "InsetString"], 
         TagBox[
          InsetBox["", 414], "InsetString"], 
         TagBox[
          InsetBox["", 415], "InsetString"], 
         TagBox[
          InsetBox["", 416], "InsetString"], 
         TagBox[
          InsetBox["", 417], "InsetString"], 
         TagBox[
          InsetBox["", 418], "InsetString"], 
         TagBox[
          InsetBox["", 419], "InsetString"], 
         TagBox[
          InsetBox["", 420], "InsetString"], 
         TagBox[
          InsetBox["", 421], "InsetString"], 
         TagBox[
          InsetBox["", 422], "InsetString"], 
         TagBox[
          InsetBox["", 423], "InsetString"], 
         TagBox[
          InsetBox["", 424], "InsetString"], 
         TagBox[
          InsetBox["", 425], "InsetString"], 
         TagBox[
          InsetBox["", 426], "InsetString"], 
         TagBox[
          InsetBox["", 427], "InsetString"], 
         TagBox[
          InsetBox["", 428], "InsetString"], 
         TagBox[
          InsetBox["", 429], "InsetString"], 
         TagBox[
          InsetBox["", 430], "InsetString"], 
         TagBox[
          InsetBox["", 431], "InsetString"], 
         TagBox[
          InsetBox["", 432], "InsetString"], 
         TagBox[
          InsetBox["", 433], "InsetString"], 
         TagBox[
          InsetBox["", 434], "InsetString"], 
         TagBox[
          InsetBox["", 435], "InsetString"], 
         TagBox[
          InsetBox["", 436], "InsetString"], 
         TagBox[
          InsetBox["", 437], "InsetString"], 
         TagBox[
          InsetBox["", 438], "InsetString"], 
         TagBox[
          InsetBox["", 439], "InsetString"], 
         TagBox[
          InsetBox["", 440], "InsetString"], 
         TagBox[
          InsetBox["", 441], "InsetString"], 
         TagBox[
          InsetBox["", 442], "InsetString"], 
         TagBox[
          InsetBox["", 443], "InsetString"], 
         TagBox[
          InsetBox["", 444], "InsetString"], 
         TagBox[
          InsetBox["", 445], "InsetString"], 
         TagBox[
          InsetBox["", 446], "InsetString"], 
         TagBox[
          InsetBox["", 447], "InsetString"], 
         TagBox[
          InsetBox["", 448], "InsetString"], 
         TagBox[
          InsetBox["", 449], "InsetString"], 
         TagBox[
          InsetBox["", 450], "InsetString"], 
         TagBox[
          InsetBox["", 451], "InsetString"], 
         TagBox[
          InsetBox["", 452], "InsetString"], 
         TagBox[
          InsetBox["", 453], "InsetString"], 
         TagBox[
          InsetBox["", 454], "InsetString"], 
         TagBox[
          InsetBox["", 455], "InsetString"], 
         TagBox[
          InsetBox["", 456], "InsetString"], 
         TagBox[
          InsetBox["", 457], "InsetString"], 
         TagBox[
          InsetBox["", 458], "InsetString"], 
         TagBox[
          InsetBox["", 459], "InsetString"], 
         TagBox[
          InsetBox["", 460], "InsetString"], 
         TagBox[
          InsetBox["", 461], "InsetString"], 
         TagBox[
          InsetBox["", 462], "InsetString"], 
         TagBox[
          InsetBox["", 463], "InsetString"], 
         TagBox[
          InsetBox["", 464], "InsetString"], 
         TagBox[
          InsetBox["", 465], "InsetString"], 
         TagBox[
          InsetBox["", 466], "InsetString"], 
         TagBox[
          InsetBox["", 467], "InsetString"], 
         TagBox[
          InsetBox["", 468], "InsetString"], 
         TagBox[
          InsetBox["", 469], "InsetString"], 
         TagBox[
          InsetBox["", 470], "InsetString"], 
         TagBox[
          InsetBox["", 471], "InsetString"], 
         TagBox[
          InsetBox["", 472], "InsetString"], 
         TagBox[
          InsetBox["", 473], "InsetString"], 
         TagBox[
          InsetBox["", 474], "InsetString"], 
         TagBox[
          InsetBox["", 475], "InsetString"], 
         TagBox[
          InsetBox["", 476], "InsetString"], 
         TagBox[
          InsetBox["", 477], "InsetString"], 
         TagBox[
          InsetBox["", 478], "InsetString"], 
         TagBox[
          InsetBox["", 479], "InsetString"], 
         TagBox[
          InsetBox["", 480], "InsetString"], 
         TagBox[
          InsetBox["", 481], "InsetString"], 
         TagBox[
          InsetBox["", 482], "InsetString"], 
         TagBox[
          InsetBox["", 483], "InsetString"], 
         TagBox[
          InsetBox["", 484], "InsetString"], 
         TagBox[
          InsetBox["", 485], "InsetString"], 
         TagBox[
          InsetBox["", 486], "InsetString"], 
         TagBox[
          InsetBox["", 487], "InsetString"], 
         TagBox[
          InsetBox["", 488], "InsetString"], 
         TagBox[
          InsetBox["", 489], "InsetString"], 
         TagBox[
          InsetBox["", 490], "InsetString"], 
         TagBox[
          InsetBox["", 491], "InsetString"], 
         TagBox[
          InsetBox["", 492], "InsetString"], 
         TagBox[
          InsetBox["", 493], "InsetString"], 
         TagBox[
          InsetBox["", 494], "InsetString"], 
         TagBox[
          InsetBox["", 495], "InsetString"], 
         TagBox[
          InsetBox["", 496], "InsetString"], 
         TagBox[
          InsetBox["", 497], "InsetString"], 
         TagBox[
          InsetBox["", 498], "InsetString"], 
         TagBox[
          InsetBox["", 499], "InsetString"], 
         TagBox[
          InsetBox["", 500], "InsetString"], 
         TagBox[
          InsetBox["", 501], "InsetString"], 
         TagBox[
          InsetBox["", 502], "InsetString"], 
         TagBox[
          InsetBox["", 503], "InsetString"], 
         TagBox[
          InsetBox["", 504], "InsetString"], 
         TagBox[
          InsetBox["", 505], "InsetString"], 
         TagBox[
          InsetBox["", 506], "InsetString"], 
         TagBox[
          InsetBox["", 507], "InsetString"], 
         TagBox[
          InsetBox["", 508], "InsetString"], 
         TagBox[
          InsetBox["", 509], "InsetString"], 
         TagBox[
          InsetBox["", 510], "InsetString"], 
         TagBox[
          InsetBox["", 511], "InsetString"], 
         TagBox[
          InsetBox["", 512], "InsetString"], 
         TagBox[
          InsetBox["", 513], "InsetString"], 
         TagBox[
          InsetBox["", 514], "InsetString"], 
         TagBox[
          InsetBox["", 515], "InsetString"], 
         TagBox[
          InsetBox["", 516], "InsetString"], 
         TagBox[
          InsetBox["", 517], "InsetString"], 
         TagBox[
          InsetBox["", 518], "InsetString"], 
         TagBox[
          InsetBox["", 519], "InsetString"], 
         TagBox[
          InsetBox["", 520], "InsetString"], 
         TagBox[
          InsetBox["", 521], "InsetString"], 
         TagBox[
          InsetBox["", 522], "InsetString"], 
         TagBox[
          InsetBox["", 523], "InsetString"], 
         TagBox[
          InsetBox["", 524], "InsetString"], 
         TagBox[
          InsetBox["", 525], "InsetString"], 
         TagBox[
          InsetBox["", 526], "InsetString"], 
         TagBox[
          InsetBox["", 527], "InsetString"], 
         TagBox[
          InsetBox["", 528], "InsetString"], 
         TagBox[
          InsetBox["", 529], "InsetString"], 
         TagBox[
          InsetBox["", 530], "InsetString"], 
         TagBox[
          InsetBox["", 531], "InsetString"], 
         TagBox[
          InsetBox["", 532], "InsetString"], 
         TagBox[
          InsetBox["", 533], "InsetString"], 
         TagBox[
          InsetBox["", 534], "InsetString"], 
         TagBox[
          InsetBox["", 535], "InsetString"], 
         TagBox[
          InsetBox["", 536], "InsetString"], 
         TagBox[
          InsetBox["", 537], "InsetString"], 
         TagBox[
          InsetBox["", 538], "InsetString"], 
         TagBox[
          InsetBox["", 539], "InsetString"], 
         TagBox[
          InsetBox["", 540], "InsetString"], 
         TagBox[
          InsetBox["", 541], "InsetString"], 
         TagBox[
          InsetBox["", 542], "InsetString"], 
         TagBox[
          InsetBox["", 543], "InsetString"], 
         TagBox[
          InsetBox["", 544], "InsetString"], 
         TagBox[
          InsetBox["", 545], "InsetString"], 
         TagBox[
          InsetBox["", 546], "InsetString"], 
         TagBox[
          InsetBox["", 547], "InsetString"], 
         TagBox[
          InsetBox["", 548], "InsetString"], 
         TagBox[
          InsetBox["", 549], "InsetString"], 
         TagBox[
          InsetBox["", 550], "InsetString"], 
         TagBox[
          InsetBox["", 551], "InsetString"], 
         TagBox[
          InsetBox["", 552], "InsetString"], 
         TagBox[
          InsetBox["", 553], "InsetString"], 
         TagBox[
          InsetBox["", 554], "InsetString"], 
         TagBox[
          InsetBox["", 555], "InsetString"], 
         TagBox[
          InsetBox["", 556], "InsetString"], 
         TagBox[
          InsetBox["", 557], "InsetString"], 
         TagBox[
          InsetBox["", 558], "InsetString"], 
         TagBox[
          InsetBox["", 559], "InsetString"], 
         TagBox[
          InsetBox["", 560], "InsetString"], 
         TagBox[
          InsetBox["", 561], "InsetString"], 
         TagBox[
          InsetBox["", 562], "InsetString"], 
         TagBox[
          InsetBox["", 563], "InsetString"], 
         TagBox[
          InsetBox["", 564], "InsetString"], 
         TagBox[
          InsetBox["", 565], "InsetString"], 
         TagBox[
          InsetBox["", 566], "InsetString"], 
         TagBox[
          InsetBox["", 567], "InsetString"], 
         TagBox[
          InsetBox["", 568], "InsetString"], 
         TagBox[
          InsetBox["", 569], "InsetString"], 
         TagBox[
          InsetBox["", 570], "InsetString"], 
         TagBox[
          InsetBox["", 571], "InsetString"], 
         TagBox[
          InsetBox["", 572], "InsetString"], 
         TagBox[
          InsetBox["", 573], "InsetString"], 
         TagBox[
          InsetBox["", 574], "InsetString"], 
         TagBox[
          InsetBox["", 575], "InsetString"], 
         TagBox[
          InsetBox["", 576], "InsetString"], 
         TagBox[
          InsetBox["", 577], "InsetString"], 
         TagBox[
          InsetBox["", 578], "InsetString"], 
         TagBox[
          InsetBox["", 579], "InsetString"], 
         TagBox[
          InsetBox["", 580], "InsetString"], 
         TagBox[
          InsetBox["", 581], "InsetString"], 
         TagBox[
          InsetBox["", 582], "InsetString"], 
         TagBox[
          InsetBox["", 583], "InsetString"], 
         TagBox[
          InsetBox["", 584], "InsetString"], 
         TagBox[
          InsetBox["", 585], "InsetString"], 
         TagBox[
          InsetBox["", 586], "InsetString"], 
         TagBox[
          InsetBox["", 587], "InsetString"], 
         TagBox[
          InsetBox["", 588], "InsetString"], 
         TagBox[
          InsetBox["", 589], "InsetString"], 
         TagBox[
          InsetBox["", 590], "InsetString"], 
         TagBox[
          InsetBox["", 591], "InsetString"], 
         TagBox[
          InsetBox["", 592], "InsetString"], 
         TagBox[
          InsetBox["", 593], "InsetString"], 
         TagBox[
          InsetBox["", 594], "InsetString"], 
         TagBox[
          InsetBox["", 595], "InsetString"], 
         TagBox[
          InsetBox["", 596], "InsetString"], 
         TagBox[
          InsetBox["", 597], "InsetString"], 
         TagBox[
          InsetBox["", 598], "InsetString"], 
         TagBox[
          InsetBox["", 599], "InsetString"], 
         TagBox[
          InsetBox["", 600], "InsetString"], 
         TagBox[
          InsetBox["", 601], "InsetString"], 
         TagBox[
          InsetBox["", 602], "InsetString"], 
         TagBox[
          InsetBox["", 603], "InsetString"], 
         TagBox[
          InsetBox["", 604], "InsetString"], 
         TagBox[
          InsetBox["", 605], "InsetString"], 
         TagBox[
          InsetBox["", 606], "InsetString"], 
         TagBox[
          InsetBox["", 607], "InsetString"], 
         TagBox[
          InsetBox["", 608], "InsetString"], 
         TagBox[
          InsetBox["", 609], "InsetString"], 
         TagBox[
          InsetBox["", 610], "InsetString"], 
         TagBox[
          InsetBox["", 611], "InsetString"], 
         TagBox[
          InsetBox["", 612], "InsetString"], 
         TagBox[
          InsetBox["", 613], "InsetString"], 
         TagBox[
          InsetBox["", 614], "InsetString"], 
         TagBox[
          InsetBox["", 615], "InsetString"], 
         TagBox[
          InsetBox["", 616], "InsetString"], 
         TagBox[
          InsetBox["", 617], "InsetString"], 
         TagBox[
          InsetBox["", 618], "InsetString"], 
         TagBox[
          InsetBox["", 619], "InsetString"], 
         TagBox[
          InsetBox["", 620], "InsetString"], 
         TagBox[
          InsetBox["", 621], "InsetString"], 
         TagBox[
          InsetBox["", 622], "InsetString"], 
         TagBox[
          InsetBox["", 623], "InsetString"], 
         TagBox[
          InsetBox["", 624], "InsetString"], 
         TagBox[
          InsetBox["", 625], "InsetString"], 
         TagBox[
          InsetBox["", 626], "InsetString"], 
         TagBox[
          InsetBox["", 627], "InsetString"], 
         TagBox[
          InsetBox["", 628], "InsetString"], 
         TagBox[
          InsetBox["", 629], "InsetString"], 
         TagBox[
          InsetBox["", 630], "InsetString"], 
         TagBox[
          InsetBox["", 631], "InsetString"], 
         TagBox[
          InsetBox["", 632], "InsetString"], 
         TagBox[
          InsetBox["", 633], "InsetString"], 
         TagBox[
          InsetBox["", 634], "InsetString"], 
         TagBox[
          InsetBox["", 635], "InsetString"], 
         TagBox[
          InsetBox["", 636], "InsetString"], 
         TagBox[
          InsetBox["", 637], "InsetString"], 
         TagBox[
          InsetBox["", 638], "InsetString"], 
         TagBox[
          InsetBox["", 639], "InsetString"], 
         TagBox[
          InsetBox["", 640], "InsetString"], 
         TagBox[
          InsetBox["", 641], "InsetString"], 
         TagBox[
          InsetBox["", 642], "InsetString"], 
         TagBox[
          InsetBox["", 643], "InsetString"], 
         TagBox[
          InsetBox["", 644], "InsetString"], 
         TagBox[
          InsetBox["", 645], "InsetString"], 
         TagBox[
          InsetBox["", 646], "InsetString"], 
         TagBox[
          InsetBox["", 647], "InsetString"], 
         TagBox[
          InsetBox["", 648], "InsetString"], 
         TagBox[
          InsetBox["", 649], "InsetString"], 
         TagBox[
          InsetBox["", 650], "InsetString"], 
         TagBox[
          InsetBox["", 651], "InsetString"], 
         TagBox[
          InsetBox["", 652], "InsetString"], 
         TagBox[
          InsetBox["", 653], "InsetString"], 
         TagBox[
          InsetBox["", 654], "InsetString"], 
         TagBox[
          InsetBox["", 655], "InsetString"], 
         TagBox[
          InsetBox["", 656], "InsetString"], 
         TagBox[
          InsetBox["", 657], "InsetString"], 
         TagBox[
          InsetBox["", 658], "InsetString"], 
         TagBox[
          InsetBox["", 659], "InsetString"], 
         TagBox[
          InsetBox["", 660], "InsetString"], 
         TagBox[
          InsetBox["", 661], "InsetString"], 
         TagBox[
          InsetBox["", 662], "InsetString"], 
         TagBox[
          InsetBox["", 663], "InsetString"], 
         TagBox[
          InsetBox["", 664], "InsetString"], 
         TagBox[
          InsetBox["", 665], "InsetString"], 
         TagBox[
          InsetBox["", 666], "InsetString"], 
         TagBox[
          InsetBox["", 667], "InsetString"], 
         TagBox[
          InsetBox["", 668], "InsetString"], 
         TagBox[
          InsetBox["", 669], "InsetString"], 
         TagBox[
          InsetBox["", 670], "InsetString"], 
         TagBox[
          InsetBox["", 671], "InsetString"], 
         TagBox[
          InsetBox["", 672], "InsetString"], 
         TagBox[
          InsetBox["", 673], "InsetString"], 
         TagBox[
          InsetBox["", 674], "InsetString"], 
         TagBox[
          InsetBox["", 675], "InsetString"], 
         TagBox[
          InsetBox["", 676], "InsetString"], 
         TagBox[
          InsetBox["", 677], "InsetString"], 
         TagBox[
          InsetBox["", 678], "InsetString"], 
         TagBox[
          InsetBox["", 679], "InsetString"], 
         TagBox[
          InsetBox["", 680], "InsetString"], 
         TagBox[
          InsetBox["", 681], "InsetString"], 
         TagBox[
          InsetBox["", 682], "InsetString"], 
         TagBox[
          InsetBox["", 683], "InsetString"], 
         TagBox[
          InsetBox["", 684], "InsetString"], 
         TagBox[
          InsetBox["", 685], "InsetString"], 
         TagBox[
          InsetBox["", 686], "InsetString"], 
         TagBox[
          InsetBox["", 687], "InsetString"], 
         TagBox[
          InsetBox["", 688], "InsetString"], 
         TagBox[
          InsetBox["", 689], "InsetString"], 
         TagBox[
          InsetBox["", 690], "InsetString"], 
         TagBox[
          InsetBox["", 691], "InsetString"], 
         TagBox[
          InsetBox["", 692], "InsetString"], 
         TagBox[
          InsetBox["", 693], "InsetString"], 
         TagBox[
          InsetBox["", 694], "InsetString"], 
         TagBox[
          InsetBox["", 695], "InsetString"], 
         TagBox[
          InsetBox["", 696], "InsetString"], 
         TagBox[
          InsetBox["", 697], "InsetString"], 
         TagBox[
          InsetBox["", 698], "InsetString"], 
         TagBox[
          InsetBox["", 699], "InsetString"], 
         TagBox[
          InsetBox["", 700], "InsetString"], 
         TagBox[
          InsetBox["", 701], "InsetString"], 
         TagBox[
          InsetBox["", 702], "InsetString"], 
         TagBox[
          InsetBox["", 703], "InsetString"], 
         TagBox[
          InsetBox["", 704], "InsetString"], 
         TagBox[
          InsetBox["", 705], "InsetString"], 
         TagBox[
          InsetBox["", 706], "InsetString"], 
         TagBox[
          InsetBox["", 707], "InsetString"], 
         TagBox[
          InsetBox["", 708], "InsetString"], 
         TagBox[
          InsetBox["", 709], "InsetString"], 
         TagBox[
          InsetBox["", 710], "InsetString"], 
         TagBox[
          InsetBox["", 711], "InsetString"], 
         TagBox[
          InsetBox["", 712], "InsetString"], 
         TagBox[
          InsetBox["", 713], "InsetString"], 
         TagBox[
          InsetBox["", 714], "InsetString"], 
         TagBox[
          InsetBox["", 715], "InsetString"], 
         TagBox[
          InsetBox["", 716], "InsetString"], 
         TagBox[
          InsetBox["", 717], "InsetString"], 
         TagBox[
          InsetBox["", 718], "InsetString"], 
         TagBox[
          InsetBox["", 719], "InsetString"], 
         TagBox[
          InsetBox["", 720], "InsetString"], 
         TagBox[
          InsetBox["", 721], "InsetString"], 
         TagBox[
          InsetBox["", 722], "InsetString"], 
         TagBox[
          InsetBox["", 723], "InsetString"], 
         TagBox[
          InsetBox["", 724], "InsetString"], 
         TagBox[
          InsetBox["", 725], "InsetString"], 
         TagBox[
          InsetBox["", 726], "InsetString"], 
         TagBox[
          InsetBox["", 727], "InsetString"], 
         TagBox[
          InsetBox["", 728], "InsetString"], 
         TagBox[
          InsetBox["", 729], "InsetString"], 
         TagBox[
          InsetBox["", 730], "InsetString"], 
         TagBox[
          InsetBox["", 731], "InsetString"], 
         TagBox[
          InsetBox["", 732], "InsetString"], 
         TagBox[
          InsetBox["", 733], "InsetString"], 
         TagBox[
          InsetBox["", 734], "InsetString"], 
         TagBox[
          InsetBox["", 735], "InsetString"], 
         TagBox[
          InsetBox["", 736], "InsetString"], 
         TagBox[
          InsetBox["", 737], "InsetString"], 
         TagBox[
          InsetBox["", 738], "InsetString"], 
         TagBox[
          InsetBox["", 739], "InsetString"], 
         TagBox[
          InsetBox["", 740], "InsetString"], 
         TagBox[
          InsetBox["", 741], "InsetString"], 
         TagBox[
          InsetBox["", 742], "InsetString"], 
         TagBox[
          InsetBox["", 743], "InsetString"], 
         TagBox[
          InsetBox["", 744], "InsetString"], 
         TagBox[
          InsetBox["", 745], "InsetString"], 
         TagBox[
          InsetBox["", 746], "InsetString"], 
         TagBox[
          InsetBox["", 747], "InsetString"], 
         TagBox[
          InsetBox["", 748], "InsetString"], 
         TagBox[
          InsetBox["", 749], "InsetString"], 
         TagBox[
          InsetBox["", 750], "InsetString"], 
         TagBox[
          InsetBox["", 751], "InsetString"], 
         TagBox[
          InsetBox["", 752], "InsetString"], 
         TagBox[
          InsetBox["", 753], "InsetString"], 
         TagBox[
          InsetBox["", 754], "InsetString"], 
         TagBox[
          InsetBox["", 755], "InsetString"], 
         TagBox[
          InsetBox["", 756], "InsetString"], 
         TagBox[
          InsetBox["", 757], "InsetString"], 
         TagBox[
          InsetBox["", 758], "InsetString"], 
         TagBox[
          InsetBox["", 759], "InsetString"], 
         TagBox[
          InsetBox["", 760], "InsetString"], 
         TagBox[
          InsetBox["", 761], "InsetString"], 
         TagBox[
          InsetBox["", 762], "InsetString"], 
         TagBox[
          InsetBox["", 763], "InsetString"], 
         TagBox[
          InsetBox["", 764], "InsetString"], 
         TagBox[
          InsetBox["", 765], "InsetString"], 
         TagBox[
          InsetBox["", 766], "InsetString"], 
         TagBox[
          InsetBox["", 767], "InsetString"], 
         TagBox[
          InsetBox["", 768], "InsetString"], 
         TagBox[
          InsetBox["", 769], "InsetString"], 
         TagBox[
          InsetBox["", 770], "InsetString"], 
         TagBox[
          InsetBox["", 771], "InsetString"], 
         TagBox[
          InsetBox["", 772], "InsetString"], 
         TagBox[
          InsetBox["", 773], "InsetString"], 
         TagBox[
          InsetBox["", 774], "InsetString"], 
         TagBox[
          InsetBox["", 775], "InsetString"], 
         TagBox[
          InsetBox["", 776], "InsetString"], 
         TagBox[
          InsetBox["", 777], "InsetString"], 
         TagBox[
          InsetBox["", 778], "InsetString"], 
         TagBox[
          InsetBox["", 779], "InsetString"], 
         TagBox[
          InsetBox["", 780], "InsetString"], 
         TagBox[
          InsetBox["", 781], "InsetString"], 
         TagBox[
          InsetBox["", 782], "InsetString"], 
         TagBox[
          InsetBox["", 783], "InsetString"], 
         TagBox[
          InsetBox["", 784], "InsetString"], 
         TagBox[
          InsetBox["", 785], "InsetString"], 
         TagBox[
          InsetBox["", 786], "InsetString"], 
         TagBox[
          InsetBox["", 787], "InsetString"], 
         TagBox[
          InsetBox["", 788], "InsetString"], 
         TagBox[
          InsetBox["", 789], "InsetString"], 
         TagBox[
          InsetBox["", 790], "InsetString"], 
         TagBox[
          InsetBox["", 791], "InsetString"], 
         TagBox[
          InsetBox["", 792], "InsetString"], 
         TagBox[
          InsetBox["", 793], "InsetString"], 
         TagBox[
          InsetBox["", 794], "InsetString"], 
         TagBox[
          InsetBox["", 795], "InsetString"], 
         TagBox[
          InsetBox["", 796], "InsetString"], 
         TagBox[
          InsetBox["", 797], "InsetString"], 
         TagBox[
          InsetBox["", 798], "InsetString"], 
         TagBox[
          InsetBox["", 799], "InsetString"], 
         TagBox[
          InsetBox["", 800], "InsetString"], 
         TagBox[
          InsetBox["", 801], "InsetString"], 
         TagBox[
          InsetBox["", 802], "InsetString"], 
         TagBox[
          InsetBox["", 803], "InsetString"], 
         TagBox[
          InsetBox["", 804], "InsetString"], 
         TagBox[
          InsetBox["", 805], "InsetString"], 
         TagBox[
          InsetBox["", 806], "InsetString"], 
         TagBox[
          InsetBox["", 807], "InsetString"], 
         TagBox[
          InsetBox["", 808], "InsetString"], 
         TagBox[
          InsetBox["", 809], "InsetString"], 
         TagBox[
          InsetBox["", 810], "InsetString"], 
         TagBox[
          InsetBox["", 811], "InsetString"], 
         TagBox[
          InsetBox["", 812], "InsetString"], 
         TagBox[
          InsetBox["", 813], "InsetString"], 
         TagBox[
          InsetBox["", 814], "InsetString"], 
         TagBox[
          InsetBox["", 815], "InsetString"], 
         TagBox[
          InsetBox["", 816], "InsetString"], 
         TagBox[
          InsetBox["", 817], "InsetString"], 
         TagBox[
          InsetBox["", 818], "InsetString"], 
         TagBox[
          InsetBox["", 819], "InsetString"], 
         TagBox[
          InsetBox["", 820], "InsetString"], 
         TagBox[
          InsetBox["", 821], "InsetString"], 
         TagBox[
          InsetBox["", 822], "InsetString"], 
         TagBox[
          InsetBox["", 823], "InsetString"], 
         TagBox[
          InsetBox["", 824], "InsetString"], 
         TagBox[
          InsetBox["", 825], "InsetString"], 
         TagBox[
          InsetBox["", 826], "InsetString"], 
         TagBox[
          InsetBox["", 827], "InsetString"], 
         TagBox[
          InsetBox["", 828], "InsetString"], 
         TagBox[
          InsetBox["", 829], "InsetString"], 
         TagBox[
          InsetBox["", 830], "InsetString"], 
         TagBox[
          InsetBox["", 831], "InsetString"], 
         TagBox[
          InsetBox["", 832], "InsetString"], 
         TagBox[
          InsetBox["", 833], "InsetString"], 
         TagBox[
          InsetBox["", 834], "InsetString"], 
         TagBox[
          InsetBox["", 835], "InsetString"], 
         TagBox[
          InsetBox["", 836], "InsetString"], 
         TagBox[
          InsetBox["", 837], "InsetString"], 
         TagBox[
          InsetBox["", 838], "InsetString"], 
         TagBox[
          InsetBox["", 839], "InsetString"], 
         TagBox[
          InsetBox["", 840], "InsetString"], 
         TagBox[
          InsetBox["", 841], "InsetString"], 
         TagBox[
          InsetBox["", 842], "InsetString"], 
         TagBox[
          InsetBox["", 843], "InsetString"], 
         TagBox[
          InsetBox["", 844], "InsetString"], 
         TagBox[
          InsetBox["", 845], "InsetString"], 
         TagBox[
          InsetBox["", 846], "InsetString"], 
         TagBox[
          InsetBox["", 847], "InsetString"], 
         TagBox[
          InsetBox["", 848], "InsetString"], 
         TagBox[
          InsetBox["", 849], "InsetString"], 
         TagBox[
          InsetBox["", 850], "InsetString"], 
         TagBox[
          InsetBox["", 851], "InsetString"], 
         TagBox[
          InsetBox["", 852], "InsetString"], 
         TagBox[
          InsetBox["", 853], "InsetString"], 
         TagBox[
          InsetBox["", 854], "InsetString"], 
         TagBox[
          InsetBox["", 855], "InsetString"], 
         TagBox[
          InsetBox["", 856], "InsetString"], 
         TagBox[
          InsetBox["", 857], "InsetString"], 
         TagBox[
          InsetBox["", 858], "InsetString"], 
         TagBox[
          InsetBox["", 859], "InsetString"], 
         TagBox[
          InsetBox["", 860], "InsetString"], 
         TagBox[
          InsetBox["", 861], "InsetString"], 
         TagBox[
          InsetBox["", 862], "InsetString"], 
         TagBox[
          InsetBox["", 863], "InsetString"], 
         TagBox[
          InsetBox["", 864], "InsetString"], 
         TagBox[
          InsetBox["", 865], "InsetString"], 
         TagBox[
          InsetBox["", 866], "InsetString"], 
         TagBox[
          InsetBox["", 867], "InsetString"], 
         TagBox[
          InsetBox["", 868], "InsetString"], 
         TagBox[
          InsetBox["", 869], "InsetString"], 
         TagBox[
          InsetBox["", 870], "InsetString"], 
         TagBox[
          InsetBox["", 871], "InsetString"], 
         TagBox[
          InsetBox["", 872], "InsetString"], 
         TagBox[
          InsetBox["", 873], "InsetString"], 
         TagBox[
          InsetBox["", 874], "InsetString"], 
         TagBox[
          InsetBox["", 875], "InsetString"], 
         TagBox[
          InsetBox["", 876], "InsetString"], 
         TagBox[
          InsetBox["", 877], "InsetString"], 
         TagBox[
          InsetBox["", 878], "InsetString"], 
         TagBox[
          InsetBox["", 879], "InsetString"], 
         TagBox[
          InsetBox["", 880], "InsetString"], 
         TagBox[
          InsetBox["", 881], "InsetString"], 
         TagBox[
          InsetBox["", 882], "InsetString"], 
         TagBox[
          InsetBox["", 883], "InsetString"], 
         TagBox[
          InsetBox["", 884], "InsetString"], 
         TagBox[
          InsetBox["", 885], "InsetString"], 
         TagBox[
          InsetBox["", 886], "InsetString"], 
         TagBox[
          InsetBox["", 887], "InsetString"], 
         TagBox[
          InsetBox["", 888], "InsetString"], 
         TagBox[
          InsetBox["", 889], "InsetString"], 
         TagBox[
          InsetBox["", 890], "InsetString"], 
         TagBox[
          InsetBox["", 891], "InsetString"], 
         TagBox[
          InsetBox["", 892], "InsetString"], 
         TagBox[
          InsetBox["", 893], "InsetString"], 
         TagBox[
          InsetBox["", 894], "InsetString"], 
         TagBox[
          InsetBox["", 895], "InsetString"], 
         TagBox[
          InsetBox["", 896], "InsetString"], 
         TagBox[
          InsetBox["", 897], "InsetString"], 
         TagBox[
          InsetBox["", 898], "InsetString"], 
         TagBox[
          InsetBox["", 899], "InsetString"], 
         TagBox[
          InsetBox["", 900], "InsetString"], 
         TagBox[
          InsetBox["", 901], "InsetString"], 
         TagBox[
          InsetBox["", 902], "InsetString"], 
         TagBox[
          InsetBox["", 903], "InsetString"], 
         TagBox[
          InsetBox["", 904], "InsetString"], 
         TagBox[
          InsetBox["", 905], "InsetString"], 
         TagBox[
          InsetBox["", 906], "InsetString"], 
         TagBox[
          InsetBox["", 907], "InsetString"], 
         TagBox[
          InsetBox["", 908], "InsetString"], 
         TagBox[
          InsetBox["", 909], "InsetString"], 
         TagBox[
          InsetBox["", 910], "InsetString"], 
         TagBox[
          InsetBox["", 911], "InsetString"], 
         TagBox[
          InsetBox["", 912], "InsetString"], 
         TagBox[
          InsetBox["", 913], "InsetString"], 
         TagBox[
          InsetBox["", 914], "InsetString"], 
         TagBox[
          InsetBox["", 915], "InsetString"], 
         TagBox[
          InsetBox["", 916], "InsetString"], 
         TagBox[
          InsetBox["", 917], "InsetString"], 
         TagBox[
          InsetBox["", 918], "InsetString"], 
         TagBox[
          InsetBox["", 919], "InsetString"], 
         TagBox[
          InsetBox["", 920], "InsetString"], 
         TagBox[
          InsetBox["", 921], "InsetString"], 
         TagBox[
          InsetBox["", 922], "InsetString"], 
         TagBox[
          InsetBox["", 923], "InsetString"], 
         TagBox[
          InsetBox["", 924], "InsetString"], 
         TagBox[
          InsetBox["", 925], "InsetString"], 
         TagBox[
          InsetBox["", 926], "InsetString"], 
         TagBox[
          InsetBox["", 927], "InsetString"], 
         TagBox[
          InsetBox["", 928], "InsetString"], 
         TagBox[
          InsetBox["", 929], "InsetString"], 
         TagBox[
          InsetBox["", 930], "InsetString"], 
         TagBox[
          InsetBox["", 931], "InsetString"], 
         TagBox[
          InsetBox["", 932], "InsetString"], 
         TagBox[
          InsetBox["", 933], "InsetString"], 
         TagBox[
          InsetBox["", 934], "InsetString"], 
         TagBox[
          InsetBox["", 935], "InsetString"], 
         TagBox[
          InsetBox["", 936], "InsetString"], 
         TagBox[
          InsetBox["", 937], "InsetString"], 
         TagBox[
          InsetBox["", 938], "InsetString"], 
         TagBox[
          InsetBox["", 939], "InsetString"], 
         TagBox[
          InsetBox["", 940], "InsetString"], 
         TagBox[
          InsetBox["", 941], "InsetString"], 
         TagBox[
          InsetBox["", 942], "InsetString"], 
         TagBox[
          InsetBox["", 943], "InsetString"], 
         TagBox[
          InsetBox["", 944], "InsetString"], 
         TagBox[
          InsetBox["", 945], "InsetString"], 
         TagBox[
          InsetBox["", 946], "InsetString"], 
         TagBox[
          InsetBox["", 947], "InsetString"], 
         TagBox[
          InsetBox["", 948], "InsetString"], 
         TagBox[
          InsetBox["", 949], "InsetString"], 
         TagBox[
          InsetBox["", 950], "InsetString"], 
         TagBox[
          InsetBox["", 951], "InsetString"], 
         TagBox[
          InsetBox["", 952], "InsetString"], 
         TagBox[
          InsetBox["", 953], "InsetString"], 
         TagBox[
          InsetBox["", 954], "InsetString"], 
         TagBox[
          InsetBox["", 955], "InsetString"], 
         TagBox[
          InsetBox["", 956], "InsetString"], 
         TagBox[
          InsetBox["", 957], "InsetString"], 
         TagBox[
          InsetBox["", 958], "InsetString"], 
         TagBox[
          InsetBox["", 959], "InsetString"], 
         TagBox[
          InsetBox["", 960], "InsetString"], 
         TagBox[
          InsetBox["", 961], "InsetString"], 
         TagBox[
          InsetBox["", 962], "InsetString"], 
         TagBox[
          InsetBox["", 963], "InsetString"], 
         TagBox[
          InsetBox["", 964], "InsetString"], 
         TagBox[
          InsetBox["", 965], "InsetString"], 
         TagBox[
          InsetBox["", 966], "InsetString"], 
         TagBox[
          InsetBox["", 967], "InsetString"], 
         TagBox[
          InsetBox["", 968], "InsetString"], 
         TagBox[
          InsetBox["", 969], "InsetString"], 
         TagBox[
          InsetBox["", 970], "InsetString"], 
         TagBox[
          InsetBox["", 971], "InsetString"], 
         TagBox[
          InsetBox["", 972], "InsetString"], 
         TagBox[
          InsetBox["", 973], "InsetString"], 
         TagBox[
          InsetBox["", 974], "InsetString"], 
         TagBox[
          InsetBox["", 975], "InsetString"], 
         TagBox[
          InsetBox["", 976], "InsetString"], 
         TagBox[
          InsetBox["", 977], "InsetString"], 
         TagBox[
          InsetBox["", 978], "InsetString"], 
         TagBox[
          InsetBox["", 979], "InsetString"], 
         TagBox[
          InsetBox["", 980], "InsetString"], 
         TagBox[
          InsetBox["", 981], "InsetString"], 
         TagBox[
          InsetBox["", 982], "InsetString"], 
         TagBox[
          InsetBox["", 983], "InsetString"], 
         TagBox[
          InsetBox["", 984], "InsetString"], 
         TagBox[
          InsetBox["", 985], "InsetString"], 
         TagBox[
          InsetBox["", 986], "InsetString"], 
         TagBox[
          InsetBox["", 987], "InsetString"], 
         TagBox[
          InsetBox["", 988], "InsetString"], 
         TagBox[
          InsetBox["", 989], "InsetString"], 
         TagBox[
          InsetBox["", 990], "InsetString"], 
         TagBox[
          InsetBox["", 991], "InsetString"], 
         TagBox[
          InsetBox["", 992], "InsetString"], 
         TagBox[
          InsetBox["", 993], "InsetString"], 
         TagBox[
          InsetBox["", 994], "InsetString"], 
         TagBox[
          InsetBox["", 995], "InsetString"], 
         TagBox[
          InsetBox["", 996], "InsetString"], 
         TagBox[
          InsetBox["", 997], "InsetString"], 
         TagBox[
          InsetBox["", 998], "InsetString"], 
         TagBox[
          InsetBox["", 999], "InsetString"], 
         TagBox[
          InsetBox["", 1000], "InsetString"], 
         TagBox[
          InsetBox["", 1001], "InsetString"], 
         TagBox[
          InsetBox["", 1002], "InsetString"], 
         TagBox[
          InsetBox["", 1003], "InsetString"], 
         TagBox[
          InsetBox["", 1004], "InsetString"], 
         TagBox[
          InsetBox["", 1005], "InsetString"], 
         TagBox[
          InsetBox["", 1006], "InsetString"], 
         TagBox[
          InsetBox["", 1007], "InsetString"], 
         TagBox[
          InsetBox["", 1008], "InsetString"], 
         TagBox[
          InsetBox["", 1009], "InsetString"], 
         TagBox[
          InsetBox["", 1010], "InsetString"], 
         TagBox[
          InsetBox["", 1011], "InsetString"], 
         TagBox[
          InsetBox["", 1012], "InsetString"], 
         TagBox[
          InsetBox["", 1013], "InsetString"], 
         TagBox[
          InsetBox["", 1014], "InsetString"], 
         TagBox[
          InsetBox["", 1015], "InsetString"], 
         TagBox[
          InsetBox["", 1016], "InsetString"], 
         TagBox[
          InsetBox["", 1017], "InsetString"], 
         TagBox[
          InsetBox["", 1018], "InsetString"], 
         TagBox[
          InsetBox["", 1019], "InsetString"], 
         TagBox[
          InsetBox["", 1020], "InsetString"], 
         TagBox[
          InsetBox["", 1021], "InsetString"], 
         TagBox[
          InsetBox["", 1022], "InsetString"], 
         TagBox[
          InsetBox["", 1023], "InsetString"], 
         TagBox[
          InsetBox["", 1024], "InsetString"], 
         TagBox[
          InsetBox["", 1025], "InsetString"], 
         TagBox[
          InsetBox["", 1026], "InsetString"], 
         TagBox[
          InsetBox["", 1027], "InsetString"], 
         TagBox[
          InsetBox["", 1028], "InsetString"], 
         TagBox[
          InsetBox["", 1029], "InsetString"], 
         TagBox[
          InsetBox["", 1030], "InsetString"], 
         TagBox[
          InsetBox["", 1031], "InsetString"], 
         TagBox[
          InsetBox["", 1032], "InsetString"], 
         TagBox[
          InsetBox["", 1033], "InsetString"], 
         TagBox[
          InsetBox["", 1034], "InsetString"], 
         TagBox[
          InsetBox["", 1035], "InsetString"], 
         TagBox[
          InsetBox["", 1036], "InsetString"], 
         TagBox[
          InsetBox["", 1037], "InsetString"], 
         TagBox[
          InsetBox["", 1038], "InsetString"], 
         TagBox[
          InsetBox["", 1039], "InsetString"], 
         TagBox[
          InsetBox["", 1040], "InsetString"], 
         TagBox[
          InsetBox["", 1041], "InsetString"], 
         TagBox[
          InsetBox["", 1042], "InsetString"], 
         TagBox[
          InsetBox["", 1043], "InsetString"], 
         TagBox[
          InsetBox["", 1044], "InsetString"], 
         TagBox[
          InsetBox["", 1045], "InsetString"], 
         TagBox[
          InsetBox["", 1046], "InsetString"], 
         TagBox[
          InsetBox["", 1047], "InsetString"], 
         TagBox[
          InsetBox["", 1048], "InsetString"], 
         TagBox[
          InsetBox["", 1049], "InsetString"], 
         TagBox[
          InsetBox["", 1050], "InsetString"], 
         TagBox[
          InsetBox["", 1051], "InsetString"], 
         TagBox[
          InsetBox["", 1052], "InsetString"], 
         TagBox[
          InsetBox["", 1053], "InsetString"], 
         TagBox[
          InsetBox["", 1054], "InsetString"], 
         TagBox[
          InsetBox["", 1055], "InsetString"], 
         TagBox[
          InsetBox["", 1056], "InsetString"], 
         TagBox[
          InsetBox["", 1057], "InsetString"], 
         TagBox[
          InsetBox["", 1058], "InsetString"], 
         TagBox[
          InsetBox["", 1059], "InsetString"], 
         TagBox[
          InsetBox["", 1060], "InsetString"], 
         TagBox[
          InsetBox["", 1061], "InsetString"], 
         TagBox[
          InsetBox["", 1062], "InsetString"], 
         TagBox[
          InsetBox["", 1063], "InsetString"], 
         TagBox[
          InsetBox["", 1064], "InsetString"], 
         TagBox[
          InsetBox["", 1065], "InsetString"], 
         TagBox[
          InsetBox["", 1066], "InsetString"], 
         TagBox[
          InsetBox["", 1067], "InsetString"], 
         TagBox[
          InsetBox["", 1068], "InsetString"], 
         TagBox[
          InsetBox["", 1069], "InsetString"], 
         TagBox[
          InsetBox["", 1070], "InsetString"], 
         TagBox[
          InsetBox["", 1071], "InsetString"], 
         TagBox[
          InsetBox["", 1072], "InsetString"], 
         TagBox[
          InsetBox["", 1073], "InsetString"], 
         TagBox[
          InsetBox["", 1074], "InsetString"], 
         TagBox[
          InsetBox["", 1075], "InsetString"], 
         TagBox[
          InsetBox["", 1076], "InsetString"], 
         TagBox[
          InsetBox["", 1077], "InsetString"], 
         TagBox[
          InsetBox["", 1078], "InsetString"], 
         TagBox[
          InsetBox["", 1079], "InsetString"], 
         TagBox[
          InsetBox["", 1080], "InsetString"], 
         TagBox[
          InsetBox["", 1081], "InsetString"], 
         TagBox[
          InsetBox["", 1082], "InsetString"], 
         TagBox[
          InsetBox["", 1083], "InsetString"], 
         TagBox[
          InsetBox["", 1084], "InsetString"], 
         TagBox[
          InsetBox["", 1085], "InsetString"], 
         TagBox[
          InsetBox["", 1086], "InsetString"], 
         TagBox[
          InsetBox["", 1087], "InsetString"], 
         TagBox[
          InsetBox["", 1088], "InsetString"], 
         TagBox[
          InsetBox["", 1089], "InsetString"], 
         TagBox[
          InsetBox["", 1090], "InsetString"], 
         TagBox[
          InsetBox["", 1091], "InsetString"], 
         TagBox[
          InsetBox["", 1092], "InsetString"], 
         TagBox[
          InsetBox["", 1093], "InsetString"], 
         TagBox[
          InsetBox["", 1094], "InsetString"], 
         TagBox[
          InsetBox["", 1095], "InsetString"], 
         TagBox[
          InsetBox["", 1096], "InsetString"], 
         TagBox[
          InsetBox["", 1097], "InsetString"], 
         TagBox[
          InsetBox["", 1098], "InsetString"], 
         TagBox[
          InsetBox["", 1099], "InsetString"], 
         TagBox[
          InsetBox["", 1100], "InsetString"], 
         TagBox[
          InsetBox["", 1101], "InsetString"], 
         TagBox[
          InsetBox["", 1102], "InsetString"], 
         TagBox[
          InsetBox["", 1103], "InsetString"], 
         TagBox[
          InsetBox["", 1104], "InsetString"], 
         TagBox[
          InsetBox["", 1105], "InsetString"], 
         TagBox[
          InsetBox["", 1106], "InsetString"], 
         TagBox[
          InsetBox["", 1107], "InsetString"], 
         TagBox[
          InsetBox["", 1108], "InsetString"], 
         TagBox[
          InsetBox["", 1109], "InsetString"], 
         TagBox[
          InsetBox["", 1110], "InsetString"], 
         TagBox[
          InsetBox["", 1111], "InsetString"], 
         TagBox[
          InsetBox["", 1112], "InsetString"], 
         TagBox[
          InsetBox["", 1113], "InsetString"], 
         TagBox[
          InsetBox["", 1114], "InsetString"], 
         TagBox[
          InsetBox["", 1115], "InsetString"], 
         TagBox[
          InsetBox["", 1116], "InsetString"], 
         TagBox[
          InsetBox["", 1117], "InsetString"], 
         TagBox[
          InsetBox["", 1118], "InsetString"], 
         TagBox[
          InsetBox["", 1119], "InsetString"], 
         TagBox[
          InsetBox["", 1120], "InsetString"], 
         TagBox[
          InsetBox["", 1121], "InsetString"], 
         TagBox[
          InsetBox["", 1122], "InsetString"], 
         TagBox[
          InsetBox["", 1123], "InsetString"], 
         TagBox[
          InsetBox["", 1124], "InsetString"], 
         TagBox[
          InsetBox["", 1125], "InsetString"], 
         TagBox[
          InsetBox["", 1126], "InsetString"], 
         TagBox[
          InsetBox["", 1127], "InsetString"], 
         TagBox[
          InsetBox["", 1128], "InsetString"], 
         TagBox[
          InsetBox["", 1129], "InsetString"], 
         TagBox[
          InsetBox["", 1130], "InsetString"], 
         TagBox[
          InsetBox["", 1131], "InsetString"], 
         TagBox[
          InsetBox["", 1132], "InsetString"], 
         TagBox[
          InsetBox["", 1133], "InsetString"], 
         TagBox[
          InsetBox["", 1134], "InsetString"], 
         TagBox[
          InsetBox["", 1135], "InsetString"], 
         TagBox[
          InsetBox["", 1136], "InsetString"], 
         TagBox[
          InsetBox["", 1137], "InsetString"], 
         TagBox[
          InsetBox["", 1138], "InsetString"], 
         TagBox[
          InsetBox["", 1139], "InsetString"], 
         TagBox[
          InsetBox["", 1140], "InsetString"], 
         TagBox[
          InsetBox["", 1141], "InsetString"], 
         TagBox[
          InsetBox["", 1142], "InsetString"], 
         TagBox[
          InsetBox["", 1143], "InsetString"], 
         TagBox[
          InsetBox["", 1144], "InsetString"], 
         TagBox[
          InsetBox["", 1145], "InsetString"], 
         TagBox[
          InsetBox["", 1146], "InsetString"], 
         TagBox[
          InsetBox["", 1147], "InsetString"], 
         TagBox[
          InsetBox["", 1148], "InsetString"], 
         TagBox[
          InsetBox["", 1149], "InsetString"], 
         TagBox[
          InsetBox["", 1150], "InsetString"], 
         TagBox[
          InsetBox["", 1151], "InsetString"], 
         TagBox[
          InsetBox["", 1152], "InsetString"], 
         TagBox[
          InsetBox["", 1153], "InsetString"], 
         TagBox[
          InsetBox["", 1154], "InsetString"], 
         TagBox[
          InsetBox["", 1155], "InsetString"], 
         TagBox[
          InsetBox["", 1156], "InsetString"], 
         TagBox[
          InsetBox["", 1157], "InsetString"], 
         TagBox[
          InsetBox["", 1158], "InsetString"], 
         TagBox[
          InsetBox["", 1159], "InsetString"], 
         TagBox[
          InsetBox["", 1160], "InsetString"], 
         TagBox[
          InsetBox["", 1161], "InsetString"], 
         TagBox[
          InsetBox["", 1162], "InsetString"], 
         TagBox[
          InsetBox["", 1163], "InsetString"], 
         TagBox[
          InsetBox["", 1164], "InsetString"], 
         TagBox[
          InsetBox["", 1165], "InsetString"], 
         TagBox[
          InsetBox["", 1166], "InsetString"], 
         TagBox[
          InsetBox["", 1167], "InsetString"], 
         TagBox[
          InsetBox["", 1168], "InsetString"], 
         TagBox[
          InsetBox["", 1169], "InsetString"], 
         TagBox[
          InsetBox["", 1170], "InsetString"], 
         TagBox[
          InsetBox["", 1171], "InsetString"], 
         TagBox[
          InsetBox["", 1172], "InsetString"], 
         TagBox[
          InsetBox["", 1173], "InsetString"], 
         TagBox[
          InsetBox["", 1174], "InsetString"], 
         TagBox[
          InsetBox["", 1175], "InsetString"], 
         TagBox[
          InsetBox["", 1176], "InsetString"], 
         TagBox[
          InsetBox["", 1177], "InsetString"], 
         TagBox[
          InsetBox["", 1178], "InsetString"], 
         TagBox[
          InsetBox["", 1179], "InsetString"], 
         TagBox[
          InsetBox["", 1180], "InsetString"], 
         TagBox[
          InsetBox["", 1181], "InsetString"], 
         TagBox[
          InsetBox["", 1182], "InsetString"], 
         TagBox[
          InsetBox["", 1183], "InsetString"], 
         TagBox[
          InsetBox["", 1184], "InsetString"], 
         TagBox[
          InsetBox["", 1185], "InsetString"], 
         TagBox[
          InsetBox["", 1186], "InsetString"], 
         TagBox[
          InsetBox["", 1187], "InsetString"], 
         TagBox[
          InsetBox["", 1188], "InsetString"], 
         TagBox[
          InsetBox["", 1189], "InsetString"], 
         TagBox[
          InsetBox["", 1190], "InsetString"], 
         TagBox[
          InsetBox["", 1191], "InsetString"], 
         TagBox[
          InsetBox["", 1192], "InsetString"], 
         TagBox[
          InsetBox["", 1193], "InsetString"], 
         TagBox[
          InsetBox["", 1194], "InsetString"], 
         TagBox[
          InsetBox["", 1195], "InsetString"], 
         TagBox[
          InsetBox["", 1196], "InsetString"], 
         TagBox[
          InsetBox["", 1197], "InsetString"], 
         TagBox[
          InsetBox["", 1198], "InsetString"], 
         TagBox[
          InsetBox["", 1199], "InsetString"], 
         TagBox[
          InsetBox["", 1200], "InsetString"], 
         TagBox[
          InsetBox["", 1201], "InsetString"], 
         TagBox[
          InsetBox["", 1202], "InsetString"], 
         TagBox[
          InsetBox["", 1203], "InsetString"], 
         TagBox[
          InsetBox["", 1204], "InsetString"], 
         TagBox[
          InsetBox["", 1205], "InsetString"], 
         TagBox[
          InsetBox["", 1206], "InsetString"], 
         TagBox[
          InsetBox["", 1207], "InsetString"], 
         TagBox[
          InsetBox["", 1208], "InsetString"], 
         TagBox[
          InsetBox["", 1209], "InsetString"], 
         TagBox[
          InsetBox["", 1210], "InsetString"], 
         TagBox[
          InsetBox["", 1211], "InsetString"], 
         TagBox[
          InsetBox["", 1212], "InsetString"], 
         TagBox[
          InsetBox["", 1213], "InsetString"], 
         TagBox[
          InsetBox["", 1214], "InsetString"], 
         TagBox[
          InsetBox["", 1215], "InsetString"], 
         TagBox[
          InsetBox["", 1216], "InsetString"], 
         TagBox[
          InsetBox["", 1217], "InsetString"], 
         TagBox[
          InsetBox["", 1218], "InsetString"], 
         TagBox[
          InsetBox["", 1219], "InsetString"], 
         TagBox[
          InsetBox["", 1220], "InsetString"], 
         TagBox[
          InsetBox["", 1221], "InsetString"], 
         TagBox[
          InsetBox["", 1222], "InsetString"], 
         TagBox[
          InsetBox["", 1223], "InsetString"], 
         TagBox[
          InsetBox["", 1224], "InsetString"], 
         TagBox[
          InsetBox["", 1225], "InsetString"], 
         TagBox[
          InsetBox["", 1226], "InsetString"], 
         TagBox[
          InsetBox["", 1227], "InsetString"], 
         TagBox[
          InsetBox["", 1228], "InsetString"], 
         TagBox[
          InsetBox["", 1229], "InsetString"], 
         TagBox[
          InsetBox["", 1230], "InsetString"], 
         TagBox[
          InsetBox["", 1231], "InsetString"], 
         TagBox[
          InsetBox["", 1232], "InsetString"], 
         TagBox[
          InsetBox["", 1233], "InsetString"], 
         TagBox[
          InsetBox["", 1234], "InsetString"], 
         TagBox[
          InsetBox["", 1235], "InsetString"], 
         TagBox[
          InsetBox["", 1236], "InsetString"], 
         TagBox[
          InsetBox["", 1237], "InsetString"], 
         TagBox[
          InsetBox["", 1238], "InsetString"], 
         TagBox[
          InsetBox["", 1239], "InsetString"], 
         TagBox[
          InsetBox["", 1240], "InsetString"], 
         TagBox[
          InsetBox["", 1241], "InsetString"], 
         TagBox[
          InsetBox["", 1242], "InsetString"], 
         TagBox[
          InsetBox["", 1243], "InsetString"], 
         TagBox[
          InsetBox["", 1244], "InsetString"], 
         TagBox[
          InsetBox["", 1245], "InsetString"], 
         TagBox[
          InsetBox["", 1246], "InsetString"], 
         TagBox[
          InsetBox["", 1247], "InsetString"], 
         TagBox[
          InsetBox["", 1248], "InsetString"], 
         TagBox[
          InsetBox["", 1249], "InsetString"], 
         TagBox[
          InsetBox["", 1250], "InsetString"], 
         TagBox[
          InsetBox["", 1251], "InsetString"], 
         TagBox[
          InsetBox["", 1252], "InsetString"], 
         TagBox[
          InsetBox["", 1253], "InsetString"], 
         TagBox[
          InsetBox["", 1254], "InsetString"], 
         TagBox[
          InsetBox["", 1255], "InsetString"], 
         TagBox[
          InsetBox["", 1256], "InsetString"], 
         TagBox[
          InsetBox["", 1257], "InsetString"], 
         TagBox[
          InsetBox["", 1258], "InsetString"], 
         TagBox[
          InsetBox["", 1259], "InsetString"], 
         TagBox[
          InsetBox["", 1260], "InsetString"], 
         TagBox[
          InsetBox["", 1261], "InsetString"], 
         TagBox[
          InsetBox["", 1262], "InsetString"], 
         TagBox[
          InsetBox["", 1263], "InsetString"], 
         TagBox[
          InsetBox["", 1264], "InsetString"], 
         TagBox[
          InsetBox["", 1265], "InsetString"], 
         TagBox[
          InsetBox["", 1266], "InsetString"], 
         TagBox[
          InsetBox["", 1267], "InsetString"], 
         TagBox[
          InsetBox["", 1268], "InsetString"], 
         TagBox[
          InsetBox["", 1269], "InsetString"], 
         TagBox[
          InsetBox["", 1270], "InsetString"], 
         TagBox[
          InsetBox["", 1271], "InsetString"], 
         TagBox[
          InsetBox["", 1272], "InsetString"], 
         TagBox[
          InsetBox["", 1273], "InsetString"], 
         TagBox[
          InsetBox["", 1274], "InsetString"], 
         TagBox[
          InsetBox["", 1275], "InsetString"], 
         TagBox[
          InsetBox["", 1276], "InsetString"], 
         TagBox[
          InsetBox["", 1277], "InsetString"], 
         TagBox[
          InsetBox["", 1278], "InsetString"], 
         TagBox[
          InsetBox["", 1279], "InsetString"], 
         TagBox[
          InsetBox["", 1280], "InsetString"], 
         TagBox[
          InsetBox["", 1281], "InsetString"], 
         TagBox[
          InsetBox["", 1282], "InsetString"], 
         TagBox[
          InsetBox["", 1283], "InsetString"], 
         TagBox[
          InsetBox["", 1284], "InsetString"], 
         TagBox[
          InsetBox["", 1285], "InsetString"], 
         TagBox[
          InsetBox["", 1286], "InsetString"], 
         TagBox[
          InsetBox["", 1287], "InsetString"], 
         TagBox[
          InsetBox["", 1288], "InsetString"], 
         TagBox[
          InsetBox["", 1289], "InsetString"], 
         TagBox[
          InsetBox["", 1290], "InsetString"], 
         TagBox[
          InsetBox["", 1291], "InsetString"], 
         TagBox[
          InsetBox["", 1292], "InsetString"], 
         TagBox[
          InsetBox["", 1293], "InsetString"], 
         TagBox[
          InsetBox["", 1294], "InsetString"], 
         TagBox[
          InsetBox["", 1295], "InsetString"], 
         TagBox[
          InsetBox["", 1296], "InsetString"], 
         TagBox[
          InsetBox["", 1297], "InsetString"], 
         TagBox[
          InsetBox["", 1298], "InsetString"], 
         TagBox[
          InsetBox["", 1299], "InsetString"], 
         TagBox[
          InsetBox["", 1300], "InsetString"], 
         TagBox[
          InsetBox["", 1301], "InsetString"], 
         TagBox[
          InsetBox["", 1302], "InsetString"], 
         TagBox[
          InsetBox["", 1303], "InsetString"], 
         TagBox[
          InsetBox["", 1304], "InsetString"], 
         TagBox[
          InsetBox["", 1305], "InsetString"], 
         TagBox[
          InsetBox["", 1306], "InsetString"], 
         TagBox[
          InsetBox["", 1307], "InsetString"], 
         TagBox[
          InsetBox["", 1308], "InsetString"], 
         TagBox[
          InsetBox["", 1309], "InsetString"], 
         TagBox[
          InsetBox["", 1310], "InsetString"], 
         TagBox[
          InsetBox["", 1311], "InsetString"], 
         TagBox[
          InsetBox["", 1312], "InsetString"], 
         TagBox[
          InsetBox["", 1313], "InsetString"], 
         TagBox[
          InsetBox["", 1314], "InsetString"], 
         TagBox[
          InsetBox["", 1315], "InsetString"], 
         TagBox[
          InsetBox["", 1316], "InsetString"], 
         TagBox[
          InsetBox["", 1317], "InsetString"], 
         TagBox[
          InsetBox["", 1318], "InsetString"], 
         TagBox[
          InsetBox["", 1319], "InsetString"], 
         TagBox[
          InsetBox["", 1320], "InsetString"], 
         TagBox[
          InsetBox["", 1321], "InsetString"], 
         TagBox[
          InsetBox["", 1322], "InsetString"], 
         TagBox[
          InsetBox["", 1323], "InsetString"], 
         TagBox[
          InsetBox["", 1324], "InsetString"], 
         TagBox[
          InsetBox["", 1325], "InsetString"], 
         TagBox[
          InsetBox["", 1326], "InsetString"], 
         TagBox[
          InsetBox["", 1327], "InsetString"], 
         TagBox[
          InsetBox["", 1328], "InsetString"], 
         TagBox[
          InsetBox["", 1329], "InsetString"], 
         TagBox[
          InsetBox["", 1330], "InsetString"], 
         TagBox[
          InsetBox["", 1331], "InsetString"], 
         TagBox[
          InsetBox["", 1332], "InsetString"], 
         TagBox[
          InsetBox["", 1333], "InsetString"], 
         TagBox[
          InsetBox["", 1334], "InsetString"], 
         TagBox[
          InsetBox["", 1335], "InsetString"], 
         TagBox[
          InsetBox["", 1336], "InsetString"], 
         TagBox[
          InsetBox["", 1337], "InsetString"], 
         TagBox[
          InsetBox["", 1338], "InsetString"], 
         TagBox[
          InsetBox["", 1339], "InsetString"], 
         TagBox[
          InsetBox["", 1340], "InsetString"], 
         TagBox[
          InsetBox["", 1341], "InsetString"], 
         TagBox[
          InsetBox["", 1342], "InsetString"], 
         TagBox[
          InsetBox["", 1343], "InsetString"], 
         TagBox[
          InsetBox["", 1344], "InsetString"], 
         TagBox[
          InsetBox["", 1345], "InsetString"], 
         TagBox[
          InsetBox["", 1346], "InsetString"], 
         TagBox[
          InsetBox["", 1347], "InsetString"], 
         TagBox[
          InsetBox["", 1348], "InsetString"], 
         TagBox[
          InsetBox["", 1349], "InsetString"], 
         TagBox[
          InsetBox["", 1350], "InsetString"], 
         TagBox[
          InsetBox["", 1351], "InsetString"], 
         TagBox[
          InsetBox["", 1352], "InsetString"], 
         TagBox[
          InsetBox["", 1353], "InsetString"], 
         TagBox[
          InsetBox["", 1354], "InsetString"], 
         TagBox[
          InsetBox["", 1355], "InsetString"], 
         TagBox[
          InsetBox["", 1356], "InsetString"], 
         TagBox[
          InsetBox["", 1357], "InsetString"], 
         TagBox[
          InsetBox["", 1358], "InsetString"], 
         TagBox[
          InsetBox["", 1359], "InsetString"], 
         TagBox[
          InsetBox["", 1360], "InsetString"], 
         TagBox[
          InsetBox["", 1361], "InsetString"], 
         TagBox[
          InsetBox["", 1362], "InsetString"], 
         TagBox[
          InsetBox["", 1363], "InsetString"], 
         TagBox[
          InsetBox["", 1364], "InsetString"], 
         TagBox[
          InsetBox["", 1365], "InsetString"], 
         TagBox[
          InsetBox["", 1366], "InsetString"], 
         TagBox[
          InsetBox["", 1367], "InsetString"], 
         TagBox[
          InsetBox["", 1368], "InsetString"], 
         TagBox[
          InsetBox["", 1369], "InsetString"], 
         TagBox[
          InsetBox["", 1370], "InsetString"], 
         TagBox[
          InsetBox["", 1371], "InsetString"], 
         TagBox[
          InsetBox["", 1372], "InsetString"], 
         TagBox[
          InsetBox["", 1373], "InsetString"], 
         TagBox[
          InsetBox["", 1374], "InsetString"], 
         TagBox[
          InsetBox["", 1375], "InsetString"], 
         TagBox[
          InsetBox["", 1376], "InsetString"], 
         TagBox[
          InsetBox["", 1377], "InsetString"], 
         TagBox[
          InsetBox["", 1378], "InsetString"], 
         TagBox[
          InsetBox["", 1379], "InsetString"], 
         TagBox[
          InsetBox["", 1380], "InsetString"], 
         TagBox[
          InsetBox["", 1381], "InsetString"], 
         TagBox[
          InsetBox["", 1382], "InsetString"], 
         TagBox[
          InsetBox["", 1383], "InsetString"], 
         TagBox[
          InsetBox["", 1384], "InsetString"], 
         TagBox[
          InsetBox["", 1385], "InsetString"], 
         TagBox[
          InsetBox["", 1386], "InsetString"], 
         TagBox[
          InsetBox["", 1387], "InsetString"], 
         TagBox[
          InsetBox["", 1388], "InsetString"], 
         TagBox[
          InsetBox["", 1389], "InsetString"], 
         TagBox[
          InsetBox["", 1390], "InsetString"], 
         TagBox[
          InsetBox["", 1391], "InsetString"], 
         TagBox[
          InsetBox["", 1392], "InsetString"], 
         TagBox[
          InsetBox["", 1393], "InsetString"], 
         TagBox[
          InsetBox["", 1394], "InsetString"], 
         TagBox[
          InsetBox["", 1395], "InsetString"], 
         TagBox[
          InsetBox["", 1396], "InsetString"], 
         TagBox[
          InsetBox["", 1397], "InsetString"], 
         TagBox[
          InsetBox["", 1398], "InsetString"], 
         TagBox[
          InsetBox["", 1399], "InsetString"], 
         TagBox[
          InsetBox["", 1400], "InsetString"], 
         TagBox[
          InsetBox["", 1401], "InsetString"], 
         TagBox[
          InsetBox["", 1402], "InsetString"], 
         TagBox[
          InsetBox["", 1403], "InsetString"], 
         TagBox[
          InsetBox["", 1404], "InsetString"], 
         TagBox[
          InsetBox["", 1405], "InsetString"], 
         TagBox[
          InsetBox["", 1406], "InsetString"], 
         TagBox[
          InsetBox["", 1407], "InsetString"], 
         TagBox[
          InsetBox["", 1408], "InsetString"], 
         TagBox[
          InsetBox["", 1409], "InsetString"], 
         TagBox[
          InsetBox["", 1410], "InsetString"], 
         TagBox[
          InsetBox["", 1411], "InsetString"], 
         TagBox[
          InsetBox["", 1412], "InsetString"], 
         TagBox[
          InsetBox["", 1413], "InsetString"], 
         TagBox[
          InsetBox["", 1414], "InsetString"], 
         TagBox[
          InsetBox["", 1415], "InsetString"], 
         TagBox[
          InsetBox["", 1416], "InsetString"], 
         TagBox[
          InsetBox["", 1417], "InsetString"], 
         TagBox[
          InsetBox["", 1418], "InsetString"], 
         TagBox[
          InsetBox["", 1419], "InsetString"], 
         TagBox[
          InsetBox["", 1420], "InsetString"], 
         TagBox[
          InsetBox["", 1421], "InsetString"]}, {
         RGBColor[0.6, 0.24, 0.4428931686004542], 
         PointSize[Large], 
         Dashing[{Small, Small}], 
         TagBox[
          InsetBox["\[SmallCircle]", 1422], "InsetString"], 
         TagBox[
          InsetBox["\[SmallCircle]", 1423], "InsetString"], 
         TagBox[
          InsetBox["\[SmallCircle]", 1424], "InsetString"], 
         TagBox[
          InsetBox["\[SmallCircle]", 1425], "InsetString"], 
         TagBox[
          InsetBox["\[SmallCircle]", 1426], "InsetString"], 
         TagBox[
          InsetBox["\[SmallCircle]", 1427], "InsetString"], 
         TagBox[
          InsetBox["\[SmallCircle]", 1428], "InsetString"], 
         TagBox[
          InsetBox["\[SmallCircle]", 1429], "InsetString"]}, {
         RGBColor[0.6, 0.5470136627990908, 0.24], 
         Dashing[Large], 
         TagBox[
          InsetBox["\[Square]", 1430], "InsetString"], 
         TagBox[
          InsetBox["\[Square]", 1431], "InsetString"], 
         TagBox[
          InsetBox["\[Square]", 1432], "InsetString"], 
         TagBox[
          InsetBox["\[Square]", 1433], "InsetString"], 
         TagBox[
          InsetBox["\[Square]", 1434], "InsetString"], 
         TagBox[
          InsetBox["\[Square]", 1435], "InsetString"], 
         TagBox[
          InsetBox["\[Square]", 1436], "InsetString"], 
         TagBox[
          InsetBox["\[Square]", 1437], "InsetString"]}, {}}}], {}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> True,
     AxesLabel -> {
      FormBox["\"Temperature (\[Degree]C)\"", TraditionalForm], 
      FormBox["\"Apparent Strain (\[Mu]\[Epsilon])\"", TraditionalForm]}, 
    AxesOrigin -> {24., 0.}, ImageSize -> {431., Automatic}, Method -> {}, 
    PlotLabel -> FormBox["\"Steel Samples Aparent Strain\"", TraditionalForm],
     PlotRange -> {{24., 95.}, {-75.51385062500002, 3.}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{1.42, 1.42}, {1.5702770125000003`, 
     1.5702770125000003`}}],
   TemplateBox[{"\"CEA Fit\"", "\"Channel 2\"", "\"Channel 3\""}, 
    "PointLegend", DisplayFunction -> (StyleBox[
      StyleBox[
       PaneBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Thickness[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6], 
                    Thickness[Large]], FontSize -> Larger, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[SmallCircle]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.24, 0.4428931686004542], 
                    Dashing[{Small, Small}], 
                    PointSize[Large]], FontSize -> Larger, Plain, 
                    StripOnInput -> False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                GraphicsBox[{{
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    Dashing[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                   Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    Dashing[Large]], {
                    InsetBox[
                    FormBox[
                    StyleBox["\"\[Square]\"", 
                    Directive[
                    EdgeForm[{
                    Opacity[0.3], 
                    GrayLevel[0]}], 
                    RGBColor[0.6, 0.5470136627990908, 0.24], 
                    Dashing[Large]], FontSize -> Larger, Plain, StripOnInput -> 
                    False], TraditionalForm], 
                    NCache[
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}], 
                    Scaled[{0.5, 0.5}]]]}}}, AspectRatio -> Full, 
                 ImageSize -> {20, 10}, PlotRangePadding -> None, 
                 ImagePadding -> 1, 
                 BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
              GridBoxAlignment -> {
               "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], 
             "Grid"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], "Grid"], 
        Alignment -> Left, AppearanceElements -> None, 
        ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"], 
       LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Times"}, 
      Background -> Automatic, StripOnInput -> False]& ), Editable -> True, 
    InterpretationFunction :> (RowBox[{"PointLegend", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   
                   RowBox[{
                    "0.24720000000000014`", ",", "0.24`", ",", "0.6`"}], 
                   "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0.6`", ",", "0.24`", ",", "0.4428931686004542`"}],
                    "]"}], ",", 
                 RowBox[{"Dashing", "[", 
                   RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                 RowBox[{"PointSize", "[", "Large", "]"}]}], "]"}], ",", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"RGBColor", "[", 
                   RowBox[{"0.6`", ",", "0.5470136627990908`", ",", "0.24`"}],
                    "]"}], ",", 
                 RowBox[{"Dashing", "[", "Large", "]"}]}], "]"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
           RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", 
         RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
         RowBox[{"LegendMarkers", "\[Rule]", 
           RowBox[{"{", 
             
             RowBox[{"\"\"", ",", "\"\[SmallCircle]\"", ",", 
               "\"\[Square]\""}], "}"}]}]}], "]"}]& )]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.656948576194246*^9, 3.6569485855137787`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5696849321397457`*^9, 3.569684933606148*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Grids and Tables", "Subtitle",
 CellChangeTimes->{{3.579276385624667*^9, 3.579276388553835*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<Method\>\"", ",", 
       "\"\<RMS \!\(\*SubscriptBox[\(y\), \
\(1\)]\)-\!\(\*SuperscriptBox[SubscriptBox[\(y\), \(1\)], \(*\)]\)\>\"", ",", 
       "\"\<RMS \!\(\*SubscriptBox[\(y\), \
\(2\)]\)-\!\(\*SuperscriptBox[SubscriptBox[\(y\), \(2\)], \(*\)]\)\>\""}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<h = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"hs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\< Explicit\>\""}], 
       ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"experr", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}],
        ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"experr", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}], ",", "4"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<h = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"hs", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", "\"\< Implicit\>\""}], 
       ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"imperr", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}],
        ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"imperr", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2", ",", "1"}], "]"}], "]"}], ",", "4"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<h = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"hs", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\< Explicit\>\""}], 
       ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"experr", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}],
        ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"experr", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], ",", "4"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<h = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"hs", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", "\"\< Implicit\>\""}], 
       ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"imperr", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}],
        ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"imperr", "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], ",", "4"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<h = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"hs", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\< Explicit\>\""}], 
       ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"experr", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}],
        ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"experr", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "2", ",", "1"}], "]"}], "]"}], ",", "4"}], 
        "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<h = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{"hs", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\< Implicit\>\""}], 
       ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"imperr", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "1", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}],
        ",", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"imperr", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "2", ",", "1"}], "]"}], "]"}], ",", "4"}], 
        "]"}]}], "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}],
    ",", 
   RowBox[{"Dividers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"False", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"False", ",", "True"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.579275212596574*^9, 3.5792752538429327`*^9}, {
  3.579275297099407*^9, 3.5792753360276337`*^9}, {3.579275381001206*^9, 
  3.5792755003660336`*^9}, {3.579275534426981*^9, 3.579275537615164*^9}, {
  3.579275588989102*^9, 3.579275619360839*^9}, {3.579275678502222*^9, 
  3.579275756655692*^9}, {3.579275820594349*^9, 3.5792759177019033`*^9}, {
  3.579275970351915*^9, 3.579276104276575*^9}, {3.5792761562345467`*^9, 
  3.5792762101166286`*^9}, {3.579276260303499*^9, 3.579276354420882*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Method\"\>", "\<\"RMS \\!\\(\\*SubscriptBox[\\(y\\), \
\\(1\\)]\\)-\\!\\(\\*SuperscriptBox[SubscriptBox[\\(y\\), \\(1\\)], \
\\(*\\)]\\)\"\>", "\<\"RMS \\!\\(\\*SubscriptBox[\\(y\\), \
\\(2\\)]\\)-\\!\\(\\*SuperscriptBox[SubscriptBox[\\(y\\), \\(2\\)], \
\\(*\\)]\\)\"\>"},
    {"\<\"h = 0.1 Explicit\"\>", "1.730319082332443`*^94", 
     "1.72858876325011`*^97"},
    {"\<\"h = 0.1 Implicit\"\>", "0.010828425120149122`", 
     "0.0028005601680560223`"},
    {"\<\"h = 0.01 Explicit\"\>", "1.3233942136945146384457848042`4.*^472", 
     "1.3220708194808201238073390194249`4.*^475"},
    {"\<\"h = 0.01 Implicit\"\>", "0.0011110221292202427`", 
     "0.00816092192229974`"},
    {"\<\"h = 0.0001 Explicit\"\>", "0.000011166858656048546`", 
     "0.0007288489710337061`"},
    {"\<\"h = 0.0001 Implicit\"\>", "0.0005591786411605422`", 
     "0.0006874684756171639`"}
   },
   AutoDelete->False,
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False, True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.5792762825577717`*^9, 3.579276310408365*^9}, 
   3.5792763548979096`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions and Manipulations", "Subtitle",
 CellChangeTimes->{{3.569685149900528*^9, 3.569685153535334*^9}}],

Cell["Function application to a large dataset", "Subsubtitle",
 CellChangeTimes->{{3.569685160882947*^9, 3.5696851650325546`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fix", "[", "x_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"x", "<", "0"}], ",", 
     RowBox[{"x", "-", "2"}], ",", "x"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5696851694005623`*^9, 3.569685182442185*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", 
     RowBox[{"-", "3"}], ",", "4"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.5696851884325953`*^9, 3.569685201692619*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fix", "/@", "list"}]], "Input",
 CellChangeTimes->{{3.569685205608226*^9, 3.5696852093054323`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", 
   RowBox[{"-", "5"}], ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.5696852107874346`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Setting functions to use specific types for their arguments:", \
"Subsubtitle",
 CellChangeTimes->{{3.6509814030232735`*^9, 3.6509814246905127`*^9}}],

Cell["Check that the argument is a list:", "Text",
 CellChangeTimes->{{3.65098164039085*^9, 3.6509816472982445`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", "?", "ListQ"}], "]"}], "=", 
   RowBox[{"x", "+", "1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.650981651385479*^9, 3.650981663612178*^9}}],

Cell["\<\
Check that the argument is a list of numbers only (from \
http://stackoverflow.com/questions/8786389/what-is-the-recommended-way-to-\
check-that-a-list-is-a-list-of-numbers-in-argumen)\
\>", "Text",
 CellChangeTimes->{{3.6509816674783993`*^9, 3.6509816922888184`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", "/;", 
     RowBox[{"VectorQ", "[", 
      RowBox[{"x", ",", "NumericQ"}], "]"}]}], "]"}], " ", "=", " ", 
   RowBox[{"x", "+", "1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6509816934488845`*^9, 3.650981703370452*^9}, {
  3.6509819678695803`*^9, 3.6509819698606944`*^9}, {3.650982016011334*^9, 
  3.65098203010214*^9}, {3.6509820926097155`*^9, 3.6509821370922594`*^9}, {
  3.6509821943215327`*^9, 3.6509822225171456`*^9}, {3.650982291758106*^9, 
  3.650982294242248*^9}, {3.6509825024531565`*^9, 3.6509825190751076`*^9}}],

Cell["Alternately, we can use __, which means \[OpenCurlyDoubleQuote]one or \
more of\[CloseCurlyDoubleQuote]:", "Text",
 CellChangeTimes->{{3.6509828680330667`*^9, 3.650982875566498*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", "/;", 
     RowBox[{"MatchQ", "[", 
      RowBox[{"x", ",", 
       RowBox[{"{", "__Integer", "}"}]}], "]"}]}], "]"}], "=", 
   RowBox[{"x", "+", "1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.650982877458606*^9, 3.650982907682335*^9}, {
  3.650982947965639*^9, 3.6509829530129275`*^9}, {3.6509830027417717`*^9, 
  3.650983019957756*^9}, {3.6509830571288824`*^9, 3.6509831118830147`*^9}, {
  3.6509831876613483`*^9, 3.650983204344303*^9}, {3.6509832367461557`*^9, 
  3.6509832510209723`*^9}}],

Cell["\<\
Note that this is much faster than {__?NumericQ}, but there isn\
\[CloseCurlyQuote]t an equivalent (that I\[CloseCurlyQuote]ve found) for the \
syntax above which works for any number; just Integer, String, etc.\
\>", "Text",
 CellChangeTimes->{{3.6509830706496563`*^9, 3.650983078378098*^9}, {
  3.6509831083878145`*^9, 3.65098311792336*^9}, {3.650983303016947*^9, 
  3.650983328373397*^9}}],

Cell["\<\
Additionally test whether the numeric quantities in the list are real:\
\>", "Text",
 CellChangeTimes->{{3.650982546583681*^9, 3.6509825655827675`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", "/;", 
     RowBox[{
      RowBox[{"VectorQ", "[", 
       RowBox[{"x", ",", "NumericQ"}], "]"}], "&&", 
      RowBox[{
       RowBox[{"Re", "[", "x", "]"}], "\[Equal]", "x"}]}]}], "]"}], "=", 
   RowBox[{"x", "+", "1"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6509825666068263`*^9, 3.650982603981964*^9}}],

Cell["\<\
For code where performance is important, you can define complex criteria for \
testing, then disable for inner functions after the code is finished:\
\>", "Text",
 CellChangeTimes->{{3.6509826387669535`*^9, 3.65098266318435*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pattNumericList", "=", 
   RowBox[{"_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"VectorQ", "[", 
       RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ":", "pattNumericList"}], "]"}], "=", 
   RowBox[{"x", "+", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6509826825214567`*^9, 3.6509827012265263`*^9}, {
  3.6509828126238976`*^9, 3.6509828229564886`*^9}}],

Cell["\<\
Then, to turn off the pattern check, define pattNumericList = _. NOTE: in the \
expression for pattNumericList, the internal function & goes INSIDE the last \
), or it doesn\[CloseCurlyQuote]t work.\
\>", "Text",
 CellChangeTimes->{{3.650982826986719*^9, 3.650982859816597*^9}, {
  3.6567730903213415`*^9, 3.6567731212961135`*^9}}],

Cell["Design patterns:", "Text",
 CellChangeTimes->{{3.656773123369232*^9, 3.656773127587473*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pattTensor2", "=", 
   RowBox[{"_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"MatrixQ", "[", 
        RowBox[{"#", ",", "NumericQ"}], "]"}], "&&", 
       RowBox[{
        RowBox[{"Dimensions", "[", "#", "]"}], "\[Equal]", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}]}]}], "&"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.656773134714881*^9, 3.6567731458815193`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Text and Strings", "Subtitle",
 CellChangeTimes->{{3.569685255294313*^9, 3.5696852571195164`*^9}}],

Cell["printf() equivalent:", "Text",
 CellChangeTimes->{{3.5696852719395423`*^9, 3.569685275605549*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fish", " ", "=", " ", 
  RowBox[{"StringForm", "[", 
   RowBox[{"\"\<This is my text = ``, and I like ``\>\"", ",", 
    RowBox[{"23.4", "/", "4"}], ",", "\"\<fish\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.569685278694354*^9, 3.5696853294100432`*^9}, {
  3.592314607157035*^9, 3.592314607748069*^9}}],

Cell[BoxData[
 InterpretationBox["\<\"This is my text = \\!\\(5.85`\\), and I like fish\"\>",
  StringForm["This is my text = ``, and I like ``", 5.85, "fish"],
  Editable->False]], "Output",
 CellChangeTimes->{{3.569685303139597*^9, 3.569685330299245*^9}, 
   3.5923146086311197`*^9}]
}, Open  ]],

Cell["\<\
However, this has two difficulties. StringForm works great for displaying \
text on the screen, but what we produced was not truly text:\
\>", "Text",
 CellChangeTimes->{{3.5923145825316267`*^9, 3.5923146033718185`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Head", "[", "fish", "]"}]], "Input",
 CellChangeTimes->{{3.592314611670293*^9, 3.5923146135093985`*^9}}],

Cell[BoxData["StringForm"], "Output",
 CellChangeTimes->{3.592314613804415*^9}]
}, Open  ]],

Cell["\<\
What we really have is a StringForm object. To get it into a string, we need \
to do ToString:\
\>", "Text",
 CellChangeTimes->{{3.592314615867533*^9, 3.592314638154808*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fishstr", " ", "=", " ", 
  RowBox[{"ToString", "[", "fish", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "fishstr", "]"}]}], "Input",
 CellChangeTimes->{{3.5923146418540196`*^9, 3.592314651179553*^9}}],

Cell[BoxData["\<\"This is my text = 5.85, and I like fish\"\>"], "Output",
 CellChangeTimes->{3.5923146514745703`*^9}],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.5923146515015717`*^9}]
}, Open  ]],

Cell["\<\
Also, most of the formatting options we\[CloseCurlyQuote]re used to with \
C/Matlab printf aren\[CloseCurlyQuote]t present. A few workarounds:\
\>", "Text",
 CellChangeTimes->{{3.5923149202409425`*^9, 3.5923149451213655`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"%", ".4", "f", " ", "equivalent"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ToString", "[", 
   RowBox[{"StringForm", "[", 
    RowBox[{"\"\<The part is `` in. long.\>\"", ",", 
     RowBox[{"Round", "[", 
      RowBox[{"1.2345678", ",", "0.0001"}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5923149503466644`*^9, 3.5923150020976243`*^9}}],

Cell[BoxData["\<\"The part is 1.2346 in. long.\"\>"], "Output",
 CellChangeTimes->{3.5923150024366436`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"%5", "i", " ", "leading", " ", "zeros"}], ",", " ", 
    RowBox[{"fixed", " ", "total", " ", "width", " ", "equivalent"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ToString", "[", 
   RowBox[{"StringForm", "[", 
    RowBox[{"\"\<N`` G01 X1. Y1. Z1.\\n\>\"", ",", " ", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"ToString", "/@", 
       RowBox[{"PadLeft", "[", 
        RowBox[{
         RowBox[{"IntegerDigits", "[", "100", "]"}], ",", "5"}], "]"}]}], 
      "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.592315034867499*^9, 3.5923151210574284`*^9}}],

Cell[BoxData["\<\"N00100 G01 X1. Y1. Z1.\\n\"\>"], "Output",
 CellChangeTimes->{3.592315121541456*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Concatinating Strings",
  FontWeight->"Bold"],
 "\nTo concatinate strings (make sure they\[CloseCurlyQuote]re ",
 StyleBox["really",
  FontSlant->"Italic"],
 " strings!), use the <> operator or StringJoin function."
}], "Text",
 CellChangeTimes->{{3.5923147536424136`*^9, 3.5923147879623766`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"fishstr", " ", "<>", " ", 
  "\"\<. Fish are cool\>\""}], "\[IndentingNewLine]", 
 RowBox[{"StringJoin", "[", 
  RowBox[{"ToString", "/@", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.592314791507579*^9, 3.5923148808506894`*^9}}],

Cell[BoxData["\<\"This is my text = 5.85, and I like fish. Fish are \
cool\"\>"], "Output",
 CellChangeTimes->{3.5923148813287168`*^9}],

Cell[BoxData["\<\"12345678910\"\>"], "Output",
 CellChangeTimes->{3.5923148813427176`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["List Manipulations", "Subtitle",
 CellChangeTimes->{{3.5718487512430086`*^9, 3.5718487533958125`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.571848770009842*^9, 3.571848784377467*^9}}],

Cell["\<\
Randomizing the order of the elements. This is hidden in the RandomSample \
documentation; the function doesn\[CloseCurlyQuote]t look like it does this \
with only one argument!\
\>", "Text",
 CellChangeTimes->{{3.694802545340791*^9, 3.694802580317792*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", "list", "]"}]], "Input",
 CellChangeTimes->{{3.6948025509361115`*^9, 3.6948025537762737`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.694802554643323*^9, 3.6948025589135675`*^9}}]
}, Open  ]],

Cell["Locating all the elements that match a rule:", "Text",
 CellChangeTimes->{{3.571848757280219*^9, 3.5718487642534313`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"list", ",", " ", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.571848787949873*^9, 3.571848794221084*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "3"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.5718487944862843`*^9}]
}, Open  ]],

Cell["\<\
What if we want to locate all the elements that follow some criteria (say, x \
> 5)\
\>", "Text",
 CellChangeTimes->{{3.6012403642829313`*^9, 3.6012403887913327`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"list", ",", 
   RowBox[{"x_", "/;", 
    RowBox[{"x", ">", "5"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.601240395633724*^9, 3.601240412045663*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.60124040814744*^9, 3.6012404124916887`*^9}}]
}, Open  ]],

Cell["Extracting a series of list elements given a list of indexes", "Text",
 CellChangeTimes->{{3.592241170228018*^9, 3.5922411788285093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"idxs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Extract", "[", 
  RowBox[{"list", ",", " ", "idxs"}], "]"}]}], "Input",
 CellChangeTimes->{{3.5922411848428535`*^9, 3.5922412171487017`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "9", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.5922412183757715`*^9, 3.5922412266552453`*^9}, 
   3.6587854826770625`*^9}]
}, Open  ]],

Cell["\<\
What if we have the index we want to manipulate as a list, and want to \
replace just that element with a new value? Note that this does not update \
list; we would need to use list = ReplacePart...\
\>", "Text",
 CellChangeTimes->{{3.6587857623054676`*^9, 3.6587857780354905`*^9}, {
  3.6587858364515734`*^9, 3.65878584802359*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"idx", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ReplacePart", "[", 
  RowBox[{"list", ",", 
   RowBox[{"idx", "\[Rule]", "4"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6587857838964987`*^9, 3.658785831860567*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.658785821708553*^9, 3.658785832400568*^9}}]
}, Open  ]],

Cell[TextData[{
 "But that\[CloseCurlyQuote]s a lot of copying! What if I want to just assign \
that part? Not sure this is the correct way to do this, but this requires \
\[OpenCurlyDoubleQuote]0\[CloseCurlyDoubleQuote] time in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", whereas the above scales with the size of the object list."
}], "Text",
 CellChangeTimes->{{3.6587858511535945`*^9, 3.658785867071618*^9}, {
  3.658786086187937*^9, 3.6587861024999604`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Part", "[", 
    RowBox[{"list", ",", 
     RowBox[{"Sequence", "@@", "idx"}]}], "]"}], "=", "4"}], 
  ";"}], "\[IndentingNewLine]", "list"}], "Input",
 CellChangeTimes->{{3.658785869552622*^9, 3.6587858842336426`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.658785885076644*^9}]
}, Open  ]],

Cell["\<\
What if I have a list of positions that all need to be updated? This will set \
them all to 42, but we have the index of the current entry (#), so we could \
do something more interesting. This shows up in my Octree implementation for \
distance field computation (skeletonization project)\
\>", "Text",
 CellChangeTimes->{{3.6587862217731333`*^9, 3.658786235196152*^9}, {
  3.65878628927523*^9, 3.65878633018429*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Set", "[", 
     RowBox[{
      RowBox[{"Part", "[", 
       RowBox[{"list", ",", 
        RowBox[{"Sequence", "@@", "#"}]}], "]"}], ",", "42"}], "]"}], "&"}], "/@",
    "idxs"}], ";"}], "\[IndentingNewLine]", "list"}], "Input",
 CellChangeTimes->{{3.6587862459871683`*^9, 3.658786275992211*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"42", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42", ",", "5", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "42"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.658786276982212*^9}]
}, Open  ]],

Cell["\<\
Find which of a list of candidate indices has a certain value in the list:\
\>", "Text",
 CellChangeTimes->{{3.6587854229229765`*^9, 3.6587854480240126`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"interesting", "=", 
  RowBox[{"Position", "[", 
   RowBox[{
    RowBox[{"Extract", "[", 
     RowBox[{"list", ",", "idxs"}], "]"}], ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6587854500940156`*^9, 3.658785497187083*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6587854783740563`*^9, 3.6587854978670835`*^9}}]
}, Open  ]],

Cell["\<\
A much more esoteric way to accomplish the same thing, without any particular \
benefit...\
\>", "Text",
 CellChangeTimes->{{3.6587855041640935`*^9, 3.6587855174481134`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"idxs", ",", 
   RowBox[{"_", "?", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Extract", "[", 
        RowBox[{"list", ",", "#"}], "]"}], "\[Equal]", "1"}], "&"}], ")"}]}], 
   ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"Heads", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6587855195481167`*^9, 3.658785546368155*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "1", "}"}], "}"}]], "Output",
 CellChangeTimes->{3.6587855466281557`*^9}]
}, Open  ]],

Cell["\<\
Note on the above, we have to specify level {1} only, or else it tries, \
successively, every layer of the list in turn, and we have to turn of \
checking Heads, or it trys to evaluate Extract[list, List] == 1, which throws \
an error. Note that Extract[list,#]==1 is about twice as fast as \
list[[Sequence@@#]==1 in my tests with 3D sparse arrays.\
\>", "Text",
 CellChangeTimes->{{3.658785552038163*^9, 3.658785604633239*^9}, {
  3.6587941367244024`*^9, 3.6587941849871626`*^9}}],

Cell["\<\
Sometimes, I want to find the minimum entry in a list, based on a single \
element of each item in the list. For example, in OctreeSDF, I call a \
function which returns a list of {distance, grad1, grad2, grad3}, and I want \
to take the entry with the smallest distance, but not throw away the \
associated other elements. I found a few ways to do this, and as usual, \
patterns are the best way, approaching the speed of a straight Min.\
\>", "Text",
 CellChangeTimes->{{3.6630212351540103`*^9, 3.663021344058239*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "c", ",", "d"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "e", ",", "f"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "a", ",", "c"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"list", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"TakeSmallestBy", "[", 
      RowBox[{"list", ",", "First", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"MinimalBy", "[", 
      RowBox[{"list", ",", "First", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SelectFirst", "[", 
      RowBox[{"list", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "\[Equal]", 
         RowBox[{"Min", "[", 
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}]}], "&"}]}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"FirstCase", "[", 
      RowBox[{"list", ",", " ", 
       RowBox[{"x_", "/;", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
          RowBox[{"Min", "[", 
           RowBox[{"list", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}]}], ")"}]}]}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"FirstCase", "[", 
      RowBox[{"list", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"list", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}], ",", "_", ",", 
         "_"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "10000"}], "}"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6630213578520284`*^9, 3.6630213677555947`*^9}, {
  3.6694109632209635`*^9, 3.66941101562096*^9}, {3.669411057805373*^9, 
  3.669411058885435*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0156001`", ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6630213496975617`*^9, 3.6630213685896425`*^9}, 
   3.6694110172880554`*^9, 3.669411060759542*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1092007`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "a", ",", "c"}], "}"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6630213496975617`*^9, 3.6630213685896425`*^9}, 
   3.6694110172880554`*^9, 3.6694110608565474`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5616036`", ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "a", ",", "c"}], "}"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6630213496975617`*^9, 3.6630213685896425`*^9}, 
   3.6694110172880554`*^9, 3.6694110614165792`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1092007`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "a", ",", "c"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6630213496975617`*^9, 3.6630213685896425`*^9}, 
   3.6694110172880554`*^9, 3.6694110615195856`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.1248008`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "a", ",", "c"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6630213496975617`*^9, 3.6630213685896425`*^9}, 
   3.6694110172880554`*^9, 3.6694110616455927`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0468003`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "a", ",", "c"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6630213496975617`*^9, 3.6630213685896425`*^9}, 
   3.6694110172880554`*^9, 3.6694110616945953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["SparseArrays", "Subsubsection",
 CellChangeTimes->{{3.662604457249795*^9, 3.662604459016701*^9}}],

Cell["\<\
Sparse Arrays do not play well with Cases (it expands the sparse array), and \
I can\[CloseCurlyQuote]t get Position to work at all. Instead, use \
ArrayRules[] to get the contents of the sparse array, then use patterns on \
that to get what you want.\
\>", "Text",
 CellChangeTimes->{{3.662604464616026*^9, 3.6626045139023476`*^9}}],

Cell[TextData[{
 "It is much, much faster go generate a long list of rules and ",
 StyleBox["then",
  FontSlant->"Italic"],
 " create a sparse array than to repeatedly do ReplaceParts to populate a big \
array. Note that if you\[CloseCurlyQuote]re generating it in a recursive \
manner, Sow and Reap are an order of magnitude or more faster than having a \
global variable you Join[] new entries to on every evaluation."
}], "Text",
 CellChangeTimes->{{3.6630266963603735`*^9, 3.6630267780750475`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Overriding Subscript", "Subtitle",
 CellChangeTimes->{{3.6567722405437374`*^9, 3.6567722592578077`*^9}, {
  3.6567882292643986`*^9, 3.6567882323265743`*^9}}],

Cell["\<\
Subscript has no intrinsic assignment in mathematica. We can assign functions \
to specific subscripts:\
\>", "Text",
 CellChangeTimes->{{3.656772260941904*^9, 3.6567722642190914`*^9}, {
  3.656788235194738*^9, 3.6567882654684696`*^9}}],

Cell[BoxData[{
 RowBox[{
  SubscriptBox["T_", "xx"], ":=", 
  RowBox[{"T", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["T_", "yy"], ":=", 
  RowBox[{"T", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["T_", "xy"], ":=", 
  RowBox[{"T", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6567721876347113`*^9, 3.6567721941440835`*^9}, {
  3.656773546177415*^9, 3.6567735467774496`*^9}, {3.656773608663989*^9, 
  3.656773627262053*^9}, {3.6567737095627604`*^9, 3.6567737197373424`*^9}, {
  3.656786947201069*^9, 3.6567869599757996`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", " ", "b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", " ", "d"}], "}"}]}], "}"}], "xx"]], "Input",
 CellChangeTimes->{{3.6567882756060495`*^9, 3.6567882843645506`*^9}}],

Cell[BoxData["a"], "Output",
 CellChangeTimes->{3.6567882848085756`*^9}]
}, Open  ]],

Cell["\<\
We can also override the whole subscript operation with a specific function\
\>", "Text",
 CellChangeTimes->{{3.656788289792861*^9, 3.656788299522417*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["a_", "b_"], ":=", 
  RowBox[{"a", "+", "b"}]}]], "Input",
 CellChangeTimes->{{3.656788302815606*^9, 3.6567883124771585`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["25", "c"]], "Input",
 CellChangeTimes->{{3.656788320792634*^9, 3.6567883226147385`*^9}}],

Cell[BoxData[
 RowBox[{"25", "+", "c"}]], "Output",
 CellChangeTimes->{3.656788323711801*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Heads and Manipulating Heads", "Subtitle",
 CellChangeTimes->{{3.658784972611322*^9, 3.6587849795443316`*^9}}],

Cell["\<\
Drop a list into a function as if it were a list of arguments: Apply or @@\
\>", "Text",
 CellChangeTimes->{{3.6587849891353455`*^9, 3.658785014921383*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"args", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a_", ",", "b_", ",", "c_"}], "]"}], ":=", 
  RowBox[{"a", "+", "b", "+", "c"}]}], "\[IndentingNewLine]", 
 RowBox[{"f", "@@", "args"}]}], "Input",
 CellChangeTimes->{{3.658785043667424*^9, 3.6587850638334537`*^9}}],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.6587850641734543`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Advanced Stuff...", "Section",
 CellChangeTimes->{{3.68799444576727*^9, 3.6879944514715967`*^9}}],

Cell[CellGroupData[{

Cell["Customizing key bindings", "Subsection",
 CellChangeTimes->{{3.6883231200150986`*^9, 3.6883231231182756`*^9}}],

Cell[TextData[{
 "Keybindings are stored in \
ProgramFiles/Wolfram/Mathematica/<version>/SystemFiles/FrontEnd/TextResources/\
Windows/KeyEventTranslations.tr\nSome people say you can make a copy of this \
in your user directory, but I haven\[CloseCurlyQuote]t had any luck. \
Following \n\
http://stackoverflow.com/questions/7327411/is-there-a-way-around-using-and-\
for-part-in-mathematica/7328495\nI added the following customization on my \
system to automatically generate matching brackets, braces, and double \
brackets\n\n",
 StyleBox["Note:",
  FontWeight->"Bold"],
 " Mathemtaica automatically replaces the DoubleBracket calls in the text \
below. So copy and paste the following and then remove the ***\
\[CloseCurlyQuote]s (3 places).\n\n(*Ben\[CloseCurlyQuote]s custom key \
bindings*)\nItem[KeyEvent[\[OpenCurlyDoubleQuote]]\[CloseCurlyDoubleQuote], \
Modifiers -> {Control}],\n        FrontEndExecute[{\n            \
FrontEnd`NotebookWrite[FrontEnd`InputNotebook[],\n                \
\[OpenCurlyDoubleQuote]\\[Right***DoubleBracket]\[CloseCurlyDoubleQuote], \
After]\n        }]], \nItem[KeyEvent[\[OpenCurlyDoubleQuote][\
\[OpenCurlyDoubleQuote], Modifiers -> {Control}],\n        FrontEndExecute[{\n\
            FrontEnd`NotebookWrite[FrontEnd`InputNotebook[],\n                \
\[OpenCurlyDoubleQuote]\\[Left***DoubleBracket]\[CloseCurlyDoubleQuote], \
After],\n            FrontEnd`NotebookWrite[FrontEnd`InputNotebook[],\n       \
         \[OpenCurlyDoubleQuote]\\[Right***DoubleBracket]\
\[CloseCurlyDoubleQuote], Before]\n        }]],  \nItem[KeyEvent[\
\[OpenCurlyDoubleQuote][\[OpenCurlyDoubleQuote], Modifiers -> {Shift}],\n     \
   FrontEndExecute[{\n            \
FrontEnd`NotebookWrite[FrontEnd`InputNotebook[],\n                \
\[OpenCurlyDoubleQuote]{\[OpenCurlyDoubleQuote], After],\n            \
FrontEnd`NotebookWrite[FrontEnd`InputNotebook[],\n                \
\[OpenCurlyDoubleQuote]}\[CloseCurlyDoubleQuote], Before]\n        }]], \n\
Item[KeyEvent[\[OpenCurlyDoubleQuote][\[OpenCurlyDoubleQuote]],\n        \
FrontEndExecute[{\n            \
FrontEnd`NotebookWrite[FrontEnd`InputNotebook[],\n                \
\[OpenCurlyDoubleQuote][\[OpenCurlyDoubleQuote], After],\n            \
FrontEnd`NotebookWrite[FrontEnd`InputNotebook[],\n                \
\[OpenCurlyDoubleQuote]]\[CloseCurlyDoubleQuote], Before]\n        }]], "
}], "Text",
 CellChangeTimes->{{3.6883231250363855`*^9, 3.6883232426731143`*^9}, {
  3.689779935091407*^9, 3.6897800546942472`*^9}, {3.6946158609129086`*^9, 
  3.6946158733516197`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["step[] - execute one step of the evaluation of an expression", \
"Subsection",
 CellChangeTimes->{{3.687994457230926*^9, 3.687994469375621*^9}}],

Cell["\<\
This from \
http://mathematica.stackexchange.com/questions/334/how-do-i-evaluate-only-one-\
step-of-an-expression\
\>", "Text",
 CellChangeTimes->{{3.6879944708067026`*^9, 3.687994480872278*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"step", ",", "HoldAll"}], "]"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"step", "[", "expr_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "P", "}"}], ",", 
    RowBox[{
     RowBox[{"P", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"P", "=", 
         RowBox[{
          RowBox[{"Return", "[", 
           RowBox[{"#", ",", "TraceScan"}], "]"}], "&"}]}], ")"}], "&"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"TraceScan", "[", 
      RowBox[{"P", ",", "expr", ",", 
       RowBox[{"TraceDepth", "\[Rule]", "1"}]}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6879944737458706`*^9, 3.6879944737478704`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"step", "[", 
  RowBox[{"2", "+", 
   RowBox[{"26", "*", 
    RowBox[{"N", "[", 
     RowBox[{"Sin", "[", "3", "]"}], "]"}]}], "-", 
   RowBox[{"Cos", "[", "2.", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.687994496593178*^9, 3.6879945537114444`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{
  "2", "+", "3.6691202095565476`", "\[VeryThinSpace]", "+", 
   "0.4161468365471424`"}],
  HoldForm]], "Output",
 CellChangeTimes->{{3.687994521522603*^9, 3.6879945543394804`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Furhter ",
 StyleBox["Reading", "Subsection"]
}], "Subsection",
 CellChangeTimes->{{3.687994751132736*^9, 3.687994756373036*^9}}],

Cell["http://www.verbeia.com/mathematica/tips/Tricks.html", "Text",
 CellChangeTimes->{3.6879947768702087`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{846, 858},
WindowMargins->{{415, Automatic}, {Automatic, 61}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 179, 5, 101, "Title"],
Cell[761, 29, 135, 1, 56, "Subtitle"],
Cell[899, 32, 321, 7, 49, "Text"],
Cell[1223, 41, 429, 13, 69, "Input"],
Cell[CellGroupData[{
Cell[1677, 58, 118, 2, 30, "Input"],
Cell[1798, 62, 93, 2, 30, "Output"]
}, Open  ]],
Cell[1906, 67, 385, 8, 49, "Text"],
Cell[2294, 77, 450, 10, 50, "Input"],
Cell[2747, 89, 123, 1, 30, "Text"],
Cell[2873, 92, 364, 12, 69, "Input"],
Cell[CellGroupData[{
Cell[3262, 108, 48, 1, 30, "Input"],
Cell[3313, 111, 139, 3, 30, "Output"]
}, Open  ]],
Cell[3467, 117, 483, 9, 106, "Text"],
Cell[CellGroupData[{
Cell[3975, 130, 108, 1, 56, "Subtitle"],
Cell[4086, 133, 184, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[4295, 143, 172, 4, 30, "Input"],
Cell[4470, 149, 69, 1, 30, "Output"]
}, Open  ]],
Cell[4554, 153, 310, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[4889, 164, 288, 8, 30, "Input"],
Cell[5180, 174, 301, 9, 30, "Output"]
}, Open  ]],
Cell[5496, 186, 376, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[5897, 198, 174, 4, 30, "Input"],
Cell[6074, 204, 127, 3, 30, "Output"]
}, Open  ]],
Cell[6216, 210, 507, 12, 68, "Text"],
Cell[CellGroupData[{
Cell[6748, 226, 402, 12, 30, "Input"],
Cell[7153, 240, 306, 9, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7508, 255, 98, 1, 56, "Subtitle"],
Cell[7609, 258, 129, 1, 33, "Subsubtitle"],
Cell[CellGroupData[{
Cell[7763, 263, 753, 20, 69, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[8519, 285, 166, 4, 30, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[8688, 291, 716, 20, 30, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[9441, 316, 3417, 92, 176, "Input"],
Cell[12861, 410, 158268, 2695, 1034, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171166, 3110, 116, 1, 33, "Subsubtitle"],
Cell[171285, 3113, 233, 6, 30, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171555, 3124, 178, 2, 33, "Subsubtitle"],
Cell[CellGroupData[{
Cell[171758, 3130, 582, 15, 50, "Input"],
Cell[172343, 3147, 13844, 251, 234, "Output"]
}, Open  ]],
Cell[186202, 3401, 326, 6, 68, "Text"],
Cell[CellGroupData[{
Cell[186553, 3411, 316, 8, 30, "Input"],
Cell[186872, 3421, 14983, 280, 234, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201904, 3707, 173, 3, 33, "Subsubtitle"],
Cell[202080, 3712, 533, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[202638, 3725, 1342, 34, 126, "Input"],
Cell[203983, 3761, 123029, 3457, 238, "Output"]
}, Open  ]],
Cell[327027, 7221, 94, 1, 30, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[327170, 7228, 102, 1, 56, "Subtitle"],
Cell[CellGroupData[{
Cell[327297, 7233, 5034, 141, 187, "Input"],
Cell[332334, 7376, 1202, 25, 143, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[333585, 7407, 113, 1, 56, "Subtitle"],
Cell[333701, 7410, 130, 1, 33, "Subsubtitle"],
Cell[333834, 7413, 285, 8, 30, "Input"],
Cell[334122, 7423, 228, 6, 30, "Input"],
Cell[CellGroupData[{
Cell[334375, 7433, 123, 2, 30, "Input"],
Cell[334501, 7437, 156, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334694, 7446, 155, 2, 33, "Subsubtitle"],
Cell[334852, 7450, 117, 1, 30, "Text"],
Cell[334972, 7453, 216, 6, 30, "Input"],
Cell[335191, 7461, 278, 5, 49, "Text"],
Cell[335472, 7468, 599, 12, 30, "Input"],
Cell[336074, 7482, 188, 2, 30, "Text"],
Cell[336265, 7486, 568, 13, 30, "Input"],
Cell[336836, 7501, 402, 7, 49, "Text"],
Cell[337241, 7510, 162, 3, 30, "Text"],
Cell[337406, 7515, 383, 11, 30, "Input"],
Cell[337792, 7528, 239, 4, 49, "Text"],
Cell[338034, 7534, 512, 15, 50, "Input"],
Cell[338549, 7551, 341, 6, 49, "Text"],
Cell[338893, 7559, 98, 1, 30, "Text"],
Cell[338994, 7562, 455, 13, 30, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[339498, 7581, 104, 1, 56, "Subtitle"],
Cell[339605, 7584, 104, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[339734, 7589, 331, 6, 30, "Input"],
Cell[340068, 7597, 285, 5, 30, "Output"]
}, Open  ]],
Cell[340368, 7605, 230, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[340623, 7613, 128, 2, 30, "Input"],
Cell[340754, 7617, 79, 1, 30, "Output"]
}, Open  ]],
Cell[340848, 7621, 184, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[341057, 7629, 237, 4, 50, "Input"],
Cell[341297, 7635, 118, 1, 30, "Output"],
Cell[341418, 7638, 77, 1, 30, "Output"]
}, Open  ]],
Cell[341510, 7642, 236, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[341771, 7650, 418, 10, 50, "Input"],
Cell[342192, 7662, 107, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342336, 7668, 641, 16, 50, "Input"],
Cell[342980, 7686, 102, 1, 50, "Output"]
}, Open  ]],
Cell[343097, 7690, 324, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[343446, 7702, 378, 9, 50, "Input"],
Cell[343827, 7713, 135, 2, 30, "Output"],
Cell[343965, 7717, 90, 1, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[344104, 7724, 108, 1, 56, "Subtitle"],
Cell[344215, 7727, 394, 11, 30, "Input"],
Cell[344612, 7740, 267, 5, 49, "Text"],
Cell[CellGroupData[{
Cell[344904, 7749, 138, 2, 30, "Input"],
Cell[345045, 7753, 328, 9, 30, "Output"]
}, Open  ]],
Cell[345388, 7765, 128, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[345541, 7770, 158, 3, 30, "Input"],
Cell[345702, 7775, 141, 4, 30, "Output"]
}, Open  ]],
Cell[345858, 7782, 177, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[346060, 7790, 204, 5, 30, "Input"],
Cell[346267, 7797, 356, 11, 30, "Output"]
}, Open  ]],
Cell[346638, 7811, 144, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[346807, 7816, 465, 13, 50, "Input"],
Cell[347275, 7831, 181, 4, 30, "Output"]
}, Open  ]],
Cell[347471, 7838, 342, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[347838, 7848, 311, 8, 50, "Input"],
Cell[348152, 7858, 326, 9, 30, "Output"]
}, Open  ]],
Cell[348493, 7870, 475, 9, 49, "Text"],
Cell[CellGroupData[{
Cell[348993, 7883, 267, 7, 50, "Input"],
Cell[349263, 7892, 302, 9, 30, "Output"]
}, Open  ]],
Cell[349580, 7904, 428, 7, 68, "Text"],
Cell[CellGroupData[{
Cell[350033, 7915, 357, 10, 50, "Input"],
Cell[350393, 7927, 305, 9, 30, "Output"]
}, Open  ]],
Cell[350713, 7939, 168, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[350906, 7946, 254, 6, 30, "Input"],
Cell[351163, 7954, 143, 3, 30, "Output"]
}, Open  ]],
Cell[351321, 7960, 184, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[351530, 7968, 416, 12, 30, "Input"],
Cell[351949, 7982, 117, 3, 30, "Output"]
}, Open  ]],
Cell[352081, 7988, 492, 8, 68, "Text"],
Cell[352576, 7998, 530, 8, 87, "Text"],
Cell[CellGroupData[{
Cell[353131, 8010, 3303, 98, 145, "Input"],
Cell[356437, 8110, 221, 5, 30, "Output"],
Cell[356661, 8117, 314, 9, 30, "Output"],
Cell[356978, 8128, 314, 9, 30, "Output"],
Cell[357295, 8139, 284, 7, 30, "Output"],
Cell[357582, 8148, 284, 7, 30, "Output"],
Cell[357869, 8157, 284, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358190, 8169, 103, 1, 39, "Subsubsection"],
Cell[358296, 8172, 343, 6, 49, "Text"],
Cell[358642, 8180, 502, 9, 68, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[359193, 8195, 163, 2, 56, "Subtitle"],
Cell[359359, 8199, 246, 5, 30, "Text"],
Cell[359608, 8206, 728, 19, 78, "Input"],
Cell[CellGroupData[{
Cell[360361, 8229, 278, 8, 30, "Input"],
Cell[360642, 8239, 72, 1, 30, "Output"]
}, Open  ]],
Cell[360729, 8243, 165, 3, 30, "Text"],
Cell[360897, 8248, 165, 4, 34, "Input"],
Cell[CellGroupData[{
Cell[361087, 8256, 117, 2, 30, "Input"],
Cell[361207, 8260, 93, 2, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[361349, 8268, 116, 1, 56, "Subtitle"],
Cell[361468, 8271, 166, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[361659, 8278, 402, 10, 69, "Input"],
Cell[362064, 8290, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362173, 8296, 103, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[362301, 8301, 116, 1, 49, "Subsection"],
Cell[362420, 8304, 2555, 41, 733, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365012, 8350, 150, 2, 49, "Subsection"],
Cell[365165, 8354, 205, 5, 49, "Text"],
Cell[365373, 8361, 745, 21, 88, "Input"],
Cell[CellGroupData[{
Cell[366143, 8386, 278, 7, 30, "Input"],
Cell[366424, 8395, 214, 6, 30, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[366687, 8407, 147, 4, 49, "Subsection"],
Cell[366837, 8413, 111, 1, 30, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

